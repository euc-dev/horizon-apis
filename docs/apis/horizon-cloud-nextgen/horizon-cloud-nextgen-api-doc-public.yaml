openapi: 3.0.1
info:
  title: Horizon Cloud Service - next-gen
  description: "This is a API documentation for the VMware Horizon Cloud Service -\
    \ next-gen\n\n*Horizon Cloud is a modern cloud-first, multi-cloud Desktop as a\
    \ Service (DaaS) deployment with Thin Edge Infrastructure. The service provides\
    \ you with a global view of your desktops and applications spanning across on-premises\
    \ and cloud environments. Regardless of the location of your desktop and application\
    \ deployments, Horizon Cloud enables you to consistently manage and monitor them.*\n\
    \n<hr />\n\n# Getting Started with Horizon Cloud Service - next-gen\n\n## Onboarding\
    \ Customer to Data Center (HDC)\n- Once you receive your CSP invitation link in\
    \ the email, please redeem it by clicking on the url. If you have not received\
    \ an email, please reach out to VMWare.\n  + Then do CSP Login\n  + You have an\
    \ option to create to use an existing CSP organization or create a new one to\
    \ onboard to Horizon Cloud Services.\n  + As an organization owner, need to go\
    \ to \"Identity & Access Management\" and edit the existing user to add the following\
    \ role:\n    - **Administrator**\n    <br/>\n  Customer may add more users and\
    \ assign the role above. Administrator role is required to access entire UI and\
    \ API.\n\n- All the APIs need a bearer token generated from an API token. Follow\
    \ these steps to get your API token.\n  + Go to your account and API Tokens tab.\n\
    \  + Click on Generate a New API TOKEN link. Provide a name for the API token\
    \ and keep the defaults.\n  + Save the API token information and keep it handy.\n\
    \n## General API Notes\n\n### Authentication\n*Please take a note of above two\
    \ steps The same authentication scheme (\"Authorization: Bearer\") is required\
    \ for all API calls*\n\n### Steps\n\n**(1) Obtain a CSP Access Token**\n\nLogin\
    \ to CSP Portal and obtain the following:\n- CSP Org ID\n  + Take the 'Long Organization\
    \ ID' from the 'View Organization' page in CSP\n- EITHER CSP oAuth Application\
    \ ID and oAuth Application secret \n  + These can be found when originally creating\
    \ the OAuth App within your Organization page, or can be regenerated from the\
    \ same area. Note: OAuth App should have the Horizon Cloud Service listed as a\
    \ Service Role\n- OR CSP API Token\n  + See the previous section for details about\
    \ create API Tokens\nAll API calls require authentication using an Access Token.\n\
    Choose one of the following methods to obtain an Access Token\n\n**(1a) To obtain\
    \ an Access Token by using a CSP API Token**\n\nOne authentication scheme is to\
    \ use an \"Access Token\", which is obtained by making an API call that takes\
    \ your  API Token as input, and returns an Access Token. This Access Token is\
    \ then supplied as a bearer token in an \"Authentication\" header with every API\
    \ request. All the following steps will assume this authentication header, it\
    \ will not be explicitly mentioned each time.\nNote: {{csp-url}} value will typically\
    \ be [https://console.cloud.vmware.com](https://console.cloud.vmware.com)\n```\n\
    POST https://{{csp-url}}/csp/gateway/am/api/auth/api-tokens/authorize\n```\n```\
    \ \nHeaders:\nContent-Type : application/x-www-form-urlencoded\nRequest Body:\n\
    refresh_token : {{YOUR-API-TOKEN-FROM-GETTING-STARTED-STEP-2}}\nResponse:\n{\n\
    \    \"id_token\": {{id-token-value}},\n    \"token_type\": \"bearer\",\n    \"\
    expires_in\": 1799,\n    \"scope\": \"scope.....<snippet>\",\n    \"access_token\"\
    : \"{{access-token-value}}\",\n    \"refresh_token\": \"{{refresh-token-value}}\"\
    \n}\n```\nAn example using curl:\n```\n% curl --request POST '<csp-host>/csp/gateway/am/api/auth/api-tokens/authorize'\
    \  \\\n     --header 'Content-Type: application/x-www-form-urlencoded' \\\n  \
    \   --data-urlencode 'refresh_token=<api-token-from-CSP>'\n\n```\n\nTake a note\
    \ of the  *{{access-token-value}}*. This is what you will use in a header for\
    \ all subsequent API calls.\n```\nAuthentication : Bearer {{access-token-value}}\n\
    ```\n**(1b) To obtain an Access Token by using a CSP OAuth application**\nObtain\
    \ the Titan access token by using the CSP oAuth credentials.\n```\nPOST https://{{csp-url}}/csp/gateway/am/api/auth/authorize\n\
    ```\n```\nHeaders:\nContent-type: application/x-www-form-urlencoded\nAuthorization\
    \ : Basic\n  Username = {{oAuth Application ID}}\n  Password = {{oAuth Application\
    \ secret}}\nRequest Body:\ngrant_type : client_credentials\n\nResponse: 200 OK\n\
    \n  {\n    \"id_token\": null,\n    \"token_type\": \"bearer\",\n    \"expires_in\"\
    : 1799,\n    \"scope\": \"scope.....<snippet>\",\n    \"access_token\": \"{{access-token-value}}\"\
    ,\n    \"refresh_token\": \"{{refresh-token-value}}\"\n  }\n```\nTake a note of\
    \ the  *{{access-token-value}}*. This is what you will use in a header for all\
    \ subsequent API calls.\n```\nAuthentication : Bearer {{access-token-value}}\n\
    ```\n"
  termsOfService: http://www.omnissa.com
  contact:
    name: Omnissa
    url: http://www.omnissa.com
    email: info@vmware.com
  license:
    name: License Info
    url: http://www.omnissa.com
servers:
- url: https://cloud-sg.horizon.vmware.com
tags:
- name: Images
  description: Operations related to images. These provide representation of images
    specifying OS type, OS details, GPU/non-GPU and so on.
- name: ApplicationDefinition
  description: Operations related to Application Definitions. These provide representation
    of applications for an organization.
- name: ApplicationInventory
  description: Operations related to Application Inventory. These provide representation
    of applications for an image.
- name: Copies
  description: Operations related to image copies. These specify details like resource
    location that are needed to access an image in that provider region.
- name: Users
  description: Operations for users. These provide representation of application icons
    for end users.
- name: Versions
  description: Operations related to image versions. These specify agent details installed
    on this version, applications installed on the image version and so on.
- name: Markers
  description: Operations related to markers. These provide representation of markers
    associated with images and versions.
- name: Providers
  description: Provides API to the known providers. There should be one for each provider
    we support. There is no API to edit or create providers; the supported providers
    are built-in.
- name: Provider Instances
  description: Management of provider instances. These define where the customer resources
    are located, where desktops should be created, etc.
- name: Azure Infrastructure
  description: Access to Azure infrastructure resources, using 'Azure' provider instances.
- name: Edge Deployments
  description: Management of Edge deployments. Edge Gateways provide adjacent access
    to hypervisor or cloud assets.
- name: UAG Deployments
  description: Management of UAG deployments. UAGs provide secure, end-to-end connections
    from users to their virtual desktops, sessions or applications.
- name: Active Directories
  description: All operations related to creating, deleting, fetching and updating
    the Active Directory configurations that are used in Pools. These configurations
    are used for defining how pool VMs are to join a corporate AD domain
- name: Pools
  description: Management of pools. All operations related to creating, deleting and
    updating pool definition like spare policy, power policy, networks, images, etc.
- name: Batch Pools
  description: Batch management of pools such as Delete, Patch, and take Action.
- name: Pool Virtual Machines
  description: Provides some level of direct control over virtual machines inside
    pools.
- name: SSO Configurations
  description: All operations related to creating, deleting, fetching and updating
    the SSO configurations that are used in edge deployments. These configurations
    are used for defining how SSO will deployed and configured at the edge gateway
- name: VM Skus
  description: Management of VM Sku models
- name: AppVersions
  description: 'AppVersion is the particular version of software installed/captured
    in a given capture session. As part of the Cloud native capture only one AppVersion
    can be part of a Package. AppVersion was called in the past as "App Bundle" in
    the 3.x terminology. This is uniquely identified by a uuid which is generated
    during the capture session. With application package merge, it is possible to
    have the same AppVersion in multiple packages and also that single Package can
    have more than one AppVersion contained in it. Eg: "Microsoft Office 2013 sp1"
    can be the application version which can be captured under a virtual application
    named "Microsoft Office", and this version can reside on a package "Microsoft_Office_2013_SP1_Clean.vhd"'
- name: Organization
  description: Operations for all resources related to the organization related to
    application inventory
- name: AppPackages
  description: Each Package stores one or more Programs required for the Application
    to run. A single Package can be delivered to multiple computers and users.For
    the packaging process, you must select a computer as the packaging machine and
    then build the Package on the packaging machine where the programs you want to
    include in the Package are installed. You can provide additional Package metadata
    on the packaging machine such as name of the Packager and any additional notes
    about the Package.
- name: Applications
  description: ' Application is the Virtual Application container which will be created
    by the administrator to store the different application packages captured or imported
    to be stored under. This will act as a grouping for different versions of the
    same software, so that the administrator can mark one of the application versions
    using a marker and that can be used in an assignment. Eg: "Microsoft Office" will
    be created as an application which is the virtual application container which
    will contain "Microsoft Office 2013 sp1" as an application version under it, "Microsoft_Office_2013_SP1_Clean.vhd"
    can be the application package containing the particular application version'
- name: App Import
  description: The platform provisions two fileshares in the customer subscription
    for each Microsoft Azure pod onboarded, as follows - Staging is where application
    packages that need to be imported are staged and is also a location from which
    application packages can be delivered to end users.Delivery is used solely for
    delivering application packages to end users
paths:
  /imagemgmt/v2/app-def/queryByImageReference:
    post:
      tags:
      - ApplicationDefinition
      summary: Query for application definitions by Image Reference(streamId, versionId)
        grouped by application name and publisher
      operationId: queryByImageReferenceV2
      parameters:
      - name: org_id
        in: query
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationDefinitionImageReferenceListRepresentation'
        required: true
      responses:
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '200':
          description: Successfully queried app definitions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageAppDefResultsTO'
        '500':
          description: Failed to query app definitions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /imagemgmt/v1/infrapreferences:
    get:
      tags:
      - InfraPreference
      summary: Get infra preferences
      description: Get infra preferences
      operationId: getInfraPreferences
      parameters:
      - name: org_id
        in: query
        required: false
        schema:
          type: string
      responses:
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Infra preferences are not found for the requested org
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '200':
          description: Successfully retrieved infra preferences
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InfraPreferenceResponseTO'
    post:
      tags:
      - InfraPreference
      summary: Create infra preferences
      description: Create infra preferences
      operationId: createInfraPreferences
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InfraPreferencesCreateRequest'
        required: true
      responses:
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '201':
          description: Successfully created infra preferences.
          content:
            application/json:
              schema:
                type: object
        '500':
          description: Failed to create infra preferences
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /imagemgmt/v1/images:
    get:
      tags:
      - Images
      summary: Get All Images.
      description: 'Get All Images based on request param and Searchable field.</br>Images
        can be searched based on name, os, multiSession, osType, sourceType, gpuType,
        sourceStreamId, sourceVersionId, status fields.<br>NOTE: If fields (os,os_type)
        are present in both request params and search criteria, request param would
        take precedence.'
      operationId: getStreams
      parameters:
      - name: org_id
        in: query
        required: false
        schema:
          type: string
      - name: os
        in: query
        required: false
        schema:
          type: string
      - name: os_type
        in: query
        required: false
        schema:
          type: string
      - name: page
        in: query
        description: Page number to retrieve.
        example: 0
        content:
          '*/*':
            schema:
              type: integer
              format: int32
      - name: search
        in: query
        description: Search criteria to filter on search. Allowed fields - name, os,
          multiSession, osType, sourceType, projectIdgpuType, sourceStreamId, sourceVersionId,
          status
        required: false
        schema:
          $ref: '#/components/schemas/SearchablePredicateStreamTO'
      - name: size
        in: query
        description: Size of each page.
        example: 10
        content:
          '*/*':
            schema:
              type: integer
              format: int32
      - name: sort
        in: query
        description: Ascending/Descending. Format is property,{asc|desc} and default
          is ascending.
        schema:
          type: array
          items:
            type: String
      responses:
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad request - unsupported provider type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '200':
          description: Successfully retrieved images
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageStreamTO'
        '404':
          description: Streams are not found for the requested org
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      tags:
      - Images
      summary: Submit create image catalog request.
      description: 'Submit create image catalog request. This operation will occur
        in background.<br/><br/>Supported Source types & actions values:<br/><br/>1.
        Source AZURE_MARKET_PLACE, action=import (default): Import VM from Azure marketplace.<br/><br/>2.
        Source AZURE_SIG, action=copy-existing-image: Copy published Image from Azure
        SIG. Ensure Azure RBAC Access is granted on source Image for target provider
        instance. In case source image is prepared by the Partner org using Image
        Management APIs, provide ''mspOrgId'' in assetDetails to copy source image
        metadata and application scan data. In case of externally prepared Image,
        make sure to provide appropriate attributes in assetDetails including ''isClientAccessLicenseApplicable''
        and ''multiSession'' apart from mandatory attributes.<br/><br/>3. Source AZURE_CUSTOM_VM,
        action=import-custom-vm: Import Custom VM (Customer created VM) from Azure.<br/><br/>4.
        Source VIEW_IMAGES, action=import: Import VM from vCenter.<br/><br/>Once Image
        status is IMPORT_COMPLETE, it can be customized and published.<br/><br/>Then,
        once Image status is AVAILABLE, it can be used to create templates.<br/><br/>Refer
        notes on request model for more details.'
      operationId: createImageCatalog
      parameters:
      - name: action
        in: query
        required: false
        schema:
          type: string
          default: import
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImageCatalogRequest'
        required: true
      responses:
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '405':
          description: Method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Failed to create Image catalog request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '201':
          description: Successfully accepted create Image catalog request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageCatalogRepresentation'
  /imagemgmt/v1/images/{imageId}/versions:
    get:
      tags:
      - Versions
      summary: Get versions by image id.
      operationId: getVersions
      parameters:
      - name: imageId
        in: path
        required: true
        schema:
          type: string
      - name: org_id
        in: query
        required: false
        schema:
          type: string
      - name: page
        in: query
        description: Page number to retrieve.
        example: 0
        content:
          '*/*':
            schema:
              type: integer
              format: int32
      - name: search
        in: query
        description: Search Criteria to filter on search allowed fields - markerId,
          id, projectId, name, state, status, sourceVersionId, lastTriggeredAction
        required: false
        schema:
          $ref: '#/components/schemas/SearchablePredicateVersionSearchTO'
      - name: size
        in: query
        description: Size of each page.
        example: 10
        content:
          '*/*':
            schema:
              type: integer
              format: int32
      - name: sort
        in: query
        description: Ascending/Descending. Format is property,{asc|desc} and default
          is ascending.
        schema:
          type: array
          items:
            type: String
      responses:
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad request - unsupported provider type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Versions are not found for requested imageId
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '200':
          description: Successfully retrieved versions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageVersionTO'
    post:
      tags:
      - Versions
      summary: Submit request to add version to an existing image catalogue
      description: 'Submit request to add version to existing Image.<br><br>Currently
        this is allowed only for an Image having source type AZURE_SIG or AZURE_CUSTOM_VM.<br/><br/>1.
        Source AZURE_SIG : Copy published Image from Azure SIG and add it as MAJOR
        / MINOR version to the existing image. Ensure Azure RBAC Access is granted
        on source Image for target provider instance. In case source  image is prepared
        by the Partner org using Image Management APIs, provide ''mspOrgId'' in assetDetails
        to copy source image metadata and application scan data. In case of externally
        prepared Image, make sure to provide appropriate attributes in assetDetails
        including ''isClientAccessLicenseApplicable'' and ''multiSession'' apart from
        mandatory attributes. Refer notes on request model for more details. Once
        Image status is AVAILABLE, it can be used to create templates.<br/><br/>2.
        Source AZURE_CUSTOM_VM : Import Custom VM (Customer created VM) from Azure
        and add it as MAJOR / MINOR version to the existing image. Once Image status
        is IMPORT_COMPLETE, it can be customized and published as a new version. Refer
        notes on request model for more details.<br/><br/>This operation will occur
        in background.'
      operationId: addVersion
      parameters:
      - name: imageId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VersionCreateTO'
        required: true
      responses:
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '405':
          description: Method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '201':
          description: Successfully created a new version record.Provisioning of resources
            in provider will happen in background.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VersionCreateResponseTO'
        '404':
          description: Source Image or Version is not found for given imageId and
            versionId
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Failed to submit add version request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /imagemgmt/v1/images/{imageId}/versions/{versionId}:
    get:
      tags:
      - Versions
      summary: Get version by image id and version id.
      operationId: getVersion
      parameters:
      - name: imageId
        in: path
        required: true
        schema:
          type: string
      - name: versionId
        in: path
        required: true
        schema:
          type: string
      - name: org_id
        in: query
        required: false
        schema:
          type: string
      responses:
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad request - unsupported provider type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '200':
          description: Successfully retrieved version
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VersionTO'
        '404':
          description: Version is not found for given imageId and versionId
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      tags:
      - Images
      summary: Submit image publish request.
      description: Submit image publish request. This operation will occur in background.
      operationId: publishVersionV2
      parameters:
      - name: imageId
        in: path
        required: true
        schema:
          type: string
      - name: versionId
        in: path
        required: true
        schema:
          type: string
      - name: action
        in: query
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VersionPublishCreateTO'
        required: true
      responses:
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '412':
          description: Precondition failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Failed to submit Image publish request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '201':
          description: Successfully accepted Image publish request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VersionPublishTO'
    delete:
      tags:
      - Versions
      summary: Submit delete version request by image id and version id.
      description: 'Submit delete version request by image id and version id. This
        operation will occur in background.<br /><br />Note: 1. This deletes the version
        and all assets associated with this version. If there is only one version
        associated with the image, this deletes the image as well.<br /><br />2. A
        version should be deleted only when all pools associated with it are deleted.<br
        /><br />3. If force delete option is used, resources are deleted from service
        records and provider.'
      operationId: deleteVersion
      parameters:
      - name: imageId
        in: path
        required: true
        schema:
          type: string
      - name: versionId
        in: path
        required: true
        schema:
          type: string
      - name: force
        in: query
        required: false
        schema:
          type: boolean
          default: false
      - name: org_id
        in: query
        required: false
        schema:
          type: string
      responses:
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad request - unsupported provider type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Failed to delete Version from DB
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Unable to find the image version
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: Conflict Error while deleting version - Template in admin is
            using version.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '202':
          description: Successfully accepted request to delete Version
        '422':
          description: Deletion is not allowed - current version status is not allowed
            for deletion
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '204':
          description: No Content
    patch:
      tags:
      - Versions
      summary: Submit Version update request. Marker update may trigger marker movement
        and pool updates.
      description: Submit Version update request. Supports updating description and
        markers of Version. <br /><br /> Marker update will trigger pool updates if
        the request is accepted and moved existing marker to this version.<br /><br
        /> Pool updates happen asynchronously and can be tracked via marker status.
      operationId: patchVersion
      parameters:
      - name: imageId
        in: path
        required: true
        schema:
          type: string
      - name: versionId
        in: path
        required: true
        schema:
          type: string
      - name: org_id
        in: query
        description: Org Id of the Version to be updated.
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VersionPatchTO'
        required: true
      responses:
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Failed to validate or submit Version update request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '202':
          description: Successfully accepted Version update request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VersionTO'
  /imagemgmt/v1/images/{imageId}/versions/{versionId}/validate:
    post:
      tags:
      - Versions
      summary: Submit Image validation request.
      description: Submit Image validation request. <br /><br /> Image version will
        be validated for use in Pool Template creation. It will be available for use
        only after validation is successful.
      operationId: validateVersion
      parameters:
      - name: imageId
        in: path
        required: true
        schema:
          type: string
      - name: versionId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VersionValidationTO'
        required: true
      responses:
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Failed to submit validation request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Image or version not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '201':
          description: Successfully submitted validation request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VersionTO'
        '400':
          description: Bad request - Version Validation request is invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /imagemgmt/v1/images/{imageId}/versions/{versionId}/shrink:
    post:
      tags:
      - Versions
      summary: Submit shrink image version request.
      description: Submit shrink image version request. This operation will occur
        in background.
      operationId: shrinkImageVersion
      parameters:
      - name: imageId
        in: path
        required: true
        schema:
          type: string
      - name: versionId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShrinkImageVersionRequest'
        required: true
      responses:
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '412':
          description: Precondition failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Failed to submit Shrink Image version request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '202':
          description: Successfully accepted Shrink Image version request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VersionTO'
  /imagemgmt/v1/images/{imageId}/versions/{versionId}/republish:
    post:
      tags:
      - Versions
      summary: Submit image republish request.
      description: Submit image republish request. This can also be used to expand
        image to new provider instances. This operation occurs in background.
      operationId: republishVersion
      parameters:
      - name: imageId
        in: path
        required: true
        schema:
          type: string
      - name: versionId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VersionRepublishCreateTO'
        required: true
      responses:
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '424':
          description: Failed Dependency for Republish
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Failed to submit Image republish request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '202':
          description: Successfully accepted Image republish request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VersionPublishTO'
  /imagemgmt/v1/images/{imageId}/versions/{versionId}/publish:
    post:
      tags:
      - Images
      summary: Submit image publish request.
      description: 'Submit image publish request for all types of providers. This
        operation will occur in background.<br/><br/>Warning: This is an experimental
        API and is still under development. It can be used to publish vSphere images.'
      operationId: publishVersionV2_1
      parameters:
      - name: imageId
        in: path
        required: true
        schema:
          type: string
      - name: versionId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VersionPublishV2CreateTO'
        required: true
      responses:
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '412':
          description: Precondition failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Failed to submit Image publish request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '201':
          description: Successfully accepted Image publish request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VersionPublishV2TO'
  /imagemgmt/v1/images/{imageId}/versions/{versionId}/clone:
    post:
      tags:
      - Versions
      summary: Submit version clone request.
      description: Submit request to clone existing version.<br/><br/>It can be cloned
        either as a new version in same image or as a new Image altogether.<br/><br/>Use
        ?action=clone-image to create new image and ?action=clone-version to create
        a new version.<br/><br/>This operation will occur in background.
      operationId: clone
      parameters:
      - name: imageId
        in: path
        required: true
        schema:
          type: string
      - name: versionId
        in: path
        required: true
        schema:
          type: string
      - name: action
        in: query
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VersionCloneCreateTO'
        required: true
      responses:
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Version is not found for given imageId and versionId
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '201':
          description: Successfully created a cloned version record.Provisioning of
            resources in provider will happen in background.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VersionCreateResponseTO'
        '500':
          description: Failed to submit version clone request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /imagemgmt/v1/appinventory/images/{imageId}/versions/{versionId}:
    get:
      tags:
      - ApplicationInventory
      summary: Get application inventory by image id and version id.
      operationId: getAppInventoryByImageAndVersion
      parameters:
      - name: imageId
        in: path
        required: true
        schema:
          type: string
      - name: versionId
        in: path
        required: true
        schema:
          type: string
      - name: org_id
        in: query
        required: false
        schema:
          type: string
      responses:
        '401':
          description: Not Authenticated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad Request - Unsupported Provider Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '200':
          description: Successfully retrieved Application Inventory Resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppInventoryRepresentation'
        '403':
          description: Unauthorized/Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Resource Does Not Exist or Application scan is not requested
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      tags:
      - ApplicationInventory
      summary: Start scan for application inventory by image id and version id.
      description: Start scan for applications on image. This is supported only for
        server and multi-session images.
      operationId: triggerAppScan
      parameters:
      - name: imageId
        in: path
        required: true
        schema:
          type: string
      - name: versionId
        in: path
        required: true
        schema:
          type: string
      - name: deleteTemplate
        in: query
        required: false
        schema:
          type: boolean
          default: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppInventoryRequest'
        required: true
      responses:
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '201':
          description: Successfully accepted Application Inventory request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppInventoryRepresentation'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Failed to created Application Inventory
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '424':
          description: Failed Dependency for App Scan
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
      - ApplicationInventory
      summary: Delete all applications by image id and version id.
      operationId: deleteAppInventory
      parameters:
      - name: imageId
        in: path
        required: true
        schema:
          type: string
      - name: versionId
        in: path
        required: true
        schema:
          type: string
      - name: delete_template
        in: query
        required: false
        schema:
          type: boolean
          default: true
      - name: org_id
        in: query
        required: false
        schema:
          type: string
      responses:
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad Request - Unsupported Provider Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Requested application inventory resource does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '202':
          description: Request to delete application inventory is accepted
  /imagemgmt/v1/app-def/query:
    post:
      tags:
      - ApplicationDefinition
      summary: Query for application definitions.
      description: Intended to validate application definitions for a given org. Response
        excludes icon data.
      operationId: query
      parameters:
      - name: org_id
        in: query
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationDefinitionQueryListRepresentation'
        required: true
      responses:
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '200':
          description: Successfully queried app definitions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ApplicationDefinitionResponseTO'
        '500':
          description: Failed to query app definitions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /imagemgmt/v1/app-def/queryByImageReference:
    post:
      tags:
      - ApplicationDefinition
      summary: Query for application definitions by Image Reference(streamId, versionId)
        grouped by application name and version
      operationId: queryByImageReference
      parameters:
      - name: org_id
        in: query
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationDefinitionImageReferenceListRepresentation'
        required: true
      responses:
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '200':
          description: Successfully queried app definitions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageAppDefResultsTO'
        '500':
          description: Failed to query app definitions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /imagemgmt/v1/infrapreferences/{id}:
    get:
      tags:
      - InfraPreference
      summary: Get infra preference by ID.
      operationId: getInfraPreference
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: org_id
        in: query
        required: false
        schema:
          type: string
      responses:
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Infra preference is not found for given id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad Request - invalid infra preference
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '200':
          description: Successfully retrieved infra preference
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InfraPreferenceResponseTO'
    patch:
      tags:
      - InfraPreference
      summary: Update infra preference
      description: Update infra preference
      operationId: patchInfraPreference
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: org_id
        in: query
        description: Org Id
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InfraPreferenceResponseTO'
        required: true
      responses:
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '200':
          description: Successfully updated infra preference
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InfraPreferenceResponseTO'
        '500':
          description: Failed to update infra preference
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /imagemgmt/v1/images/{imageId}:
    get:
      tags:
      - Images
      summary: Get an image by ID.
      operationId: getStream
      parameters:
      - name: imageId
        in: path
        required: true
        schema:
          type: string
      - name: org_id
        in: query
        required: false
        schema:
          type: string
      responses:
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad request - unsupported provider type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '200':
          description: Successfully retrieved stream
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StreamTO'
        '404':
          description: Image is not found for given imageId
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /imagemgmt/v1/images/{imageId}/versions/{versionId}/copies:
    get:
      tags:
      - Copies
      summary: Get all image copies by image id and version id.
      operationId: getCopies
      parameters:
      - name: imageId
        in: path
        required: true
        schema:
          type: string
      - name: versionId
        in: path
        required: true
        schema:
          type: string
      - name: org_id
        in: query
        required: false
        schema:
          type: string
      - name: page
        in: query
        description: Page number to retrieve.
        example: 0
        content:
          '*/*':
            schema:
              type: integer
              format: int32
      - name: provider_instance_id
        in: query
        required: false
        schema:
          type: string
      - name: search
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/SearchablePredicateAssetTO'
      - name: size
        in: query
        description: Size of each page.
        example: 10
        content:
          '*/*':
            schema:
              type: integer
              format: int32
      - name: sort
        in: query
        description: Ascending/Descending. Format is property,{asc|desc} and default
          is ascending.
        schema:
          type: array
          items:
            type: string
      responses:
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad request - unsupported provider type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Copies are not found for versionId and imageId
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '200':
          description: Successfully retrieved image copies
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageAssetTO'
  /imagemgmt/v1/images/{imageId}/versions/{versionId}/copies/{copyId}:
    get:
      tags:
      - Copies
      summary: Get image copy by image id, version id and copy id.
      operationId: getCopy
      parameters:
      - name: copyId
        in: path
        required: true
        schema:
          type: string
      - name: imageId
        in: path
        required: true
        schema:
          type: string
      - name: versionId
        in: path
        required: true
        schema:
          type: string
      - name: org_id
        in: query
        required: false
        schema:
          type: string
      responses:
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad request - unsupported provider type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Image copy is not found for given copyId, versionId and imageId
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '200':
          description: Successfully retrieved Image copy
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetTO'
  /imagemgmt/v1/images/{imageId}/markers:
    get:
      tags:
      - Markers
      summary: Search markers for an Image.
      operationId: searchMarkersForStream
      parameters:
      - name: imageId
        in: path
        required: true
        schema:
          type: string
      - name: include_template_info
        in: query
        required: false
        schema:
          type: string
      - name: org_id
        in: query
        required: false
        schema:
          type: string
      - name: page
        in: query
        description: Page number to retrieve.
        example: 0
        content:
          '*/*':
            schema:
              type: integer
              format: int32
      - name: pageable
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/Pageable'
      - name: search
        in: query
        description: Search Criteria. Please see model definition for list of searchable
          fields.
        schema:
          type: string
        example: providerInstanceId $eq provider-instance-id-1
      - name: searchable
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/SearchablePredicateMarkerTO'
      - name: size
        in: query
        description: Size of each page.
        example: 10
        content:
          '*/*':
            schema:
              type: integer
              format: int32
      - name: sort
        in: query
        description: Ascending/Descending. Format is property,{asc|desc} and default
          is ascending.
        schema:
          type: array
          items:
            type: String
      responses:
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Image not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '200':
          description: Successfully retrieved markers for an image
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageMarkerTO'
  /imagemgmt/v1/images/{imageId}/markers/{markerId}:
    get:
      tags:
      - Markers
      summary: Get Marker by image id and marker id.
      operationId: getMarkerById
      parameters:
      - name: imageId
        in: path
        required: true
        schema:
          type: string
      - name: markerId
        in: path
        required: true
        schema:
          type: string
      - name: org_id
        in: query
        required: false
        schema:
          type: string
      responses:
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '200':
          description: Successfully retrieved marker
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MarkerTO'
        '404':
          description: Unable to find marker for given imageId and markerId
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
      - Markers
      summary: Delete marker by marker id and image id.
      operationId: deleteMarkerById
      parameters:
      - name: imageId
        in: path
        required: true
        schema:
          type: string
      - name: markerId
        in: path
        required: true
        schema:
          type: string
      - name: org_id
        in: query
        required: false
        schema:
          type: string
      responses:
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Failed to delete marker from DB
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: Conflict Error while deleting marker - Template in admin is
            using this marker.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '200':
          description: Successfully deleted marker
        '404':
          description: Unable to find marker for given imageId and markerId
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '412':
          description: Deletion is not allowed - current status is not allowed for
            deletion
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '204':
          description: No Content
  /imagemgmt/v1/image-sources:
    get:
      tags:
      - Images
      summary: Get all image sources.
      operationId: getImageSources
      parameters:
      - name: org_id
        in: query
        required: false
        schema:
          type: string
      - name: page
        in: query
        description: Page number to retrieve.
        example: 0
        content:
          '*/*':
            schema:
              type: integer
              format: int32
      - name: provider_instance_id
        in: query
        required: true
        schema:
          type: string
      - name: provider_type
        in: query
        required: true
        schema:
          type: string
          enum:
          - AZURE
          - AKKA
          - VSPHERE
          - ZEROCLOUD
          - GCP
          - AWS
          - VIEW
      - name: size
        in: query
        description: Size of each page.
        example: 10
        content:
          '*/*':
            schema:
              type: integer
              format: int32
      - name: sort
        in: query
        description: Ascending/Descending. Format is property,{asc|desc} and default
          is ascending.
        schema:
          type: array
          items:
            type: string
      - name: source_stream
        in: query
        required: true
        schema:
          type: string
          enum:
          - COPIED_FROM_VERSION
          - IMPORTED_VMS
          - AZURE_MARKET_PLACE
          - AKKA_MARKET_PLACE
          - VSPHERE_CATALOG
          - AZURE_SIG
          - AKKA_SIG
          - AZURE_CUSTOM_VM
          - AKKA_CUSTOM_VM
          - UPLOADED
          - AWS_AMIS
          - AWS_WORKSPACE_BUNDLES
          - GCP_IMAGES
          - VIEW_IMAGES
          - AKKA_IMAGES
      responses:
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '200':
          description: Successfully retrieved image sources
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageSupportedImageRepresentation'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Failed to retrieve image sources
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /imagemgmt/v1/image-copies:
    get:
      tags:
      - Copies
      summary: Get all image copies.
      operationId: getImageCopies
      parameters:
      - name: org_id
        in: query
        required: false
        schema:
          type: string
      - name: page
        in: query
        description: Page number to retrieve.
        example: 0
        content:
          '*/*':
            schema:
              type: integer
              format: int32
      - name: search
        in: query
        description: Search Criteria. Please see model definition for list of searchable
          fields.
        schema:
          type: string
        example: providerInstanceId $eq provider-instance-id-1
      - name: searchable
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/SearchablePredicateAssetTO'
      - name: size
        in: query
        description: Size of each page.
        example: 10
        content:
          '*/*':
            schema:
              type: integer
              format: int32
      - name: sort
        in: query
        description: Ascending/Descending. Format is property,{asc|desc} and default
          is ascending.
        schema:
          type: array
          items:
            type: String
      responses:
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Failed to retrieve image copies
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '200':
          description: Successfully retrieved image copies
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageAssetTO'
        '204':
          description: No markers exists for the criteria
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageAssetTO'
  /imagemgmt/v1/custom-vms:
    get:
      tags:
      - Images
      summary: Get all custom virtual machines to use as an image source from a resource
        container in provider.
      operationId: getVMs
      parameters:
      - name: container_id
        in: query
        required: true
        schema:
          type: string
      - name: generation_type
        in: query
        required: false
        schema:
          type: string
      - name: org_id
        in: query
        required: false
        schema:
          type: string
      - name: page
        in: query
        description: Page number to retrieve.
        example: 0
        content:
          '*/*':
            schema:
              type: integer
              format: int32
      - name: provider_instance_id
        in: query
        required: true
        schema:
          type: string
      - name: provider_type
        in: query
        required: true
        schema:
          type: string
          enum:
          - AZURE
          - AKKA
          - VSPHERE
          - ZEROCLOUD
          - GCP
          - AWS
          - VIEW
      - name: security_type
        in: query
        required: false
        schema:
          type: string
      - name: size
        in: query
        description: Size of each page.
        example: 10
        content:
          '*/*':
            schema:
              type: integer
              format: int32
      - name: sort
        in: query
        description: Ascending/Descending. Format is property,{asc|desc} and default
          is ascending.
        schema:
          type: array
          items:
            type: string
      responses:
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '200':
          description: Successfully retrieved custom vm image sources
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageVirtualMachineTO'
        '500':
          description: Failed to retrieve custom vm image sources
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /imagemgmt/v1/appinventory/images/{imageId}/versions/{versionId}/apps:
    get:
      tags:
      - ApplicationInventory
      summary: Get all applications by image id and version id.
      operationId: fetchAppsByImageAndVersion
      parameters:
      - name: imageId
        in: path
        required: true
        schema:
          type: string
      - name: versionId
        in: path
        required: true
        schema:
          type: string
      - name: max_icon_height
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 64
      - name: max_icon_width
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 64
      - name: org_id
        in: query
        required: false
        schema:
          type: string
      - name: page
        in: query
        description: Page number to retrieve.
        example: 0
        content:
          '*/*':
            schema:
              type: integer
              format: int32
      - name: size
        in: query
        description: Size of each page.
        example: 10
        content:
          '*/*':
            schema:
              type: integer
              format: int32
      - name: sort
        in: query
        description: Ascending/Descending. Format is property,{asc|desc} and default
          is ascending.
        schema:
          type: array
          items:
            type: string
      responses:
        '401':
          description: Not Authenticated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad Request - Unsupported Provider Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Unauthorized/Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '200':
          description: Successfully retrieved list of applications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageAppRepresentation'
        '404':
          description: Application scan is not requested or not successfully completed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /imagemgmt/v1/app-def:
    get:
      tags:
      - ApplicationDefinition
      summary: Get all application definitions.
      operationId: get
      parameters:
      - name: org_id
        in: query
        required: false
        schema:
          type: string
      - name: page
        in: query
        description: Page number to retrieve.
        example: 0
        content:
          '*/*':
            schema:
              type: integer
              format: int32
      - name: size
        in: query
        description: Size of each page.
        example: 10
        content:
          '*/*':
            schema:
              type: integer
              format: int32
      - name: sort
        in: query
        description: Ascending/Descending. Format is property,{asc|desc} and default
          is ascending.
        schema:
          type: array
          items:
            type: string
      responses:
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '200':
          description: Successfully retrieved app definitions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageApplicationDefinitionResponseTO'
        '500':
          description: Failed to retrieve app definitions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /portal/v3/entitlements/{id}:
    get:
      tags:
      - EntitlementsV2
      summary: Get entitlement record by id
      description: Get entitlement record by id
      operationId: getEntitlement_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: org_id
        in: query
        required: false
        schema:
          type: string
      responses:
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntitlementV2'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
      - EntitlementsV2
      summary: Update an existing entitlement record.
      description: Update an existing entitlement record with new values. The new
        data must be complete and valid as if it were a new record
      operationId: updateV3Entitlement
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EntitlementV2'
        required: true
      responses:
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '412':
          description: Precondition Failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '200':
          description: Entitlement updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntitlementV2'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
      - EntitlementsV2
      summary: Delete entitlement record by id
      description: Delete entitlement record by id
      operationId: deleteEntitlement_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: org_id
        in: query
        required: false
        schema:
          type: string
      responses:
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '204':
          description: No Content
    patch:
      tags:
      - EntitlementsV2
      summary: Update specific attributes on existing entitlement record
      description: Update an existing entitlement record by adding and/or removing
        users and/or user groups
      operationId: patchV3Entitlement
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: org_id
        in: query
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchEntitlementV2Req'
        required: true
      responses:
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '412':
          description: Precondition Failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '200':
          description: Entitlement patched
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntitlementV2'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /portal/v2/sites/{siteId}/edge/{edgeId}:
    put:
      tags:
      - Site
      summary: 'Create Site Edge Mapping '
      description: Creates a site edge mapping
      operationId: createSiteMapping
      parameters:
      - name: siteId
        in: path
        required: true
        schema:
          type: string
      - name: edgeId
        in: path
        required: true
        schema:
          type: string
      - name: org_id
        in: query
        required: false
        schema:
          type: string
      responses:
        '412':
          description: Precondition Failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edge'
    delete:
      tags:
      - Site
      summary: Delete Edge Mapping
      description: Delete a site edge mapping
      operationId: deleteEdgeMapping_1
      parameters:
      - name: siteId
        in: path
        required: true
        schema:
          type: string
      - name: edgeId
        in: path
        required: true
        schema:
          type: string
      - name: org_id
        in: query
        required: false
        schema:
          type: string
      responses:
        '412':
          description: Precondition Failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '200':
          description: OK
  /portal/v2/pools/{id}:
    get:
      tags:
      - Pool
      summary: Get pool record by id
      description: Get pool record by id
      operationId: getPool
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: org_id
        in: query
        required: false
        schema:
          type: string
      responses:
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '200':
          description: Successfully retrieved the pool.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pool'
    put:
      tags:
      - Pool
      summary: Update an existing pool record.
      description: Update an existing pool record with new values. The new data must
        be complete and valid as if it were a new record
      operationId: updatePool
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: disassociateAction
        in: query
        required: false
        schema:
          type: String
          enum:
          - FORCEFUL
          - GRACEFUL
      - name: delete
        in: query
        required: false
        schema:
          type: boolean
          default: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Pool'
        required: true
      responses:
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '412':
          description: Precondition Failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '200':
          description: Pool updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pool'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
      - Pool
      summary: Delete pool record by id
      description: Delete pool record by id
      operationId: deletePool
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: org_id
        in: query
        required: false
        schema:
          type: string
      - name: disassociateAction
        in: query
        required: false
        schema:
          type: String
          enum:
          - FORCEFUL
          - GRACEFUL
      - name: delete
        in: query
        required: false
        schema:
          type: boolean
          default: false
      responses:
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '204':
          description: Successfully deleted pool record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pool'
        '202':
          description: Accepted the request for  graceful/forceful deletion of the
            pool and Response holds the pool with disable flag true.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pool'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      deprecated: true
    patch:
      tags:
      - Pool
      summary: Update specific attributes on existing pool record
      description: Update an existing pool record by adding and/or removing users
        and/or user groups
      operationId: patchPool
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: org_id
        in: query
        required: false
        schema:
          type: string
      - name: disassociateAction
        in: query
        required: false
        schema:
          type: String
          enum:
          - FORCEFUL
          - GRACEFUL
      - name: delete
        in: query
        required: false
        schema:
          type: boolean
          default: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchPoolReq'
        required: true
      responses:
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '412':
          description: Precondition Failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '200':
          description: Pool patched
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pool'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /portal/v3/pools/{id}:
    get:
      tags:
      - Pool
      summary: Get pool record by id
      description: Get pool record by id
      operationId: getPool_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: org_id
        in: query
        required: false
        schema:
          type: string
      responses:
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '200':
          description: Successfully retrieved the pool.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pool'
    put:
      tags:
      - Pool
      summary: Update an existing pool record.
      description: Update an existing pool record with new values. The new data must
        be complete and valid as if it were a new record
      operationId: updatePool_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: disassociateAction
        in: query
        required: false
        schema:
          type: String
          enum:
          - FORCEFUL
          - GRACEFUL
      - name: delete
        in: query
        required: false
        schema:
          type: boolean
          default: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Pool'
        required: true
      responses:
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '412':
          description: Precondition Failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '200':
          description: Pool updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pool'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
      - Pool
      summary: Delete pool record by id
      description: Delete pool record by id
      operationId: deleteV3Pool
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: org_id
        in: query
        required: false
        schema:
          type: string
      - name: disassociateAction
        in: query
        required: false
        schema:
          type: String
          enum:
          - FORCEFUL
          - GRACEFUL
      - name: delete
        in: query
        required: false
        schema:
          type: boolean
          default: false
      responses:
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '204':
          description: Successfully deleted pool record
        '202':
          description: Accepted the request for  graceful/forceful deletion of the
            pool and Response holds the pool with disable flag true.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pool'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      tags:
      - Pool
      summary: Update specific attributes on existing pool record
      description: Update an existing pool record by adding and/or removing users
        and/or user groups
      operationId: patchPool_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: org_id
        in: query
        required: false
        schema:
          type: string
      - name: disassociateAction
        in: query
        required: false
        schema:
          type: String
          enum:
          - FORCEFUL
          - GRACEFUL
      - name: delete
        in: query
        required: false
        schema:
          type: boolean
          default: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchPoolReq'
        required: true
      responses:
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '412':
          description: Precondition Failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '200':
          description: Pool patched
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pool'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /portal/v2/entitlements/{id}:
    get:
      tags:
      - EntitlementsV2
      summary: Get entitlement record by id
      description: Get entitlement record by id
      operationId: getEntitlement
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: org_id
        in: query
        required: false
        schema:
          type: string
      responses:
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntitlementV2'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
      - EntitlementsV2
      summary: Update an existing entitlement record.
      description: Update an existing entitlement record with new values. The new
        data must be complete and valid as if it were a new record
      operationId: updateEntitlement
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EntitlementV2'
        required: true
      responses:
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '412':
          description: Precondition Failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '200':
          description: Entitlement updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntitlementV2'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
      - EntitlementsV2
      summary: Delete entitlement record by id
      description: Delete entitlement record by id
      operationId: deleteEntitlement
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: org_id
        in: query
        required: false
        schema:
          type: string
      responses:
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '204':
          description: No Content
    patch:
      tags:
      - EntitlementsV2
      summary: Update specific attributes on existing entitlement record
      description: Update an existing entitlement record by adding and/or removing
        users and/or user groups
      operationId: patchEntitlement
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: org_id
        in: query
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchEntitlementV2Req'
        required: true
      responses:
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '412':
          description: Precondition Failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '200':
          description: Entitlement patched
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntitlementV2'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /portal/v1/sites/{siteId}/edge/{edgeId}:
    put:
      tags:
      - Site
      summary: Create Site Edge Mapping
      description: Creates a site edge mapping
      operationId: createSiteMapping_1
      parameters:
      - name: siteId
        in: path
        required: true
        schema:
          type: string
      - name: edgeId
        in: path
        required: true
        schema:
          type: string
      - name: org_id
        in: query
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EdgeRequest'
        required: true
      responses:
        '412':
          description: Precondition Failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edge'
      deprecated: true
    delete:
      tags:
      - Site
      summary: Delete Edge Mapping
      description: Delete a site edge mapping
      operationId: deleteEdgeMapping
      parameters:
      - name: siteId
        in: path
        required: true
        schema:
          type: string
      - name: edgeId
        in: path
        required: true
        schema:
          type: string
      - name: org_id
        in: query
        required: false
        schema:
          type: string
      responses:
        '412':
          description: Precondition Failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '200':
          description: OK
  /portal/v1/sites/{siteId}:
    get:
      tags:
      - Site
      summary: Get Site by Id
      description: Get Site by Id
      operationId: findSiteById
      parameters:
      - name: siteId
        in: path
        required: true
        schema:
          type: string
      - name: org_id
        in: query
        required: false
        schema:
          type: string
      responses:
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Site'
    put:
      tags:
      - Site
      summary: update Site with attributes on exsisting record
      description: Update site with new values. The new data must be complete and
        valid as if it were a new record.
      operationId: updateSite
      parameters:
      - name: siteId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Site'
        required: true
      responses:
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Site'
    delete:
      tags:
      - Site
      summary: delete Site by Id
      description: Delete Sit by Id.
      operationId: deleteSite
      parameters:
      - name: siteId
        in: path
        required: true
        schema:
          type: string
      - name: org_id
        in: query
        required: false
        schema:
          type: string
      responses:
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '204':
          description: No Content
  /portal/v2/sites/{siteId}:
    get:
      tags:
      - Site
      summary: Get Site by Id
      description: Get Site by Id
      operationId: findSiteById_1
      parameters:
      - name: siteId
        in: path
        required: true
        schema:
          type: string
      - name: org_id
        in: query
        required: false
        schema:
          type: string
      responses:
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Site'
    put:
      tags:
      - Site
      summary: update Site with attributes on exsisting record
      description: Update site with new values. The new data must be complete and
        valid as if it were a new record.
      operationId: updateSite_1
      parameters:
      - name: siteId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Site'
        required: true
      responses:
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Site'
    delete:
      tags:
      - Site
      summary: delete Site by Id
      description: Delete Sit by Id.
      operationId: deleteSite_1
      parameters:
      - name: siteId
        in: path
        required: true
        schema:
          type: string
      - name: org_id
        in: query
        required: false
        schema:
          type: string
      responses:
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '204':
          description: No Content
  /portal/v1/homesitemappings/{mappingId}:
    get:
      tags:
      - HomeSite Mappings
      summary: Get Homesite mapping by Id
      description: Get Homesite mapping by Id
      operationId: getHomeSiteMappingById
      parameters:
      - name: mappingId
        in: path
        required: true
        schema:
          type: string
      - name: org_id
        in: query
        required: false
        schema:
          type: string
      responses:
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HomesiteMapping'
    put:
      tags:
      - HomeSite Mappings
      summary: update homesite mapping with attributes on exsisting mapping record
      description: Update homesite mapping with new values. The new data must be complete
        and valid as if it were a new record.
      operationId: updateHomeSiteMapping
      parameters:
      - name: mappingId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HomesiteMapping'
        required: true
      responses:
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '200':
          description: OK
    delete:
      tags:
      - HomeSite Mappings
      summary: delete HomeSite mappings by Id
      description: Delete HomeSite mappings by Id.
      operationId: deleteHomeSiteMapping
      parameters:
      - name: mappingId
        in: path
        required: true
        schema:
          type: string
      - name: org_id
        in: query
        required: false
        schema:
          type: string
      responses:
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '204':
          description: No Content
  /portal/v2/homesitemappings/{mappingId}:
    get:
      tags:
      - HomeSite Mappings
      summary: Get Homesite mapping by Id
      description: Get Homesite mapping by Id
      operationId: getHomeSiteMappingById_1
      parameters:
      - name: mappingId
        in: path
        required: true
        schema:
          type: string
      - name: org_id
        in: query
        required: false
        schema:
          type: string
      responses:
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HomesiteMapping'
    put:
      tags:
      - HomeSite Mappings
      summary: update homesite mapping with attributes on exsisting mapping record
      description: Update homesite mapping with new values. The new data must be complete
        and valid as if it were a new record.
      operationId: updateHomeSiteMapping_1
      parameters:
      - name: mappingId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HomesiteMapping'
        required: true
      responses:
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '200':
          description: OK
    delete:
      tags:
      - HomeSite Mappings
      summary: delete HomeSite mappings by Id
      description: Delete HomeSite mappings by Id.
      operationId: deleteHomeSiteMapping_1
      parameters:
      - name: mappingId
        in: path
        required: true
        schema:
          type: string
      - name: org_id
        in: query
        required: false
        schema:
          type: string
      responses:
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '204':
          description: No Content
  /portal/v3/sessions/bulklogoff:
    post:
      tags:
      - Session
      summary: Perform user logoffs.
      operationId: performUserLogoff
      parameters:
      - name: org_id
        in: query
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/UserLogoffReq'
        required: true
      responses:
        '200':
          description: Successfully fulfilled logoff action
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Unexpected internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /portal/v3/pools/apps:
    post:
      tags:
      - Pool
      summary: Get all applications filtered by pool groups and grouped based on app
        name & publisher
      operationId: listAllAppsForPoolsGroupedByNameAndPublisher
      parameters:
      - name: org_id
        in: query
        required: false
        schema:
          type: string
      - name: page
        in: query
        description: Page number to retrieve.
        schema:
          type: number
          default: 0
      - name: size
        in: query
        description: Size of each page.
        schema:
          type: number
          default: 10
      - name: sort
        in: query
        description: Ascending/Descending. Format is property,{asc|desc} and default
          is ascending.
        schema:
          type: array
          items:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppRequest'
      responses:
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageApplicationItemResultTO'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /portal/v3/entitlements:
    get:
      tags:
      - EntitlementsV2
      summary: Get all entitlements
      description: Get all entitlements, with an optional org ID filter. Non-super
        users can only query for their own org IDs. This will return all records for
        which the caller has 'read' permission
      operationId: getEntitlements_1
      parameters:
      - name: org_id
        in: query
        required: false
        schema:
          type: string
      - name: page
        in: query
        description: Page number to retrieve.
        schema:
          type: number
          default: 0
      - name: size
        in: query
        description: Size of each page.
        schema:
          type: number
          default: 10
      - name: sort
        in: query
        description: Ascending/Descending. Format is property,{asc|desc} and default
          is ascending.
        schema:
          type: array
          items:
            type: string
      - name: search
        in: query
        description: Search Criteria. Please see model definition for list of searchable
          fields.
        schema:
          type: string
        example: name $eq name-1
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageEntitlementV2'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      tags:
      - EntitlementsV2
      summary: Create an entitlement based on AppIdentifier, AppGroupId and ApplicationType
      description: Creates a new entitlement record, belonging to the specified org.
        If org is not provided, it will use the org from the authentication context.
      operationId: createV3Entitlement
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EntitlementV2'
        required: true
      responses:
        '412':
          description: Precondition Failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntitlementV2'
  /portal/v3/entitlements/unassign:
    post:
      tags:
      - EntitlementsV2
      summary: Initiate a task to unassign users/groups from desktops/apps across
        multiple entitlements, covering all application types.
      operationId: unassignV3Bulk
      parameters:
      - name: org_id
        in: query
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EntitlementUnassignReq'
        required: true
      responses:
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '412':
          description: Precondition Failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '202':
          description: Successfully created the unassign bulk task.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntilementBulkUnassignStatusRes'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntilementBulkUnassignStatusRes'
  /portal/v2/users/spec:
    post:
      tags:
      - Launch Items and Desktop Spec
      summary: Create spec
      description: Creates a spec when assigned user selects to launch the entitlement.
        Spec contains broker url, launch url and token info.
      operationId: createV2Spec
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DesktopSpecRequestTO'
        required: true
      responses:
        '412':
          description: Precondition Failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DesktopSpecJwt'
  /portal/v2/users/report-error-detail:
    post:
      tags:
      - Launch Items and Desktop Spec
      summary: Send Client Errors to HOC
      operationId: sendClientError
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClientError'
        required: true
      responses:
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '200':
          description: Successfully processed client launch error request
        '500':
          description: Unexpected internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '202':
          description: Accepted
  /portal/v2/protocol/generate-protocol-token:
    post:
      tags:
      - Generate signed Jwt token for input payload context
      operationId: generateProtocolToken
      parameters:
      - name: org_id
        in: query
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProtocolTokenRepresentation'
        required: true
      responses:
        '200':
          description: Protocol redirect token
          content:
            application/json:
              schema:
                type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /portal/v2/pools/apps:
    get:
      tags:
      - Pool
      summary: Get all application for  selected pools to create assignment
      operationId: listAllAppsForPools
      parameters:
      - name: org_id
        in: query
        required: false
        schema:
          type: string
      - name: pool_ids
        in: query
        required: false
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
      - name: page
        in: query
        description: Page number to retrieve.
        schema:
          type: number
          default: 0
      - name: size
        in: query
        description: Size of each page.
        schema:
          type: number
          default: 10
      - name: sort
        in: query
        description: Ascending/Descending. Format is property,{asc|desc} and default
          is ascending.
        schema:
          type: array
          items:
            type: string
      responses:
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageApplicationItemResultTO'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      tags:
      - Pool
      summary: Post all application for selected pools and selected app id
      operationId: listAppByIdForPools
      parameters:
      - name: page
        in: query
        description: Page number to retrieve.
        schema:
          type: number
          default: 0
      - name: size
        in: query
        description: Size of each page.
        schema:
          type: number
          default: 10
      - name: sort
        in: query
        description: Ascending/Descending. Format is property,{asc|desc} and default
          is ascending.
        schema:
          type: array
          items:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppRequest'
        required: true
      responses:
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageApplicationItemResultTO'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /portal/v2/pools:
    get:
      tags:
      - Pool
      summary: Get all pools
      description: Get all pools, with an optional org ID filter. Non-super users
        can only query for their own org IDs. This will return all records for which
        the caller has 'read' permissionBy default the result will not include disabled
        pools
      operationId: getPools
      parameters:
      - name: org_id
        in: query
        required: false
        schema:
          type: string
      - name: sort_by_used_sessions
        in: query
        required: false
        schema:
          type: boolean
          default: false
      - name: sort_by_consumed_sessions
        in: query
        required: false
        schema:
          type: boolean
          default: false
      - name: include_internal_pools
        in: query
        required: false
        schema:
          type: boolean
          default: false
      - name: exclude_disabled_pools
        in: query
        required: false
        schema:
          type: boolean
          default: true
      - name: page
        in: query
        description: Page number to retrieve.
        schema:
          type: number
          default: 0
      - name: size
        in: query
        description: Size of each page.
        schema:
          type: number
          default: 10
      - name: sort
        in: query
        description: Ascending/Descending. Format is property,{asc|desc} and default
          is ascending.
        schema:
          type: array
          items:
            type: string
      - name: search
        in: query
        description: Search Criteria. Please see model definition for list of searchable
          fields.
        schema:
          type: string
        example: name $eq name-1
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagePool'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      tags:
      - Pool
      summary: Create a Pool
      description: Creates a new pool record, belonging to the specified org. If org
        is not provided, it will use the org from the authentication context.
      operationId: create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Pool'
        required: true
      responses:
        '412':
          description: Precondition Failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pool'
  /portal/v3/pools:
    get:
      tags:
      - Pool
      summary: Get all pools
      description: Get all pools, with an optional org ID filter. Non-super users
        can only query for their own org IDs. This will return all records for which
        the caller has 'read' permissionBy default the result will not include disabled
        pools
      operationId: getPools_1
      parameters:
      - name: org_id
        in: query
        required: false
        schema:
          type: string
      - name: sort_by_used_sessions
        in: query
        required: false
        schema:
          type: boolean
          default: false
      - name: sort_by_consumed_sessions
        in: query
        required: false
        schema:
          type: boolean
          default: false
      - name: include_internal_pools
        in: query
        required: false
        schema:
          type: boolean
          default: false
      - name: exclude_disabled_pools
        in: query
        required: false
        schema:
          type: boolean
          default: true
      - name: page
        in: query
        description: Page number to retrieve.
        schema:
          type: number
          default: 0
      - name: size
        in: query
        description: Size of each page.
        schema:
          type: number
          default: 10
      - name: sort
        in: query
        description: Ascending/Descending. Format is property,{asc|desc} and default
          is ascending.
        schema:
          type: array
          items:
            type: string
      - name: search
        in: query
        description: Search Criteria. Please see model definition for list of searchable
          fields.
        schema:
          type: string
        example: name $eq name-1
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagePool'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      tags:
      - Pool
      summary: Create a Pool
      description: Creates a new pool record, belonging to the specified org. If org
        is not provided, it will use the org from the authentication context.
      operationId: create_1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Pool'
        required: true
      responses:
        '412':
          description: Precondition Failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pool'
  /portal/v2/integration/external/tenants/{idpTenantID}/orgs/{orgId}/resources:
    post:
      tags:
      - External Integration apis
      summary: Get Resources
      description: Get Resources within an org
      operationId: getResourcesForTenantOrg
      parameters:
      - name: idpTenantID
        in: path
        required: true
        schema:
          type: string
      - name: orgId
        in: path
        required: true
        schema:
          type: string
      - name: iconSize
        in: query
        required: false
        schema:
          type: integer
          format: int32
      - name: icon_expiry_minutes
        in: query
        required: false
        schema:
          type: integer
          format: int32
      - name: page
        in: query
        description: Page number to retrieve.
        schema:
          type: number
          default: 0
      - name: size
        in: query
        description: Size of each page.
        schema:
          type: number
          default: 10
      - name: sort
        in: query
        description: Ascending/Descending. Format is property,{asc|desc} and default
          is ascending.
        schema:
          type: array
          items:
            type: string
      - name: search
        in: query
        description: Search Criteria. Please see model definition for list of searchable
          fields.
        schema:
          type: string
        example: name $eq name-1
      requestBody:
        content:
          application/json:
            schema:
              uniqueItems: true
              type: array
              items:
                type: string
      responses:
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageResourceTO'
  /portal/v2/integration/external/tenants/{idpTenantID}/orgs/{orgId}/resourceMetaData:
    post:
      tags:
      - External Integration apis
      summary: Get ResourceMetadata
      description: Get ResourceMetaData within an org
      operationId: getResourceMetaDataForTenantOrg
      parameters:
      - name: idpTenantID
        in: path
        required: true
        schema:
          type: string
      - name: orgId
        in: path
        required: true
        schema:
          type: string
      - name: iconSize
        in: query
        required: false
        schema:
          type: integer
          format: int32
      - name: icon_expiry_minutes
        in: query
        required: false
        schema:
          type: integer
          format: int32
      - name: page
        in: query
        description: Page number to retrieve.
        schema:
          type: number
          default: 0
      - name: size
        in: query
        description: Size of each page.
        schema:
          type: number
          default: 10
      - name: sort
        in: query
        description: Ascending/Descending. Format is property,{asc|desc} and default
          is ascending.
        schema:
          type: array
          items:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              uniqueItems: true
              type: array
              items:
                type: string
        required: true
      responses:
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageResourceTO'
  /portal/v2/entitlements:
    get:
      tags:
      - EntitlementsV2
      summary: Get all entitlements
      description: Get all entitlements, with an optional org ID filter. Non-super
        users can only query for their own org IDs. This will return all records for
        which the caller has 'read' permission
      operationId: getEntitlements
      parameters:
      - name: org_id
        in: query
        required: false
        schema:
          type: string
      - name: page
        in: query
        description: Page number to retrieve.
        schema:
          type: number
          default: 0
      - name: size
        in: query
        description: Size of each page.
        schema:
          type: number
          default: 10
      - name: sort
        in: query
        description: Ascending/Descending. Format is property,{asc|desc} and default
          is ascending.
        schema:
          type: array
          items:
            type: string
      - name: search
        in: query
        description: Search Criteria. Please see model definition for list of searchable
          fields.
        schema:
          type: string
        example: name $eq name-1
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageEntitlementV2'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      tags:
      - EntitlementsV2
      summary: Create an entitlement
      description: Creates a new entitlement record, belonging to the specified org.
        If org is not provided, it will use the org from the authentication context.
      operationId: create_2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EntitlementV2'
        required: true
      responses:
        '412':
          description: Precondition Failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntitlementV2'
  /portal/v2/entitlements/{id}/unassign:
    post:
      tags:
      - EntitlementsV2
      summary: Unassign users/groups from desktops/apps
      description: Update an entitlement record by removing users and/or user groups
        corresponding to given desktops or apps
      operationId: unassign
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: org_id
        in: query
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EntitlementUnassignReq'
        required: true
      responses:
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '412':
          description: Precondition Failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '200':
          description: User/Groups unassigned from the entitlement.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EntitlementV2'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /portal/v3/entitlements/{id}/unassign:
    post:
      tags:
      - EntitlementsV2
      summary: Unassign users/groups from desktops/apps
      description: Update an entitlement record by removing users and/or user groups
        corresponding to given desktops or apps
      operationId: unassign_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: org_id
        in: query
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EntitlementUnassignReq'
        required: true
      responses:
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '412':
          description: Precondition Failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '200':
          description: User/Groups unassigned from the entitlement.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EntitlementV2'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /portal/v2/entitlements/unassign:
    post:
      tags:
      - EntitlementsV2
      summary: Create a task to unassign users/groups from desktops/apps from multiple
        entitlements
      operationId: unassignBulk
      parameters:
      - name: org_id
        in: query
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EntitlementUnassignReq'
        required: true
      responses:
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '412':
          description: Precondition Failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '202':
          description: Successfully created the unassign bulk task.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntilementBulkUnassignStatusRes'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntilementBulkUnassignStatusRes'
  /portal/v1/users/spec:
    post:
      tags:
      - Launch Items and Desktop Spec
      summary: Create spec
      description: Creates a spec when assigned user selects to launch the entitlement.
        Spec contains broker url, launch url and token info.
      operationId: createSpec
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DesktopSpecReq'
        required: true
      responses:
        '412':
          description: Precondition Failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DesktopSpecJwt'
  /portal/v1/users/action:
    post:
      tags:
      - Launch Items and Desktop Spec
      summary: Perform an user action
      operationId: performUserAction
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserActionReq'
        required: true
      responses:
        '202':
          description: Successfully accepted user action
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Unexpected internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /portal/v2/users/action:
    post:
      tags:
      - Launch Items and Desktop Spec
      summary: Perform an user action
      operationId: performUserAction_1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserActionReq'
        required: true
      responses:
        '202':
          description: Successfully accepted user action
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Unexpected internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /portal/v1/userdesktopmapping:
    get:
      tags:
      - User Desktop Mapping
      summary: Get user desktop mapping by entitlementId and/or userId and/or templateId
      description: EntitlementId is a must. UserId and TemplateId are optional.
      operationId: getUserDesktopMapping
      parameters:
      - name: entitlementId
        in: query
        required: false
        schema:
          type: string
      - name: poolId
        in: query
        required: false
        schema:
          type: string
      - name: userId
        in: query
        required: false
        schema:
          type: string
      - name: templateId
        in: query
        required: false
        schema:
          type: string
      - name: org_id
        in: query
        required: false
        schema:
          type: string
      responses:
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserDesktopMapping'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      tags:
      - User Desktop Mapping
      summary: Create user desktop mapping
      description: Creates user desktop mapping for user belonging to a specified
        Pool that belongs to the specified org. If org is not provided, it will use
        the org from the authentication context.
      operationId: createUserDesktopMapping
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserDesktopMappingAssignRequest'
        required: true
      responses:
        '412':
          description: Precondition Failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDesktopMapping'
  /portal/v1/userdesktopmapping/deassign:
    post:
      tags:
      - User Desktop Mapping
      summary: Deassign user desktop mapping by given templateId and vmId
      description: Deassign user desktop mapping by given templateId and vmId
      operationId: deassignUserDesktopMapping
      parameters:
      - name: org_id
        in: query
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserDesktopMappingDeassignRequest'
        required: true
      responses:
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VmUser'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /portal/v1/userdesktopmapping/deassign/bulk:
    post:
      tags:
      - User Desktop Mapping
      summary: Deassign multiple user desktop mappings by given templateId and vmId
      description: Deassign multiple user desktop mappings by given templateId and
        vmId
      operationId: bulkDeassignUserDesktopMapping
      parameters:
      - name: org_id
        in: query
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserDesktopMappingBulkRequest'
        required: true
      responses:
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDesktopMappingBulkResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /portal/v1/userdesktopmapping/bulk:
    post:
      tags:
      - User Desktop Mapping
      summary: Create multiple user desktop mappings for multiple vms
      description: Creates user desktop mappings for users belonging to a specified
        Pool that belongs to the specified org. If org is not provided, it will use
        the org from the authentication context.
      operationId: createBulkUserDesktopMapping
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserDesktopMappingBulkRequest'
        required: true
      responses:
        '412':
          description: Precondition Failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDesktopMappingBulkResponse'
  /portal/v1/sites/validate-edge:
    post:
      tags:
      - Site
      summary: check if the edge is valid
      description: check if the edge is valid
      operationId: validateEdge
      parameters:
      - name: org_id
        in: query
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ValidateEdgeRequest'
        required: true
      responses:
        '412':
          description: Precondition Failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '200':
          description: OK
  /portal/v2/sites/validate-edge:
    post:
      tags:
      - Site
      summary: check if the edge is valid
      description: check if the edge is valid
      operationId: validateEdge_1
      parameters:
      - name: org_id
        in: query
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ValidateEdgeRequest'
        required: true
      responses:
        '412':
          description: Precondition Failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '200':
          description: OK
  /portal/v1/sites:
    get:
      tags:
      - Site
      summary: Get all Sites
      description: Get all Sites
      operationId: findAllSites
      parameters:
      - name: org_id
        in: query
        required: false
        schema:
          type: string
      responses:
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Site'
    post:
      tags:
      - Site
      summary: Create Site
      description: Creates a site
      operationId: createSite
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SiteRequest'
        required: true
      responses:
        '412':
          description: Precondition Failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Site'
  /portal/v2/sites:
    get:
      tags:
      - Site
      summary: Get all Sites
      description: Get all Sites
      operationId: findAllSites_1
      parameters:
      - name: org_id
        in: query
        required: false
        schema:
          type: string
      responses:
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Site'
    post:
      tags:
      - Site
      summary: Create Site
      description: Creates a site
      operationId: createSite_1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SiteRequest'
        required: true
      responses:
        '412':
          description: Precondition Failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Site'
  /portal/v1/sitegeometadata:
    post:
      tags:
      - SiteGeographicMetaData
      summary: Create Site MetaData
      description: Creates a site MetaData
      operationId: createSiteGeographicMetaData
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SiteAllowedRegionMetaData'
        required: true
      responses:
        '412':
          description: Precondition Failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SiteAllowedRegionMetaData'
  /portal/v2/sitegeometadata:
    post:
      tags:
      - SiteGeographicMetaData
      summary: Create Site MetaData
      description: Creates a site MetaData
      operationId: createSiteGeographicMetaData_1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SiteAllowedRegionMetaData'
        required: true
      responses:
        '412':
          description: Precondition Failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SiteAllowedRegionMetaData'
  /portal/v1/sessions/bulklogoff:
    post:
      tags:
      - Session
      summary: Perform bulk session action.
      operationId: performBulkSessionAction
      parameters:
      - name: org_id
        in: query
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BulkSessionActionReq'
        required: true
      responses:
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Unexpected internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '202':
          description: Successfully accepted session action
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      deprecated: true
  /portal/v2/sessions/bulklogoff:
    post:
      tags:
      - Session
      summary: Perform bulk session action.
      operationId: performBulkSessionAction_1
      parameters:
      - name: org_id
        in: query
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BulkSessionActionReq'
        required: true
      responses:
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Unexpected internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '202':
          description: Successfully accepted session action
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      deprecated: true
  /portal/v1/sessions/bulk-session-action:
    post:
      tags:
      - Session
      summary: Perform bulk session action.
      operationId: performBulkSessionAction_2
      parameters:
      - name: org_id
        in: query
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BulkSessionActionReq'
        required: true
      responses:
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Unexpected internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '202':
          description: Successfully accepted session action
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      deprecated: true
  /portal/v2/sessions/bulk-session-action:
    post:
      tags:
      - Session
      summary: Perform bulk session action.
      operationId: performBulkSessionAction_3
      parameters:
      - name: org_id
        in: query
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BulkSessionActionReq'
        required: true
      responses:
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Unexpected internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '202':
          description: Successfully accepted session action
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      deprecated: true
  /portal/v1/sessions/bulk:
    post:
      tags:
      - Session
      summary: Filter sessions by AgentSessionGUIDs.
      operationId: findSessionsByAgentGuid
      parameters:
      - name: org_id
        in: query
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SessionBatchReq'
        required: true
      responses:
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '412':
          description: Precondition Failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InvSessionDTO'
  /portal/v2/sessions/bulk:
    post:
      tags:
      - Session
      summary: Filter sessions by AgentSessionGUIDs.
      operationId: findSessionsByAgentGuid_1
      parameters:
      - name: org_id
        in: query
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SessionBatchReq'
        required: true
      responses:
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '412':
          description: Precondition Failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InvSessionDTO'
  /portal/v1/homesitemappings:
    get:
      tags:
      - HomeSite Mappings
      summary: Get all Homesite mappings
      description: Get all Homesite mappings
      operationId: getAllHomeSiteMappings
      parameters:
      - name: org_id
        in: query
        required: false
        schema:
          type: string
      responses:
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageHomesiteMapping'
    post:
      tags:
      - HomeSite Mappings
      summary: Create a HomeSite Mapping for multiple users and groups
      description: Create a HomeSite Mapping for multiple users and groups
      operationId: createHomeSiteMappings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HomesiteMappingBatchReq'
        required: true
      responses:
        '412':
          description: Precondition Failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HomesiteMappingBatchResp'
  /portal/v2/homesitemappings:
    get:
      tags:
      - HomeSite Mappings
      summary: Get all Homesite mappings
      description: Get all Homesite mappings
      operationId: getAllHomeSiteMappings_1
      parameters:
      - name: org_id
        in: query
        required: false
        schema:
          type: string
      responses:
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageHomesiteMapping'
    post:
      tags:
      - HomeSite Mappings
      summary: Create a HomeSite Mapping for multiple users and groups
      description: Create a HomeSite Mapping for multiple users and groups
      operationId: createHomeSiteMappings_1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HomesiteMappingBatchReq'
        required: true
      responses:
        '412':
          description: Precondition Failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HomesiteMappingBatchResp'
  /portal/v1/sitegeometadata/{siteGeographicLoc}:
    patch:
      tags:
      - SiteGeographicMetaData
      summary: Create Site MetaData
      description: Creates a site MetaData
      operationId: patchBulkGeoData
      parameters:
      - name: siteGeographicLoc
        in: path
        required: true
        schema:
          type: string
          enum:
          - US
          - EU
          - APJ
          - UK
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AllowedSitePatchRequest'
        required: true
      responses:
        '412':
          description: Precondition Failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SiteAllowedRegionMetaData'
  /portal/v2/sitegeometadata/{siteGeographicLoc}:
    patch:
      tags:
      - SiteGeographicMetaData
      summary: Create Site MetaData
      description: Creates a site MetaData
      operationId: patchBulkGeoData_1
      parameters:
      - name: siteGeographicLoc
        in: path
        required: true
        schema:
          type: string
          enum:
          - US
          - EU
          - APJ
          - UK
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AllowedSitePatchRequest'
        required: true
      responses:
        '412':
          description: Precondition Failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SiteAllowedRegionMetaData'
  /portal/v2/users/launchitems:
    get:
      tags:
      - Launch Items and Desktop Spec
      summary: Get launch Items
      description: Gets all the entitlements which can be launched by the assigned
        user.
      operationId: getV2LaunchItems
      responses:
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '200':
          description: OK
          content:
            application/json:
              schema:
                uniqueItems: true
                type: array
                items:
                  $ref: '#/components/schemas/LaunchItemsDTO'
  /portal/v2/pools/{id}/template/{dTemplateId}/vms:
    get:
      tags:
      - Pool
      summary: Get all VMs/unassigned VMs for a given template of pool
      description: 'excludeAssignedVms - If true - return only unassigned VMs. If
        false - return all VMs '
      operationId: listVmsWithUser
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: dTemplateId
        in: path
        required: true
        schema:
          type: string
      - name: org_id
        in: query
        required: false
        schema:
          type: string
      - name: excludeAssignedVms
        in: query
        required: false
        schema:
          type: boolean
      - name: page
        in: query
        description: Page number to retrieve.
        schema:
          type: number
          default: 0
      - name: size
        in: query
        description: Size of each page.
        schema:
          type: number
          default: 10
      - name: sort
        in: query
        description: Ascending/Descending. Format is property,{asc|desc} and default
          is ascending.
        schema:
          type: array
          items:
            type: string
      responses:
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageInvVmWithUser'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /portal/v2/integration/external/tenants/{idpTenantID}/orgs:
    get:
      tags:
      - External Integration apis
      summary: Get orgs
      description: Get orgs for tenant
      operationId: getOrgsForTenant
      parameters:
      - name: idpTenantID
        in: path
        required: true
        schema:
          type: string
      responses:
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '200':
          description: OK
          content:
            application/json:
              schema:
                uniqueItems: true
                type: array
                items:
                  $ref: '#/components/schemas/OrgTO'
  /portal/v2/integration/external/tenants/{idpTenantID}/orgs/{orgId}/poolgroups:
    get:
      tags:
      - External Integration apis
      summary: Get Poolgroups
      description: Get PoolGroups within an org
      operationId: getPoolGroupsForTenantOrg
      parameters:
      - name: idpTenantID
        in: path
        required: true
        schema:
          type: string
      - name: orgId
        in: path
        required: true
        schema:
          type: string
      - name: page
        in: query
        description: Page number to retrieve.
        schema:
          type: number
          default: 0
      - name: size
        in: query
        description: Size of each page.
        schema:
          type: number
          default: 10
      - name: sort
        in: query
        description: Ascending/Descending. Format is property,{asc|desc} and default
          is ascending.
        schema:
          type: array
          items:
            type: string
      - name: search
        in: query
        description: Search Criteria. Please see model definition for list of searchable
          fields.
        schema:
          type: string
        example: name $eq name-1
      responses:
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagePoolGroupTO'
  /portal/v2/integration/external/tenants/{idpTenantID}/extusers/{userId}/launchitems:
    get:
      tags:
      - External Integration apis
      summary: Get launch Items
      description: Gets all the entitlements which can be launched by the assigned
        user.
      operationId: getLaunchItems
      parameters:
      - name: idpTenantID
        in: path
        required: true
        schema:
          type: string
      - name: userId
        in: path
        required: true
        schema:
          type: string
      - name: icon_expiry_minutes
        in: query
        required: false
        schema:
          type: integer
          format: int32
      responses:
        '412':
          description: Precondition Failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '200':
          description: OK
          content:
            application/json:
              schema:
                uniqueItems: true
                type: array
                items:
                  $ref: '#/components/schemas/ExternalIntLaunchItem'
  /portal/v2/integration/external/tenants/{idpTenantID}/extusers/{userId}/launchitems/{launchId}:
    get:
      tags:
      - External Integration apis
      summary: Get launch Item
      description: Gets launch item by Id
      operationId: getLaunchItem
      parameters:
      - name: idpTenantID
        in: path
        required: true
        schema:
          type: string
      - name: userId
        in: path
        required: true
        schema:
          type: string
      - name: launchId
        in: path
        required: true
        schema:
          type: string
      - name: icon_expiry_minutes
        in: query
        required: false
        schema:
          type: integer
          format: int32
      responses:
        '412':
          description: Precondition Failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExternalIntLaunchItem'
  /portal/v2/entitlements/unassign/status/{jobId}:
    get:
      tags:
      - EntitlementsV2
      summary: Check the status of bulk unassign operation
      description: Check the status of bulk unassign operation for given jobId of
        an org.
      operationId: statusUnassignBulk
      parameters:
      - name: jobId
        in: path
        required: true
        schema:
          type: string
      - name: org_id
        in: query
        required: false
        schema:
          type: string
      responses:
        '200':
          description: Check the status of bulk unassign operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntitlementUnassignTask'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /portal/v2/entitlements/entitled-users/{userId}:
    get:
      tags:
      - EntitlementsV2
      summary: Get entitlements for given User
      description: Get entitlements for given User
      operationId: getEntitledUsers
      parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: string
      - name: org_id
        in: query
        required: false
        schema:
          type: string
      responses:
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EntitlementV2'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /portal/v3/entitlements/entitled-users/{userId}:
    get:
      tags:
      - EntitlementsV2
      summary: Get entitlements for given User
      description: Get entitlements for given User
      operationId: getEntitledUsers_1
      parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: string
      - name: org_id
        in: query
        required: false
        schema:
          type: string
      responses:
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EntitlementV2'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /portal/v1/users/sessions:
    get:
      tags:
      - Launch Items and Desktop Spec
      summary: Get existing sessions for users
      description: Get all existing sessions which was launched by the user.
      operationId: getSessions
      responses:
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '200':
          description: Returns list of user sessions.
          content:
            application/json:
              schema:
                uniqueItems: true
                type: array
                items:
                  $ref: '#/components/schemas/UserSessionDTO'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Unexpected internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /portal/v2/users/sessions:
    get:
      tags:
      - Launch Items and Desktop Spec
      summary: Get existing sessions for users
      description: Get all existing sessions which was launched by the user.
      operationId: getSessions_1
      responses:
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '200':
          description: Returns list of user sessions.
          content:
            application/json:
              schema:
                uniqueItems: true
                type: array
                items:
                  $ref: '#/components/schemas/UserSessionDTO'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Unexpected internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /portal/v1/users/launchitems:
    get:
      tags:
      - Launch Items and Desktop Spec
      summary: Get launch Items
      description: Gets all the entitlements which can be launched by the assigned
        user.
      operationId: getLaunchItems_1
      responses:
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '200':
          description: OK
          content:
            application/json:
              schema:
                uniqueItems: true
                type: array
                items:
                  $ref: '#/components/schemas/LaunchItemsDTO'
  /portal/v1/users/action/{action}/status/{id}:
    get:
      tags:
      - Launch Items and Desktop Spec
      summary: Check status of user action
      operationId: checkActionStatus
      parameters:
      - name: action
        in: path
        required: true
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionStatus'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Unexpected internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /portal/v2/users/action/{action}/status/{id}:
    get:
      tags:
      - Launch Items and Desktop Spec
      summary: Check status of user action
      operationId: checkActionStatus_1
      parameters:
      - name: action
        in: path
        required: true
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionStatus'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Unexpected internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /portal/v1/task/entity/{id}:
    get:
      tags:
      - Task
      summary: Get scheduled tasks by entity id
      operationId: getTasksByEntityId
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: org_id
        in: query
        required: false
        schema:
          type: string
      - name: type
        in: query
        required: false
        schema:
          type: string
          enum:
          - ENTITLEMENT_UNASSIGN_TASK
          - ENTITLEMENT_CREATE_SYNC_TASK
          - ENTITLEMENT_PATCH_SYNC_TASK
          - POOL_PATCH_SYNC_TASK
          - POOL_DELETE_TASK
          - AV_APPLICATION_REMOVE_TASK
      - name: page
        in: query
        description: Page number to retrieve.
        schema:
          type: number
          default: 0
      - name: size
        in: query
        description: Size of each page.
        schema:
          type: number
          default: 10
      - name: sort
        in: query
        description: Ascending/Descending. Format is property,{asc|desc} and default
          is ascending.
        schema:
          type: array
          items:
            type: string
      responses:
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '412':
          description: Precondition Failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageTask'
  /portal/v1/sites/edges/{ids}:
    get:
      tags:
      - Site
      summary: Get Sites for edges
      description: Get Sites for edges
      operationId: getSitesByEdges
      parameters:
      - name: ids
        in: path
        required: true
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
      - name: org_id
        in: query
        required: false
        schema:
          type: string
      responses:
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SiteEdgeResponse'
  /portal/v2/sites/edges/{ids}:
    get:
      tags:
      - Site
      summary: Get Sites for edges
      description: Get Sites for edges
      operationId: getSitesByEdges_1
      parameters:
      - name: ids
        in: path
        required: true
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
      - name: org_id
        in: query
        required: false
        schema:
          type: string
      responses:
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SiteEdgeResponse'
  /portal/v1/sites/allowed/sites:
    get:
      tags:
      - Site
      summary: Get allowed sites
      description: Get allowed sites
      operationId: getAllAllowedSitesForGivenRegion
      parameters:
      - name: providerInstanceId
        in: query
        required: true
        schema:
          type: string
      - name: providerType
        in: query
        required: true
        schema:
          type: string
      - name: org_id
        in: query
        required: false
        schema:
          type: string
      responses:
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllowedSiteResponse'
  /portal/v2/sites/allowed/sites:
    get:
      tags:
      - Site
      summary: Get allowed sites
      description: Get allowed sites
      operationId: getAllAllowedSitesForGivenRegion_1
      parameters:
      - name: providerInstanceId
        in: query
        required: true
        schema:
          type: string
      - name: providerType
        in: query
        required: true
        schema:
          type: string
      - name: org_id
        in: query
        required: false
        schema:
          type: string
      responses:
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllowedSiteResponse'
  /portal/v1/sitegeometadata/{geographicLoc}:
    get:
      tags:
      - SiteGeographicMetaData
      summary: Get Site Meta Data for given geograhic location
      description: Get Site Meta Data for given geograhic location
      operationId: getByGeographicLoc
      parameters:
      - name: geographicLoc
        in: path
        required: true
        schema:
          type: string
          enum:
          - US
          - EU
          - APJ
          - UK
      responses:
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageSiteAllowedRegionMetaData'
  /portal/v2/sitegeometadata/{geographicLoc}:
    get:
      tags:
      - SiteGeographicMetaData
      summary: Get Site Meta Data for given geograhic location
      description: Get Site Meta Data for given geograhic location
      operationId: getByGeographicLoc_1
      parameters:
      - name: geographicLoc
        in: path
        required: true
        schema:
          type: string
          enum:
          - US
          - EU
          - APJ
          - UK
      responses:
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageSiteAllowedRegionMetaData'
  /portal/v1/sessions:
    get:
      tags:
      - Session
      summary: Filter sessions
      description: Filter sessions
      operationId: findSessions
      parameters:
      - name: org_id
        in: query
        required: false
        schema:
          type: string
      - name: userId
        in: query
        required: true
        schema:
          type: string
      - name: excludeAssigned
        in: query
        required: false
        schema:
          type: boolean
      responses:
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InvSessionDTO'
  /portal/v2/sessions:
    get:
      tags:
      - Session
      summary: Filter sessions
      description: Filter sessions
      operationId: findSessions_1
      parameters:
      - name: org_id
        in: query
        required: false
        schema:
          type: string
      - name: userId
        in: query
        required: true
        schema:
          type: string
      - name: excludeAssigned
        in: query
        required: false
        schema:
          type: boolean
      responses:
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InvSessionDTO'
  /portal/v1/report/dedicated-desktops:
    get:
      tags:
      - Report Activities
      summary: Get user desktop mapping by Users
      description: UserId is a must
      operationId: getAllMappingsByUser
      parameters:
      - name: userId
        in: query
        required: true
        schema:
          type: string
      - name: org_id
        in: query
        required: false
        schema:
          type: string
      responses:
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserDesktopMapping'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /portal/v1/homesitemappings/mappings:
    get:
      tags:
      - HomeSite Mappings
      summary: Get Homesite mappings by entityId and OrgId
      description: Get Homesite mappings by entityId and OrgId
      operationId: findMappingByEntityIdAndOrgId
      parameters:
      - name: entityId
        in: query
        required: true
        schema:
          type: string
      - name: org_id
        in: query
        required: false
        schema:
          type: string
      responses:
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HomesiteMapping'
  /portal/v2/homesitemappings/mappings:
    get:
      tags:
      - HomeSite Mappings
      summary: Get Homesite mappings by entityId and OrgId
      description: Get Homesite mappings by entityId and OrgId
      operationId: findMappingByEntityIdAndOrgId_1
      parameters:
      - name: entityId
        in: query
        required: true
        schema:
          type: string
      - name: org_id
        in: query
        required: false
        schema:
          type: string
      responses:
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HomesiteMapping'
  /portal/.well-known/openid-configuration:
    get:
      tags:
      - Launch Items and Desktop Spec
      summary: Get JWT key
      operationId: getJwtKeys
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
  /portal/v1/sites/edges/{edgeId}:
    delete:
      tags:
      - Site
      summary: Delete SiteEdgeMapping by edgeId
      description: Delete SiteEdgeMapping by edgeId.
      operationId: deleteSiteEdgeMapping
      parameters:
      - name: edgeId
        in: path
        required: true
        schema:
          type: string
      - name: org_id
        in: query
        required: false
        schema:
          type: string
      responses:
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '204':
          description: No Content
  /portal/v2/sites/edges/{edgeId}:
    delete:
      tags:
      - Site
      summary: Delete SiteEdgeMapping by edgeId
      description: Delete SiteEdgeMapping by edgeId.
      operationId: deleteSiteEdgeMapping_1
      parameters:
      - name: edgeId
        in: path
        required: true
        schema:
          type: string
      - name: org_id
        in: query
        required: false
        schema:
          type: string
      responses:
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '204':
          description: No Content
  /portal/v1/homesitemappings/bulk:
    delete:
      tags:
      - HomeSite Mappings
      summary: delete HomeSite mappings in bulk
      description: Delete HomeSite mappings in bulk transaction is atomic i.e any
        one fails complete transaction fails.
      operationId: deleteBulkHomeSiteMapping
      parameters:
      - name: org_id
        in: query
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
        required: true
      responses:
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '200':
          description: OK
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /portal/v2/homesitemappings/bulk:
    delete:
      tags:
      - HomeSite Mappings
      summary: delete HomeSite mappings in bulk
      description: Delete HomeSite mappings in bulk transaction is atomic i.e any
        one fails complete transaction fails.
      operationId: deleteBulkHomeSiteMapping_1
      parameters:
      - name: org_id
        in: query
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
        required: true
      responses:
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '200':
          description: OK
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /admin/v2/templates/{templateId}/vms/{vmId}:
    get:
      tags:
      - Pool Virtual Machines
      summary: Get an individual template virtual machine by its id/name.
      operationId: getVirtualMachineById
      parameters:
      - name: templateId
        in: path
        description: ID of template containing the VM
        required: true
        schema:
          type: string
      - name: vmId
        in: path
        description: ID of the virtual machine
        required: true
        schema:
          type: string
      - name: org_id
        in: query
        description: 'Organization ID: non-super users can only access their own organization'
        required: false
        schema:
          type: string
      - name: page
        in: query
        description: Page number to retrieve.
        schema:
          type: number
          default: 0
      - name: size
        in: query
        description: Size of each page.
        schema:
          type: number
          default: 10
      - name: sort
        in: query
        description: Ascending/Descending. Format is property,{asc|desc} and default
          is ascending.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      responses:
        '200':
          description: Successfully retrieved template VirtualMachines
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventoryVM'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Unexpected internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
      - Pool Virtual Machines
      summary: Register an existing virtual machine by its id/name.
      operationId: registerVirtualMachine
      parameters:
      - name: templateId
        in: path
        description: ID of template containing the VM
        required: true
        schema:
          type: string
      - name: vmId
        in: path
        description: ID of the virtual machine
        required: true
        schema:
          type: string
      - name: org_id
        in: query
        description: 'Organization ID: non-super users can only access their own organization'
        required: false
        schema:
          type: string
      - name: page
        in: query
        description: Page number to retrieve.
        schema:
          type: number
          default: 0
      - name: size
        in: query
        description: Size of each page.
        schema:
          type: number
          default: 10
      - name: sort
        in: query
        description: Ascending/Descending. Format is property,{asc|desc} and default
          is ascending.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VMRegisterTO'
        required: true
      responses:
        '200':
          description: Successfully registered template virtual machine
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventoryVM'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Unexpected internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: The payload is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: The virtual machine with that ID already exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      tags:
      - Pool Virtual Machines
      summary: Perform an individual template virtual machine action by its id/name.
      operationId: performVirtualMachineActionById
      parameters:
      - name: templateId
        in: path
        description: ID of template containing the VM
        required: true
        schema:
          type: string
      - name: vmId
        in: path
        description: ID of the virtual machine
        required: true
        schema:
          type: string
      - name: action
        in: query
        description: 'Action to perform: one of ''powerOff'', ''powerOn'', ''restart'',
          ''shutdown'', ''resize'', ''rebuild'', ''pair'''
        required: true
        schema:
          type: string
      - name: org_id
        in: query
        description: 'Organization ID: non-super users can only access their own organization'
        required: false
        schema:
          type: string
      - name: page
        in: query
        description: Page number to retrieve.
        schema:
          type: number
          default: 0
      - name: size
        in: query
        description: Size of each page.
        schema:
          type: number
          default: 10
      - name: sort
        in: query
        description: Ascending/Descending. Format is property,{asc|desc} and default
          is ascending.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      responses:
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '202':
          description: Successfully accepted VirtualMachine action
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Unexpected internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
      - Pool Virtual Machines
      summary: Delete an individual template virtual machine by its id/name.
      operationId: deleteVirtualMachineById
      parameters:
      - name: templateId
        in: path
        description: ID of template containing the VM
        required: true
        schema:
          type: string
      - name: vmId
        in: path
        description: ID of the virtual machine
        required: true
        schema:
          type: string
      - name: ignore_warnings
        in: query
        description: If true, errors classified as warnings will be ignored
        required: false
        schema:
          type: boolean
          default: false
      - name: org_id
        in: query
        description: 'Organization ID: non-super users can only access their own organization'
        required: false
        schema:
          type: string
      - name: page
        in: query
        description: Page number to retrieve.
        schema:
          type: number
          default: 0
      - name: size
        in: query
        description: Size of each page.
        schema:
          type: number
          default: 10
      - name: sort
        in: query
        description: Ascending/Descending. Format is property,{asc|desc} and default
          is ascending.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      responses:
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '202':
          description: Successfully accepted VirtualMachine action
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Unexpected internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /admin/v1/dem-settings/{id}:
    get:
      tags:
      - Dynamic Environment Manager Settings
      summary: Fetch DEM Setting by id
      description: Fetch one DEM Setting record
      operationId: getById_6
      parameters:
      - name: id
        in: path
        description: DEM Setting ID
        required: true
        schema:
          type: string
      - name: org_id
        in: query
        description: 'Organization ID: non-super users can only access their own organization'
        required: false
        schema:
          type: string
      responses:
        '404':
          description: DEM Setting record not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '200':
          description: Successfully retrieved DEM Setting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DEMSettingTO'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
      - Dynamic Environment Manager Settings
      summary: Update an existing DEM Setting record.
      description: Updates an existing DEM Setting record with new values.
      operationId: modifyById
      parameters:
      - name: id
        in: path
        description: DEM Setting ID
        required: true
        schema:
          type: string
      - name: org_id
        in: query
        description: 'Organization ID: non-super users can only access their own organization'
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DEMSettingTO'
        required: true
      responses:
        '409':
          description: DEM setting cannot be updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '202':
          description: Accepted the request to update existing DEM Setting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DEMSettingTO'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
      - Dynamic Environment Manager Settings
      summary: Delete a DEM Setting record
      description: Deletes a DEM Setting record from the database
      operationId: delete_7
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: org_id
        in: query
        description: 'Organization ID: non-super users can only access their own organization'
        required: false
        schema:
          type: string
      responses:
        '204':
          description: Successfully deleted DEM Setting record
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: DEM setting cannot be deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /admin/v3/batch/templates:
    post:
      tags:
      - Batch Pools
      summary: Perform an action on a batch of templates
      operationId: batchPerformActionV3
      parameters:
      - name: action
        in: query
        description: 'Action to perform. Ex: RESYNC, RETRY_PROVISIONING, CANCEL_PROVISIONING,
          DISABLE_PROVISIONING, ENABLE_PROVISIONING'
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TemplateQueryTO'
        required: true
      responses:
        '207':
          description: Mixed results. Response holds successful templates as well
            as failed templates.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateBatchResponseTO'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '202':
          description: Accepted the request to perform action on the templates without
            any issues. Response holds the templates with modified status.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateBatchResponseTO'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
      - Batch Pools
      summary: Delete a batch of templates
      operationId: batchDeleteV3
      parameters:
      - name: force
        in: query
        description: If true, deletes despite potential clean-up errors
        required: false
        allowEmptyValue: true
        schema:
          type: boolean
          default: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TemplateQueryTO'
        required: true
      responses:
        '202':
          description: Accepted the request to delete the templates without any issues.
            Response holds the templates with modified status.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateBatchResponseTO'
        '207':
          description: Mixed results. Response holds successful templates as well
            as failed templates.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateBatchResponseTO'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      tags:
      - Batch Pools
      summary: Patch a batch of templates
      operationId: batchPatchV3
      parameters:
      - name: ignore_warnings
        in: query
        description: If true, errors classified as warnings will be ignored
        required: false
        schema:
          type: boolean
          default: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TemplateBatchPatchRequestTO'
        required: true
      responses:
        '207':
          description: Mixed results. Response holds successful templates as well
            as failed templates.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateBatchResponseTO'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '202':
          description: Accepted the request to patch the templates without any issues.
            Response holds the templates with modified status.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateBatchResponseTO'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /admin/v2/uag-deployments:
    get:
      tags:
      - UAG Deployments
      summary: Get all UAG deployments
      operationId: getAllUAGDeployments
      parameters:
      - name: org_id
        in: query
        description: 'Organization ID: non-super users can only access their own organization'
        required: false
        schema:
          type: string
      - name: page
        in: query
        description: Page number to retrieve.
        schema:
          type: number
          default: 0
      - name: search
        in: query
        description: Search Criteria. Please see model definition for list of searchable
          fields.
        schema:
          type: string
        example: id $eq id-1
      - name: size
        in: query
        description: Size of each page.
        schema:
          type: number
          default: 10
      - name: sort
        in: query
        description: Ascending/Descending. Format is property,{asc|desc} and default
          is ascending.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      responses:
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '200':
          description: Successfully retrieved all deployments
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageUAGDeploymentTOV2'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      tags:
      - UAG Deployments
      summary: 'Created a new UAG deployment: initiates the deployment process'
      operationId: create
      parameters:
      - name: ignore_warnings
        in: query
        description: If true, errors classified as warnings will be ignored
        required: false
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UAGDeploymentCreateTOV2'
        required: true
      responses:
        '201':
          description: Successfully create UAG Deployment
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UAGDeploymentTOV2'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '423':
          description: 'Provider disabled '
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Unexpected internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /admin/v2/uag-deployments/{id}/retry:
    post:
      tags:
      - UAG Deployments
      summary: Retry creating or scaling a UAG deployment.
      operationId: retry
      parameters:
      - name: id
        in: path
        description: UAG Deployment ID
        required: true
        schema:
          type: string
      - name: org_id
        in: query
        description: 'Organization ID: non-super users can only access their own organization'
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UAGDeploymentRetryTO'
        required: true
      responses:
        '201':
          description: Successfully retry UAG Deployment
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UAGDeploymentTOV2'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '423':
          description: 'Provider disabled '
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Unexpected internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /admin/v2/uag-deployments/{id}/gateways:
    get:
      tags:
      - UAG Deployments
      summary: Get all UAG gateways under UAG deployment ID
      operationId: getAllUAGGatewaysFromDeployment
      parameters:
      - name: id
        in: path
        description: UAG Deployment ID
        required: true
        schema:
          type: string
      - name: include_reported_properties
        in: query
        description: If true, returns reported properties of gateway
        required: false
        schema:
          type: boolean
      - name: org_id
        in: query
        description: 'Organization ID: non-super users can only access their own organization'
        required: false
        schema:
          type: string
      responses:
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '200':
          description: Successfully retrieved all gateways from deployment
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UAGVmDetailsTO'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UAGVmDetailsTO'
    post:
      tags:
      - UAG Deployments
      summary: Add a UAG Gateway to UAG Deployment id.
      description: Create new UAG Gateway node record under existing UAG deployment.
      operationId: addUAGGatewayToDeployment
      parameters:
      - name: id
        in: path
        description: UAG Deployment ID
        required: true
        schema:
          type: string
      - name: org_id
        in: query
        description: 'Organization ID: non-super users can only access their own organization'
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UAGVmDetailsCreateTO'
        required: true
      responses:
        '202':
          description: Accepted the request to add UAG Gateway
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UAGDeploymentTOV2'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Unexpected internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: Conflict -  concurrent updates
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /admin/v2/uag-deployments/{id}/diagnose:
    post:
      tags:
      - UAG Deployments
      summary: Diagnose UAG and perform repair operations for the given uag deployment
      operationId: getDiagnosticsData
      parameters:
      - name: id
        in: path
        description: UAG deployment Id
        required: true
        schema:
          type: string
      - name: org_id
        in: query
        description: 'Organization ID: non-super users can only access their own organization'
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
              - $ref: '#/components/schemas/GetPkiCertificateTO'
              - $ref: '#/components/schemas/UpdatePkiCertificateTO'
        required: true
      responses:
        '200':
          description: Successfully completed diagnostic operation for uag deployment
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UAGDeploymentDiagnosticResponseTO'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Unexpected internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /admin/v2/templates:
    get:
      tags:
      - Pools
      summary: Get all templates, with filtering and paging.
      operationId: getAll_1
      parameters:
      - name: brokerable_only
        in: query
        description: Limit results to templates that can be used for end-user connections
        required: false
        schema:
          type: boolean
      - name: expanded
        in: query
        description: Include child data in results. Options are 'all', 'none', 'limited'
        required: false
        schema:
          type: string
      - name: org_id
        in: query
        description: 'Organization ID: non-super users can only access their own organization'
        required: false
        schema:
          type: string
      - name: page
        in: query
        description: Page number to retrieve.
        schema:
          type: number
          default: 0
      - name: reported_search
        in: query
        description: Search expression for selection of template reported properties
        schema:
          type: string
      - name: size
        in: query
        description: Size of each page.
        schema:
          type: number
          default: 10
      - name: sort
        in: query
        description: Ascending/Descending. Format is property,{asc|desc} and default
          is ascending
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: template_search
        in: query
        description: Search expression for selection of templates
        schema:
          type: string
      responses:
        '200':
          description: Successfully retrieved templates
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageTemplateTOV2'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Unexpected internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      tags:
      - Pools
      summary: Create a new template.
      operationId: create_1
      parameters:
      - name: ignore_warnings
        in: query
        description: If true, errors classified as warnings will be ignored
        required: false
        schema:
          type: boolean
          default: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TemplateCreateTOV2'
        required: true
      responses:
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '201':
          description: Successfully created template
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateTOV2'
        '500':
          description: Failed to save template
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /admin/v2/templates/{templateId}:
    post:
      tags:
      - Pools
      summary: Perform an action on a template
      operationId: performAction
      parameters:
      - name: templateId
        in: path
        description: Template ID
        required: true
        schema:
          type: string
      - name: action
        in: query
        description: 'Action to perform. Ex: RESYNC, RETRY_PROVISIONING, CANCEL_PROVISIONING,
          DISABLE_PROVISIONING, ENABLE_PROVISIONING'
        required: true
        schema:
          type: string
      - name: org_id
        in: query
        description: 'Organization ID: non-super users can only access their own organization'
        required: false
        schema:
          type: string
      responses:
        '404':
          description: Template does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Failed to delete template from DB
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '202':
          description: Accepted the request to perform that action on the template
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateTOV2'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /admin/v2/templates/{templateId}/vms:
    get:
      tags:
      - Pool Virtual Machines
      summary: Get all the virtual machines in a given template.
      operationId: getVirtualMachines
      parameters:
      - name: templateId
        in: path
        description: ID of template containing the VM
        required: true
        schema:
          type: string
      - name: exclude_vms_with_no_available_sessions
        in: query
        description: Exclude Assigned VMs with no free sessions
        required: false
        allowEmptyValue: true
        schema:
          type: boolean
          default: false
      - name: include_sessions
        in: query
        description: Include session information with VM information
        required: false
        allowEmptyValue: true
        schema:
          type: boolean
          default: false
      - name: org_id
        in: query
        description: 'Organization ID: non-super users can only access their own organization'
        required: false
        schema:
          type: string
      - name: page
        in: query
        description: Page number to retrieve.
        required: false
        schema:
          type: number
          default: 0
      - name: size
        in: query
        description: Size of each page.
        required: false
        schema:
          type: number
          default: 10
      responses:
        '200':
          description: Successfully retrieved template VirtualMachines
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageInventoryVmWithSessions'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Unexpected internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      tags:
      - Pool Virtual Machines
      summary: Perform batch template virtual machine action by their IDs.
      operationId: performBatchVirtualMachineAction
      parameters:
      - name: templateId
        in: path
        description: ID of template containing the VM
        required: true
        schema:
          type: string
      - name: action
        in: query
        description: 'Action to perform: one of ''powerOff'', ''powerOn'', ''restart'',
          ''shutdown'', ''resize'', ''rebuild'', ''pair'''
        required: true
        schema:
          type: string
      - name: org_id
        in: query
        description: 'Organization ID: non-super users can only access their own organization'
        required: false
        schema:
          type: string
      - name: page
        in: query
        description: Page number to retrieve.
        schema:
          type: number
          default: 0
      - name: size
        in: query
        description: Size of each page.
        schema:
          type: number
          default: 10
      - name: sort
        in: query
        description: Ascending/Descending. Format is property,{asc|desc} and default
          is ascending.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VirtualMachineQueryTO'
        required: true
      responses:
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '202':
          description: Successfully accepted VirtualMachine action
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Unexpected internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /admin/v2/templates/{templateId}/vms/{vmId}/pairing-info:
    post:
      tags:
      - Pool Virtual Machines
      summary: Get existing virtual machine pairing info by its id/name.
      operationId: getVirtualMachinePairingInfo
      parameters:
      - name: templateId
        in: path
        description: ID of template containing the VM
        required: true
        schema:
          type: string
      - name: vmId
        in: path
        description: ID of the virtual machine
        required: true
        schema:
          type: string
      - name: join_domain
        in: query
        description: Skip domain join if set to false
        required: false
        schema:
          type: boolean
          default: true
      - name: org_id
        in: query
        description: 'Organization ID: non-super users can only access their own organization'
        required: false
        schema:
          type: string
      - name: page
        in: query
        description: Page number to retrieve.
        schema:
          type: number
          default: 0
      - name: size
        in: query
        description: Size of each page.
        schema:
          type: number
          default: 10
      - name: sort
        in: query
        description: Ascending/Descending. Format is property,{asc|desc} and default
          is ascending.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      responses:
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '200':
          description: Successfully get template virtual machine pairing info
          content:
            application/json:
              schema:
                type: string
        '500':
          description: Unexpected internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /admin/v2/templates/{templateId}/vms/resize:
    post:
      tags:
      - Pool Virtual Machines
      summary: Perform batch template virtual machine resize action by search vms.
      operationId: performBatchVirtualMachineResizeAction
      parameters:
      - name: templateId
        in: path
        description: ID of template containing the VM
        required: true
        schema:
          type: string
      - name: org_id
        in: query
        description: 'Organization ID: non-super users can only access their own organization'
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VirtualMachineBatchResizeRequestTO'
        required: true
      responses:
        '202':
          description: Successfully accepted VirtualMachines resize action
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachineBatchResponseTO'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '207':
          description: Mixed results. Response holds successful virtualMachines as
            well as failed virtualMachines.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachineBatchResponseTO'
        '500':
          description: Unexpected internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /admin/v2/templates/expansions:
    post:
      tags:
      - Pools
      summary: Create a new expansion template (expanding an existing one)
      operationId: createExpansion
      parameters:
      - name: ignore_warnings
        in: query
        description: If true, errors classified as warnings will be ignored
        required: false
        schema:
          type: boolean
          default: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TemplateExpansionCreateTO'
        required: true
      responses:
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '201':
          description: Successfully created template
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateTOV2'
        '500':
          description: Failed to save template
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /admin/v2/sso-configurations:
    get:
      tags:
      - SSO Configurations V2
      summary: Get all SSO configuration records
      description: Get all SSO configurations, with an optional search filter. Please
        see model definition for search allowed fields.Non-super users can only query
        for their own org IDs. This will return all records for which the caller has
        'read' permission
      operationId: getAll_2
      parameters:
      - name: expanded
        in: query
        required: false
        schema:
          type: boolean
      - name: org_id
        in: query
        required: false
        schema:
          type: string
      - name: page
        in: query
        description: Page number to retrieve.
        schema:
          type: number
          default: 0
      - name: search
        in: query
        description: Search Criteria. Please see model definition for list of searchable
          fields.
        schema:
          type: string
        example: name $eq name-1
      - name: size
        in: query
        description: Size of each page.
        schema:
          type: number
          default: 10
      - name: sort
        in: query
        description: Ascending/Descending. Format is property,{asc|desc} and default
          is ascending.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      responses:
        '200':
          description: Successfully retrieved SSO configuration records
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageSsoConfigurationTOV2'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      deprecated: true
    post:
      tags:
      - SSO Configurations V2
      summary: Create a new SSO configuration record
      description: Creates a new SSO configuration record in the admin service, belonging
        to the specified org.
      operationId: create_2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SsoConfigurationCreateTOV2'
        required: true
      responses:
        '201':
          description: Successfully created SSO configuration record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SsoConfigurationTOV2'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      deprecated: true
  /admin/v2/providers/{label}/instances:
    get:
      tags:
      - Provider Instances
      summary: Return a list of all provider instances.
      operationId: getAll_3
      parameters:
      - name: label
        in: path
        description: Provider label
        required: true
        schema:
          type: string
      - name: include_health_details
        in: query
        description: If true, health details for each provider instance will be returned
        required: false
        allowEmptyValue: true
        schema:
          type: boolean
          default: false
      - name: org_id
        in: query
        description: 'Organization ID: non-super users can only access their own organization'
        required: false
        schema:
          type: string
      - name: page
        in: query
        description: Page number to retrieve.
        schema:
          type: number
          default: 0
      - name: search
        in: query
        description: Search Criteria. Please see model definition for list of searchable
          fields.
        schema:
          type: string
        example: id $eq id-1
      - name: size
        in: query
        description: Size of each page.
        schema:
          type: number
          default: 10
      - name: sort
        in: query
        description: Ascending/Descending. Format is property,{asc|desc} and default
          is ascending.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      responses:
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '423':
          description: 'Provider disabled '
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '200':
          description: Successfully retrieved provider instances
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageProviderInstanceTOV2'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      tags:
      - Provider Instances
      summary: Create a new provider instance.
      operationId: create_3
      parameters:
      - name: label
        in: path
        description: Provider label
        required: true
        schema:
          type: string
      - name: ignore_warnings
        in: query
        description: If true, errors classified as warnings will be ignored
        required: false
        schema:
          type: boolean
          default: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProviderInstanceCreateTOV2'
        required: true
      responses:
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '423':
          description: 'Provider disabled '
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '201':
          description: Successfully create provider instance
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProviderInstanceTOV2'
        '500':
          description: Unexpected internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /admin/v2/providers/{label}/instances/{id}:
    get:
      tags:
      - Provider Instances
      summary: Get a single provider instance by ID.
      operationId: getById_2
      parameters:
      - name: id
        in: path
        description: Provider instance ID
        required: true
        schema:
          type: string
      - name: label
        in: path
        description: Provider label
        required: true
        schema:
          type: string
      - name: include_health_details
        in: query
        description: If true, health details for each provider instance will be returned
        required: false
        allowEmptyValue: true
        schema:
          type: boolean
          default: false
      - name: org_id
        in: query
        description: 'Organization ID: non-super users can only access their own organization'
        required: false
        schema:
          type: string
      responses:
        '200':
          description: Successfully retrieved provider instance
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProviderInstanceTOV2'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '423':
          description: 'Provider disabled '
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      tags:
      - Provider Instances
      summary: Perform some global action on the provider instance.
      operationId: performInfrastructureAction
      parameters:
      - name: id
        in: path
        description: Provider instance ID
        required: true
        schema:
          type: string
      - name: label
        in: path
        description: Provider label
        required: true
        schema:
          type: string
      - name: action
        in: query
        description: 'Action to perform. One of: ''refresh'''
        required: true
        schema:
          type: string
      - name: org_id
        in: query
        description: 'Organization ID: non-super users can only access their own organization'
        required: false
        schema:
          type: string
      responses:
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '200':
          description: Successfully performed requested action on the provider instance
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProviderInstanceTOV2'
        '412':
          description: Precondition Failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '423':
          description: Provider disabled
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
      - Provider Instances
      summary: Delete an existing provider instance
      operationId: delete_2
      parameters:
      - name: id
        in: path
        description: Provider instance ID
        required: true
        schema:
          type: string
      - name: label
        in: path
        description: Provider label
        required: true
        schema:
          type: string
      - name: org_id
        in: query
        description: 'Organization ID: non-super users can only access their own organization'
        required: false
        schema:
          type: string
      responses:
        '409':
          description: Conflict - Provider instance in use
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '423':
          description: 'Provider disabled '
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Unexpected internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '200':
          description: Successfully deleted provider instance
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProviderInstanceTOV2'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '204':
          description: No Content
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProviderInstanceTOV2'
    patch:
      tags:
      - Provider Instances
      summary: This operation should be used to update Provider Details (credentials)
        of a provider instance
      operationId: patchById_1
      parameters:
      - name: id
        in: path
        description: Provider instance ID
        required: true
        schema:
          type: string
      - name: label
        in: path
        description: Provider label
        required: true
        schema:
          type: string
      - name: ignore_warnings
        in: query
        description: If true, errors classified as warnings will be ignored
        required: false
        schema:
          type: boolean
          default: false
      - name: org_id
        in: query
        description: 'Organization ID: non-super users can only access their own organization'
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProviderInstancePatchTOV2'
        required: true
      responses:
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '423':
          description: 'Provider disabled '
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Unexpected internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '200':
          description: Successfully updated provider instance
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProviderInstanceTOV2'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /admin/v2/providers/{label}/instances/verify:
    post:
      tags:
      - Provider Instances
      summary: Validate a potential new provider instance, without creating anything.
      operationId: verify
      parameters:
      - name: label
        in: path
        description: Provider label
        required: true
        schema:
          type: string
      - name: ignore_warnings
        in: query
        description: If true, errors classified as warnings will be ignored
        required: false
        schema:
          type: boolean
          default: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProviderInstanceCreateTOV2'
        required: true
      responses:
        '200':
          description: Successfully verified
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProviderInstanceCreateTOV2'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '423':
          description: 'Provider disabled '
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Unexpected internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /admin/v2/edge-deployments:
    get:
      tags:
      - Edge Deployments
      summary: Get all Edge deployments
      operationId: getAllEdgeDeployments
      parameters:
      - name: include_reported_status
        in: query
        description: Status of edge reported attributes
        required: false
        schema:
          type: boolean
      - name: org_id
        in: query
        description: 'Organization ID: non-super users can only access their own organization'
        required: false
        schema:
          type: string
      - name: page
        in: query
        description: Page number to retrieve.
        schema:
          type: number
          default: 0
      - name: search
        in: query
        description: Search Criteria. Please see model definition for list of searchable
          fields.
        schema:
          type: string
        example: id $eq id-1
      - name: size
        in: query
        description: Size of each page.
        schema:
          type: number
          default: 10
      - name: sort
        in: query
        description: Ascending/Descending. Format is property,{asc|desc} and default
          is ascending.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      responses:
        '200':
          description: Successfully retrieved all edge deployments
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageEdgeDeploymentTOV2'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Unexpected internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      tags:
      - Edge Deployments
      summary: 'Create a new Edge deployment: initiates the deployment process'
      operationId: create_4
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EdgeDeploymentCreateTOV2'
        required: true
      responses:
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Unexpected internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '201':
          description: Successfully created Edge Deployment
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdgeDeploymentTOV2'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /admin/v2/edge-deployments/{id}/sync-twin-configuration:
    post:
      tags:
      - Edge Deployments
      summary: Sync Twin Configuration for given edge modules in an Edge
      operationId: syncTwinConfig
      parameters:
      - name: id
        in: path
        description: Edge deployment ID
        required: true
        schema:
          type: string
      - name: org_id
        in: query
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TwinSyncRequestTO'
        required: true
      responses:
        '202':
          description: Sync Twin Configuration Request is accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TwinSyncResponseTO'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Unexpected internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /admin/v2/edge-deployments/{id}/reported-properties:
    post:
      tags:
      - Edge Deployments
      summary: Save edge reported attributes for an org.
      operationId: saveEdgeReportedAttributes
      parameters:
      - name: id
        in: path
        description: Edge deployment ID
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EdgeEventAttributesTO'
        required: true
      responses:
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Unexpected internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '201':
          description: Save edge deployment reported attributes for an org.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdgeEventAttributesTO'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /admin/v2/edge-deployments/{id}/repair:
    post:
      tags:
      - Edge Deployments
      summary: Marks an Edge deployment for repair. Edge Repair will occur in the
        background.
      operationId: repair
      parameters:
      - name: id
        in: path
        description: Edge deployment ID
        required: true
        schema:
          type: string
      - name: force
        in: query
        description: Edge deployment can be repaired irrespective of the current status
          of the edge.
        required: false
        schema:
          type: boolean
          default: false
      - name: org_id
        in: query
        description: 'Organization ID: non-super users can only access their own organization'
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EdgeDeploymentRepairTO'
      responses:
        '202':
          description: Accepted the request to repair the Edge Deployment
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdgeDeploymentTOV2'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Unexpected internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /admin/v2/edge-deployments/{id}/migrate:
    post:
      tags:
      - Edge Deployments
      summary: Migrate edge deployment from VM to cluster deployment
      operationId: migrateEdgeDeployment
      parameters:
      - name: id
        in: path
        description: Edge deployment ID
        required: true
        schema:
          type: string
      - name: org_id
        in: query
        description: 'Organization ID: non-super users can only access their own organization'
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EdgeDeploymentMigrateTO'
        required: true
      responses:
        '202':
          description: Successfully accepted the edge deployment migration request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdgeDeploymentTOV2'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Unexpected internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /admin/v2/edge-deployments/{id}/logs:
    get:
      tags:
      - Edge Deployments
      summary: Get Edge Deployment Log by Id
      operationId: getEdgeDeploymentLogs
      parameters:
      - name: id
        in: path
        description: Edge deployment ID
        required: true
        schema:
          type: string
      - name: org_id
        in: query
        required: false
        schema:
          type: string
      - name: page
        in: query
        description: Page number to retrieve.
        schema:
          type: number
          default: 0
      - name: search
        in: query
        description: Search Criteria. Please see model definition for list of searchable
          fields.
        schema:
          type: string
        example: name $eq name-1
      - name: size
        in: query
        description: Size of each page.
        schema:
          type: number
          default: 10
      - name: sort
        in: query
        description: Ascending/Descending. Format is property,{asc|desc} and default
          is ascending.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      responses:
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Unexpected internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '200':
          description: Successfully retrieved All Edge Deployment Logs for Deployment
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageEdgeDeploymentLogTO'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      tags:
      - Edge Deployments
      summary: Create edge deployment log via runCommand
      operationId: createAndUploadLogs
      parameters:
      - name: id
        in: path
        description: Edge deployment ID
        required: true
        schema:
          type: string
      - name: org_id
        in: query
        description: 'Organization ID: non-super users can only access their own organization'
        required: false
        schema:
          type: string
      responses:
        '201':
          description: Successfully created log for edge deployment
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdgeDeploymentLogTO'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Unexpected internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /admin/v2/edge-deployments/{id}/fqdn/migration:
    post:
      tags:
      - Edge Deployments
      summary: Migrate edge fqdn to new DNS domain
      operationId: migrateEdgeFqdn
      parameters:
      - name: id
        in: path
        description: Edge deployment ID
        required: true
        schema:
          type: string
      - name: org_id
        in: query
        description: 'Organization ID: non-super users can only access their own organization'
        required: false
        schema:
          type: string
      responses:
        '200':
          description: Successfully migrated Edge FQDN to new DNS server
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdgeFqdnPatchResponseTO'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Unexpected internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /admin/v2/edge-deployments/{id}/edge-modules:
    post:
      tags:
      - Edge Deployments
      summary: Register default edge modules in edge controller for a provider type.
      operationId: registerDefaultModulesToEdge
      parameters:
      - name: id
        in: path
        description: Edge deployment ID
        required: true
        schema:
          type: string
      - name: action
        in: query
        description: 'Action to perform. One of: ''register'''
        required: true
        schema:
          type: string
      - name: org_id
        in: query
        description: 'Organization ID: non-super users can only access their own organization'
        required: true
        schema:
          type: string
      responses:
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Unexpected internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '200':
          description: Successfully registered edge modules to edge controller
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdgeDeploymentTOV2'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /admin/v2/edge-deployments/{id}/diagnose:
    post:
      tags:
      - Edge Deployments
      summary: Get Diagnostics information for the given edge
      operationId: getDiagnosticsDataV2
      parameters:
      - name: id
        in: path
        description: Edge deployment ID
        required: true
        schema:
          type: string
      - name: org_id
        in: query
        description: 'Organization ID: non-super users can only access their own organization'
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
              - $ref: '#/components/schemas/CheckVMOutboundConnectivityTO'
              - $ref: '#/components/schemas/DeleteStalePodsTO'
              - $ref: '#/components/schemas/DescribeDeploymentTO'
              - $ref: '#/components/schemas/DescribeNodeTO'
              - $ref: '#/components/schemas/GetAllContainersTO'
              - $ref: '#/components/schemas/GetDeploymentsTO'
              - $ref: '#/components/schemas/GetEventsTO'
              - $ref: '#/components/schemas/GetKubernetesVersionTO'
              - $ref: '#/components/schemas/GetNamespacesTO'
              - $ref: '#/components/schemas/GetNodesTO'
              - $ref: '#/components/schemas/GetPodLogsTO'
              - $ref: '#/components/schemas/GetPodsTO'
              - $ref: '#/components/schemas/GetServicesTO'
              - $ref: '#/components/schemas/GetVMPowerStateTO'
              - $ref: '#/components/schemas/ListDetectorsTO'
              - $ref: '#/components/schemas/ListVMResourcesTO'
              - $ref: '#/components/schemas/RestartAllNodesTO'
              - $ref: '#/components/schemas/RestartDeploymentTO'
              - $ref: '#/components/schemas/RestartNodeTO'
              - $ref: '#/components/schemas/RestartVMTO'
              - $ref: '#/components/schemas/StopWazuhTO'
              - $ref: '#/components/schemas/TopTO'
              - $ref: '#/components/schemas/URLAccessibilityTO'
              - $ref: '#/components/schemas/UnInstallWazuhTO'
        required: true
      responses:
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '200':
          description: Successfully retrieved requested diagnostic data for edge deployment
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdgeDeploymentDiagnosticResponseTO'
        '500':
          description: Unexpected internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /admin/v2/edge-deployments/verify:
    post:
      tags:
      - Edge Deployments
      summary: Validate a potential new edge deployment, without creating anything.
      operationId: verify_1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EdgeDeploymentCreateTOV2'
        required: true
      responses:
        '200':
          description: Successfully verified
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdgeDeploymentTOV2'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Unexpected internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /admin/v2/active-directories:
    get:
      tags:
      - Active Directories
      summary: Get all Active Directory records
      description: 'Get all Active Directory configurations.Non-super users can only
        query for their own org IDs. This will return all records for which the caller
        has ''read'' permission.

        Please refer to the ActiveDirectoryTO Model for searchable fields.'
      operationId: getAll_4
      parameters:
      - name: expanded
        in: query
        description: If true, results will include additional data (e.g. join user
          name)
        required: false
        schema:
          type: boolean
          default: false
      - name: org_id
        in: query
        description: 'Organization ID: non-super users can only access their own organization'
        required: false
        schema:
          type: string
      - name: page
        in: query
        description: Page number to retrieve.
        schema:
          type: number
          default: 0
      - name: search
        in: query
        description: Search Criteria. Please see model definition for list of searchable
          fields.
        schema:
          type: string
        example: id $eq id-1
      - name: size
        in: query
        description: Size of each page.
        schema:
          type: number
          default: 10
      - name: sort
        in: query
        description: Ascending/Descending. Format is property,{asc|desc} and default
          is ascending.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      responses:
        '200':
          description: Successfully retrieved active directory records
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageActiveDirectoryTO'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      tags:
      - Active Directories
      summary: Create a new Active Directory record
      description: Creates a new Active Directory record in the admin service, belonging
        to the specified org. This does not create anything in AD itself.
      operationId: create_5
      parameters:
      - name: ignore_warnings
        in: query
        description: If true, errors classified as warnings will be ignored
        required: false
        schema:
          type: boolean
          default: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActiveDirectoryCreateTO'
        required: true
      responses:
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '201':
          description: Successfully created active directory record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActiveDirectoryTO'
  /admin/v2/active-directories/refresh-state:
    post:
      tags:
      - Active Directories
      summary: Refresh state of Active Directories
      description: Refresh state of Active Directories
      operationId: refreshState
      parameters:
      - name: org_id
        in: query
        description: 'Organization ID: non-super users can only access their own organization'
        required: false
        schema:
          type: string
      - name: search
        in: query
        description: Search expression for selection of active directories
        schema:
          type: string
      responses:
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Unexpected internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '202':
          description: Accepted the request to refresh states of the active directories
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActiveDirectoryBatchResponseTO'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /admin/v1/sso-configurations:
    get:
      tags:
      - SSO Configurations
      summary: Get all SSO configuration records
      description: Get all SSO configurations, with an optional search filter. Please
        see model definition for search allowed fields.Non-super users can only query
        for their own org IDs. This will return all records for which the caller has
        'read' permission
      operationId: getAll_5
      parameters:
      - name: expanded
        in: query
        required: false
        schema:
          type: boolean
      - name: org_id
        in: query
        required: false
        schema:
          type: string
      - name: page
        in: query
        description: Page number to retrieve.
        schema:
          type: number
          default: 0
      - name: search
        in: query
        description: Search Criteria. Please see model definition for list of searchable
          fields.
        schema:
          type: string
        example: name $eq name-1
      - name: size
        in: query
        description: Size of each page.
        schema:
          type: number
          default: 10
      - name: sort
        in: query
        description: Ascending/Descending. Format is property,{asc|desc} and default
          is ascending.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      responses:
        '200':
          description: Successfully retrieved SSO configuration records
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageSsoConfigurationTO'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      tags:
      - SSO Configurations
      summary: Create a new SSO configuration record
      description: Creates a new SSO configuration record in the admin service, belonging
        to the specified org.
      operationId: create_6
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SsoConfigurationCreateTO'
        required: true
      responses:
        '201':
          description: Successfully created SSO configuration record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SsoConfiguration'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /admin/v1/domain-certificates:
    get:
      tags:
      - Domain Certificates
      summary: Get all Domain Certificate records
      description: 'Get all Domain Certificate records.Non-super users can only query
        for their own org IDs. This will return all records for which the caller has
        ''read'' permission.

        Please refer to the DomainCertificateTO Model for searchable fields.'
      operationId: getAll_7
      parameters:
      - name: expanded
        in: query
        description: Fetch list of Active Directories using the Domain Certificate
        required: false
        schema:
          type: boolean
          default: false
      - name: org_id
        in: query
        description: 'Organization ID: non-super users can only access their own organization'
        required: false
        schema:
          type: string
      - name: page
        in: query
        description: Page number to retrieve.
        schema:
          type: number
          default: 0
      - name: search
        in: query
        description: Search Criteria. Please see model definition for list of searchable
          fields.
        schema:
          type: string
        example: id $eq id-1
      - name: size
        in: query
        description: Size of each page.
        schema:
          type: number
          default: 10
      - name: sort
        in: query
        description: Ascending/Descending. Format is property,{asc|desc} and default
          is ascending.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: status
        in: query
        description: Expiration status of certificate. OK, WARNING, EXPIRED
        required: false
        schema:
          type: string
          enum:
          - OK
          - WARNING
          - ERROR
      responses:
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '200':
          description: Successfully retrieved Domain Certificate records
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageDomainCertificateTO'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      tags:
      - Domain Certificates
      summary: Save one or more domain certificates
      operationId: create_7
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DomainCertificateCreateTO'
        required: true
      responses:
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '201':
          description: Successfully saved domain certificate(s).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainCertificateBatchResponseTO'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '207':
          description: Mixed results. Response contains at least one failed certificate
            save.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainCertificateBatchResponseTO'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
      - Domain Certificates
      summary: Delete one or more domain certificates
      operationId: delete_6
      parameters:
      - name: force
        in: query
        description: Force-delete the batch of Domain Certificates, ignoring any in-use
          errors.
        required: false
        schema:
          type: boolean
          default: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DomainCertificateDeleteTO'
        required: true
      responses:
        '207':
          description: Mixed results. Response contains at least one failed certificate
            delete.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainCertificateBatchResponseTO'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '200':
          description: Successfully deleted domain certificate(s).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainCertificateBatchResponseTO'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /admin/v1/dem-settings:
    get:
      tags:
      - Dynamic Environment Manager Settings
      summary: Get all DEM Setting records
      description: 'Get all DEM Settings.Non-super users can only query for their
        own org IDs. This will return all records for which the caller has ''read''
        permission.

        Please refer to the DEMSettingTO Model for searchable fields.'
      operationId: getAll_8
      parameters:
      - name: org_id
        in: query
        description: 'Organization ID: non-super users can only access their own organization'
        required: false
        schema:
          type: string
      - name: page
        in: query
        description: Page number to retrieve.
        schema:
          type: number
          default: 0
      - name: search
        in: query
        description: Search Criteria. Please see model definition for list of searchable
          fields.
        schema:
          type: string
        example: id $eq id-1
      - name: size
        in: query
        description: Size of each page.
        schema:
          type: number
          default: 10
      - name: sort
        in: query
        description: Ascending/Descending. Format is property,{asc|desc} and default
          is ascending.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      responses:
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '200':
          description: Successfully retrieved DEM Setting records
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageDEMSettingTO'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      tags:
      - Dynamic Environment Manager Settings
      summary: Create a new DEM Setting record
      description: Creates a new DEM Setting record
      operationId: create_8
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DEMSettingCreateTO'
        required: true
      responses:
        '201':
          description: Successfully created DEM Setting record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DEMSettingTO'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /admin/v2/uag-deployments/{id}:
    get:
      tags:
      - UAG Deployments
      summary: Get a single UAG deployment by ID
      operationId: getUAGDeploymentById
      parameters:
      - name: id
        in: path
        description: UAG Deployment ID
        required: true
        schema:
          type: string
      - name: org_id
        in: query
        description: 'Organization ID: non-super users can only access their own organization'
        required: false
        schema:
          type: string
      responses:
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '200':
          description: Successfully retrieved deployment
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UAGDeploymentTOV2'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
      - UAG Deployments
      summary: Marks a UAG deployment for deletion. Deletion will occur in the background.
      operationId: deleteUAGDeployment
      parameters:
      - name: id
        in: path
        description: UAG Deployment ID
        required: true
        schema:
          type: string
      - name: force
        in: query
        required: false
        schema:
          type: boolean
          default: false
      - name: org_id
        in: query
        description: 'Organization ID: non-super users can only access their own organization'
        required: false
        schema:
          type: string
      responses:
        '202':
          description: Accepted the request to delete the UAG Deployment
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UAGDeploymentTOV2'
        '409':
          description: Conflict - deployment in use
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Unexpected internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      tags:
      - UAG Deployments
      summary: Patch an existing UAG deployment record by id.
      description: Patches an existing UAG deployment record with new values.
      operationId: patchUAGDeployment
      parameters:
      - name: id
        in: path
        description: UAG Deployment ID
        required: true
        schema:
          type: string
      - name: ignore_warnings
        in: query
        description: If true, errors classified as warnings will be ignored
        required: false
        schema:
          type: boolean
      - name: org_id
        in: query
        description: 'Organization ID: non-super users can only access their own organization'
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UAGDeploymentPatchTOV2'
        required: true
      responses:
        '202':
          description: Accepted the request to patch existing UAG deployment record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UAGDeploymentTOV2'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Unexpected internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: Conflict -  concurrent updates
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /admin/v2/uag-deployments/{id}/gateways/{gatewayId}:
    get:
      tags:
      - UAG Deployments
      summary: Get a single UAG gateway under UAG deployment ID
      operationId: getSingleUAGGatewayFromDeployment
      parameters:
      - name: gatewayId
        in: path
        description: UAG Gateway ID
        required: true
        schema:
          type: string
      - name: id
        in: path
        description: UAG Deployment ID
        required: true
        schema:
          type: string
      - name: include_reported_properties
        in: query
        description: If true, returns reported properties of gateway
        required: false
        schema:
          type: boolean
      - name: org_id
        in: query
        description: 'Organization ID: non-super users can only access their own organization'
        required: false
        schema:
          type: string
      responses:
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '200':
          description: Successfully retrieved specified gateway from deployment
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UAGVmDetailsTO'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UAGVmDetailsTO'
    delete:
      tags:
      - UAG Deployments
      summary: Delete a UAG Gateway from Deployment. Supported currently for only
        unmanaged UAGs
      operationId: deleteUAGGatewayFromDeployment
      parameters:
      - name: gatewayId
        in: path
        description: UAG Gateway ID
        required: true
        schema:
          type: string
      - name: id
        in: path
        description: UAG Deployment ID
        required: true
        schema:
          type: string
      - name: org_id
        in: query
        description: 'Organization ID: non-super users can only access their own organization'
        required: false
        schema:
          type: string
      responses:
        '409':
          description: Conflict - deployment in use
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '202':
          description: Accepted the request to delete the gateway from UAG Deployment
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UAGDeploymentTOV2'
        '500':
          description: Unexpected internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      tags:
      - UAG Deployments
      summary: Patch an existing UAG gateway record by id.
      description: Patches an existing UAG gateway record with new values.
      operationId: patchUAGGatewayOnDeployment
      parameters:
      - name: gatewayId
        in: path
        description: UAG Gateway ID
        required: true
        schema:
          type: string
      - name: id
        in: path
        description: UAG Deployment ID
        required: true
        schema:
          type: string
      - name: org_id
        in: query
        description: 'Organization ID: non-super users can only access their own organization'
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UAGVmDetailsPatchTO'
        required: true
      responses:
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '202':
          description: Accepted the request to patch existing gateway record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UAGDeploymentTOV2'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Unexpected internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: Conflict -  concurrent updates
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /admin/v2/templates/{id}:
    get:
      tags:
      - Pools
      summary: Get a single template by its ID.
      operationId: getById
      parameters:
      - name: id
        in: path
        description: Template ID
        required: true
        schema:
          type: string
      - name: expanded
        in: query
        description: Include child data in results. Options are 'all', 'none', 'limited'
        required: false
        schema:
          type: string
      - name: org_id
        in: query
        description: 'Organization ID: non-super users can only access their own organization'
        required: false
        schema:
          type: string
      responses:
        '404':
          description: Template is not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '200':
          description: Successfully retrieved template
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateTOV2'
        '500':
          description: Unexpected internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
      - Pools
      summary: Delete a template
      operationId: delete
      parameters:
      - name: id
        in: path
        description: Template ID
        required: true
        schema:
          type: string
      - name: force
        in: query
        description: If true, deletes despite potential clean-up errors
        required: false
        allowEmptyValue: true
        schema:
          type: boolean
          default: false
      - name: org_id
        in: query
        description: 'Organization ID: non-super users can only access their own organization'
        required: false
        schema:
          type: string
      responses:
        '404':
          description: Template does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Failed to delete template from DB
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '202':
          description: Accepted the request to delete the template
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateTOV2'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      tags:
      - Pools
      summary: Patch a single template
      operationId: patchById
      parameters:
      - name: id
        in: path
        description: Template ID
        required: true
        schema:
          type: string
      - name: ignore_warnings
        in: query
        description: If true, errors classified as warnings will be ignored
        required: false
        schema:
          type: boolean
          default: false
      - name: org_id
        in: query
        description: 'Organization ID: non-super users can only access their own organization'
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TemplatePatchTO'
        required: true
      responses:
        '500':
          description: Failed to patch template
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: Concurrent template update error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Template not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '200':
          description: Successfully patched template
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateTOV2'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /admin/v2/templates/expansions/{id}:
    patch:
      tags:
      - Pools
      summary: Patch an expansion template. Cannot be used for non-expansion templates.
      operationId: patchExpansionById
      parameters:
      - name: id
        in: path
        description: Template ID
        required: true
        schema:
          type: string
      - name: ignore_warnings
        in: query
        description: If true, errors classified as warnings will be ignored
        required: false
        schema:
          type: boolean
          default: false
      - name: org_id
        in: query
        description: 'Organization ID: non-super users can only access their own organization'
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TemplateExpansionPatchTO'
        required: true
      responses:
        '500':
          description: Failed to patch template
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: Concurrent template update error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Template not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '200':
          description: Successfully patched template
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateTOV2'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /admin/v2/sso-configurations/{id}:
    get:
      tags:
      - SSO Configurations V2
      summary: Fetch SSO configuration record by id
      description: Fetch SSO configuration record by id
      operationId: getById_1
      parameters:
      - name: id
        in: path
        description: SSO configuration ID
        required: true
        schema:
          type: string
      - name: expanded
        in: query
        required: false
        schema:
          type: boolean
          default: false
      - name: org_id
        in: query
        required: false
        schema:
          type: string
      responses:
        '200':
          description: Successfully retrieved SSO configuration record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SsoConfigurationTOV2'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: SSO config record not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      deprecated: true
    delete:
      tags:
      - SSO Configurations V2
      summary: Delete an SSO configuration record
      description: Deletes an SSO configuration record from the database
      operationId: delete_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: org_id
        in: query
        required: false
        schema:
          type: string
      responses:
        '409':
          description: Conflict - SSO config is in use
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '200':
          description: Successfully deleted SSO configuration record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SsoConfigurationTOV2'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '204':
          description: No Content
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SsoConfigurationTOV2'
      deprecated: true
    patch:
      tags:
      - SSO Configurations V2
      summary: Patch an existing SSO configuration record.
      description: Patches an existing SSO configuration record with new values.
      operationId: patchSsoConfig
      parameters:
      - name: id
        in: path
        description: SSO configuration ID
        required: true
        schema:
          type: string
      - name: org_id
        in: query
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
              - $ref: '#/components/schemas/SsoConfigurationPatchTOV2'
              - $ref: '#/components/schemas/MicrosoftCASsoConfigurationPatchTOV2'
              - $ref: '#/components/schemas/VMwareCASsoConfigurationPatchTOV2'
      responses:
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '200':
          description: Successfully patch existing SSO configuration record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SsoConfigurationTOV2'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: Conflict -  concurrent updates
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      deprecated: true
  /admin/v2/providers/{label}/instances/{id}/scale-data:
    patch:
      tags:
      - Provider Instances
      summary: This operation should be used to perform action update which can update
        existing scale data entries or add new entry. Action delete can be used to
        delete scale data entry associated with provider instance
      operationId: updateScaleData
      parameters:
      - name: id
        in: path
        description: ID of provider instance to be updated
        required: true
        schema:
          type: string
      - name: label
        in: path
        description: Provider label
        required: true
        schema:
          type: string
      - name: action
        in: query
        description: 'Action to perform. Actions: ''update, delete'''
        required: true
        schema:
          type: string
      - name: ignore_warnings
        in: query
        description: If true, errors classified as warnings will be ignored
        required: false
        schema:
          type: boolean
          default: false
      - name: org_id
        in: query
        description: 'Organization ID: non-super users can only access their own organization'
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProviderInstancePatchScaleDataTO'
        required: true
      responses:
        '200':
          description: Successfully updated provider instance scale data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProviderInstanceTOV2'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '423':
          description: 'Provider disabled '
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Unexpected internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /admin/v2/providers/{label}/instances/{id}/preferences/networks:
    get:
      tags:
      - Preferences Controller
      operationId: getNetworkPreferences
      parameters:
      - name: id
        in: path
        description: ID of provider instance to be updated
        required: true
        schema:
          type: string
      - name: label
        in: path
        description: Provider label
        required: true
        schema:
          type: string
      - name: org_id
        in: query
        description: 'Organization ID: non-super users can only access their own organization'
        required: false
        schema:
          type: string
      responses:
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '423':
          description: 'Provider disabled '
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Unexpected internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '200':
          description: Successfully retrieved network preferences for a provider instance
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkPreferenceTO'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      tags:
      - Preferences Controller
      summary: This operation should be used to perform action update which can replaces/overwrites
        preferences lists associated with provider instance.
      operationId: patchNetworkPreferences
      parameters:
      - name: id
        in: path
        description: ID of provider instance to be updated
        required: true
        schema:
          type: string
      - name: label
        in: path
        description: Provider label
        required: true
        schema:
          type: string
      - name: org_id
        in: query
        description: 'Organization ID: non-super users can only access their own organization'
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NetworkPreferenceTO'
        required: true
      responses:
        '200':
          description: Successfully updated provider instance network preferences
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkPreferenceTO'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '423':
          description: 'Provider disabled '
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Unexpected internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /admin/v2/providers/{label}/instances/{id}/edge-deployment:
    delete:
      tags:
      - Provider Instances
      summary: Unregister an Edge Gateway from a provider instance.
      operationId: unregisterEdgeGateway
      parameters:
      - name: id
        in: path
        description: Provider instance ID
        required: true
        schema:
          type: string
      - name: label
        in: path
        description: Provider label
        required: true
        schema:
          type: string
      - name: org_id
        in: query
        description: 'Organization ID: non-super users can only access their own organization'
        required: false
        schema:
          type: string
      responses:
        '409':
          description: Conflict - Provider instance is being updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '200':
          description: Successfully unregisters edge gateway from provider instance
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProviderInstanceTOV2'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '423':
          description: 'Provider disabled '
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      tags:
      - Provider Instances
      summary: Associate an Edge Deployment with a provider instance.
      operationId: registerEdgeGateway
      parameters:
      - name: id
        in: path
        description: Provider instance ID
        required: true
        schema:
          type: string
      - name: label
        in: path
        description: Provider label
        required: true
        schema:
          type: string
      - name: org_id
        in: query
        description: 'Organization ID: non-super users can only access their own organization'
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProviderInstancePatchEdgeTOV2'
        required: true
      responses:
        '200':
          description: Successfully registered edge gateway for provider instance
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProviderInstanceTOV2'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '423':
          description: 'Provider disabled '
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /admin/v2/edge-deployments/{id}:
    get:
      tags:
      - Edge Deployments
      summary: Get a single Edge deployment
      operationId: getEdgeDeploymentById
      parameters:
      - name: id
        in: path
        description: Edge deployment ID
        required: true
        schema:
          type: string
      - name: include_reported_status
        in: query
        description: Status of edge reported attributes
        required: false
        schema:
          type: boolean
      - name: org_id
        in: query
        description: 'Organization ID: non-super users can only access their own organization'
        required: false
        schema:
          type: string
      responses:
        '200':
          description: Successfully retrieved all edge deployments
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdgeDeploymentTOV2'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Unexpected internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
      - Edge Deployments
      summary: Marks an Edge deployment for deletion. Deletion will occur in the background.
      operationId: delete_3
      parameters:
      - name: id
        in: path
        description: Edge deployment ID
        required: true
        schema:
          type: string
      - name: force
        in: query
        description: Delete the Edge deployment, ignoring any potential clean-up errors.
        required: false
        schema:
          type: boolean
          default: false
      - name: org_id
        in: query
        description: 'Organization ID: non-super users can only access their own organization'
        required: false
        schema:
          type: string
      responses:
        '409':
          description: Conflict - deployment in use
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '202':
          description: Accepted the request to delete the Edge Deployment
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdgeDeploymentTOV2'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Unexpected internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      tags:
      - Edge Deployments
      summary: Patch an Edge deployment
      operationId: patchEdgeDeployment
      parameters:
      - name: id
        in: path
        description: Edge deployment ID
        required: true
        schema:
          type: string
      - name: org_id
        in: query
        description: 'Organization ID: non-super users can only access their own organization'
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EdgeDeploymentPatchTOV2'
        required: true
      responses:
        '202':
          description: Successfully updated Edge Deployment
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdgeDeploymentTOV2'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Unexpected internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /admin/v2/active-directories/{id}:
    get:
      tags:
      - Active Directories
      summary: Fetch one Active Directory record
      description: Fetch one Active Directory record
      operationId: getById_3
      parameters:
      - name: id
        in: path
        description: Active directory ID
        required: true
        schema:
          type: string
      - name: expanded
        in: query
        description: If true, results will include additional data (e.g. join user
          name)
        required: false
        allowEmptyValue: true
        schema:
          type: boolean
          default: false
      - name: org_id
        in: query
        description: 'Organization ID: non-super users can only access their own organization'
        required: false
        schema:
          type: string
      responses:
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Active directory record not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '200':
          description: Successfully retrieved active directory record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActiveDirectoryTO'
    delete:
      tags:
      - Active Directories
      summary: Delete an Active Directory record
      description: Deletes an Active Directory record from the database
      operationId: delete_4
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: org_id
        in: query
        description: 'Organization ID: non-super users can only access their own organization'
        required: false
        schema:
          type: string
      responses:
        '200':
          description: Successfully deleted active directory record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActiveDirectoryTO'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: Conflict - active directory is in use
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '204':
          description: No Content
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActiveDirectoryTO'
    patch:
      tags:
      - Active Directories
      summary: Patch an existing Active Directory record.
      description: Patches an existing Active Directory. Supports partial document
        update by updating only the fields which are non-null.
      operationId: patchById_2
      parameters:
      - name: id
        in: path
        description: Active directory ID
        required: true
        schema:
          type: string
      - name: ignore_warnings
        in: query
        description: If true, errors classified as warnings will be ignored
        required: false
        schema:
          type: boolean
          default: false
      - name: org_id
        in: query
        description: 'Organization ID: non-super users can only access their own organization'
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActiveDirectoryPatchTO'
        required: true
      responses:
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '200':
          description: Successfully updated existing active directory record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActiveDirectoryTO'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: Conflict -  concurrent updates
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /admin/v1/sso-configurations/{id}:
    get:
      tags:
      - SSO Configurations
      summary: Fetch one SSO configuration record
      description: Fetch one SSO configuration record
      operationId: getById_4
      parameters:
      - name: id
        in: path
        description: SSO configuration ID
        required: true
        schema:
          type: string
      - name: expanded
        in: query
        description: If true, results will include the CA bundles associated to the
          SSO configuration
        required: false
        allowEmptyValue: true
        schema:
          type: boolean
          default: false
      - name: org_id
        in: query
        required: false
        schema:
          type: string
      responses:
        '200':
          description: Successfully retrieved SSO configuration record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SsoConfiguration'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: SSO config record not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
      - SSO Configurations
      summary: Delete an SSO configuration record
      description: Deletes an SSO configuration record from the database
      operationId: delete_5
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: org_id
        in: query
        required: false
        schema:
          type: string
      responses:
        '409':
          description: Conflict - SSO config is in use
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '200':
          description: Successfully deleted SSO configuration record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SsoConfigurationTO'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '204':
          description: No Content
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SsoConfigurationTO'
    patch:
      tags:
      - SSO Configurations
      summary: Patch an existing SSO configuration record.
      description: Patches an existing SSO configuration record with new values.
      operationId: patchSsoConfig_1
      parameters:
      - name: id
        in: path
        description: SSO configuration ID
        required: true
        schema:
          type: string
      - name: force_new_ca_bundle
        in: query
        description: Force creation of a new CA bundle, even if caConfigDn is not
          changing.
        required: false
        schema:
          type: boolean
          default: false
      - name: org_id
        in: query
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SsoConfigurationPatchTO'
      responses:
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '200':
          description: Successfully patch existing SSO configuration record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SsoConfiguration'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: Conflict -  concurrent updates
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /admin/v1/providers/compute-vm-skus/preferences:
    patch:
      tags:
      - VM Skus
      summary: Perform actions on Compute VM SKU preferences
      operationId: performBatchActionOnPreferences
      parameters:
      - name: action
        in: query
        description: 'Action to perform. One of: ''add_tags'', ''remove_tags'' or
          ''toggle_visibility'''
        required: true
        schema:
          type: string
      - name: org_id
        in: query
        description: 'Organization ID: non-super users can only access their own organization'
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchVmSkuPreferenceRequestTO'
        required: true
      responses:
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '207':
          description: Successfully performed action on Compute VM SKU's preference
            with some errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchVmSkuPreferenceResponseTO'
        '500':
          description: Unexpected internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '200':
          description: Successfully performed action on Compute VM SKU's preference
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchVmSkuPreferenceResponseTO'
  /admin/v3/templates/error-report:
    get:
      tags:
      - Pools
      summary: Get a single report containing information about template errors
      operationId: getErrorReport
      parameters:
      - name: org_id
        in: query
        description: 'Organization ID: non-super users can only access their own organization'
        required: false
        schema:
          type: string
      - name: template_search
        in: query
        description: Search expression for selection of templates
        schema:
          type: string
      responses:
        '200':
          description: Successfully retrieved the error report
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateErrorSummaryReportTO'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Failed to get data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /admin/v3/providers/instances:
    get:
      tags:
      - Provider Instances V3
      summary: Return a list of all provider instances.
      operationId: getAll
      parameters:
      - name: include_health_details
        in: query
        description: If true, health details for each provider instance will be returned
        required: false
        allowEmptyValue: true
        schema:
          type: boolean
          default: false
      - name: org_id
        in: query
        description: 'Organization ID: non-super users can only access their own organization'
        required: false
        schema:
          type: string
      - name: page
        in: query
        description: Page number to retrieve.
        schema:
          type: number
          default: 0
      - name: search
        in: query
        description: Search Criteria. Please see model definition for list of searchable
          fields.
        schema:
          type: string
        example: id $eq id-1
      - name: size
        in: query
        description: Size of each page.
        schema:
          type: number
          default: 10
      - name: sort
        in: query
        description: Ascending/Descending. Format is property,{asc|desc} and default
          is ascending.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      responses:
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '200':
          description: Successfully retrieved provider instances
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageProviderInstanceTOV2'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /admin/v3/providers/edge-download-configs:
    get:
      tags:
      - Provider Instances V3
      summary: Gets the edge appliance download configs
      operationId: getEdgeDownloadConfigs
      parameters:
      - name: capacity_type
        in: query
        description: If set, returns the download configs for mentioned capacity type.
        required: false
        schema:
          type: string
          enum:
          - ON_PREM
          - AZURE
          - AWS
          - DELL_EMC
          - GOOGLE
          - ORACLE
          - ALIBABA
      - name: label
        in: query
        description: Provider label
        required: true
        schema:
          type: string
      responses:
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '200':
          description: Successfully retrieved the edge appliance download configs
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  additionalProperties:
                    type: string
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /admin/v2/sso-configurations/{id}/ca-bundle:
    get:
      tags:
      - SSO Configurations V2
      summary: Download the latest CA bundle associated to the SSO configuration
      operationId: getCaBundle
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: bundle_version
        in: query
        description: Optional parameter to fetch a specific version bundle, instead
          of default latest bundle
        required: false
        schema:
          type: integer
          format: int32
      - name: org_id
        in: query
        required: false
        schema:
          type: string
      responses:
        '403':
          description: Forbidden
          content:
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Unexpected internal server error
          content:
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '200':
          description: Successfully downloaded the CA bundle associated to SSO configuration
        '401':
          description: Unauthorized
          content:
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      deprecated: true
  /admin/v2/sso-configurations/discovery-data:
    get:
      tags:
      - SSO Configurations V2
      summary: Fetches SSO discovery data for the edge and AD
      description: Fetch SSO discovery data for the edge and AD
      operationId: getDiscoveryData
      parameters:
      - name: adIds
        in: query
        required: true
        schema:
          type: array
          items:
            type: string
      - name: edgeIds
        in: query
        required: true
        schema:
          type: array
          items:
            type: string
      - name: org_id
        in: query
        required: false
        schema:
          type: string
      - name: skip_ads_in_use
        in: query
        required: false
        schema:
          type: boolean
          default: false
      responses:
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '200':
          description: Successfully retrieved SSO configuration record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SsoConfigurationDiscoveryTO'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: SSO config record not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      deprecated: true
  /admin/v2/providers/{label}/resources:
    get:
      tags:
      - Provider Instances
      summary: Get all provider instances with their associated resources
      operationId: getAllResources
      parameters:
      - name: label
        in: path
        description: Provider label
        required: true
        schema:
          type: string
      - name: org_id
        in: query
        description: 'Organization ID: non-super users can only access their own organization'
        required: true
        schema:
          type: string
      - name: page
        in: query
        description: Page number to retrieve.
        schema:
          type: number
          default: 0
      - name: search
        in: query
        description: Search Criteria. Please see model definition for list of searchable
          fields.
        schema:
          type: string
        example: id $eq id-1
      - name: size
        in: query
        description: Size of each page.
        schema:
          type: number
          default: 10
      - name: sort
        in: query
        description: Ascending/Descending. Format is property,{asc|desc} and default
          is ascending.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      responses:
        '200':
          description: Successfully retrieved provider instances with their associated
            resources
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageProviderInstanceResourcesTOV2'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '423':
          description: 'Provider disabled '
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /admin/v2/providers/{label}/instances/{id}/vm-usages:
    get:
      tags:
      - Provider Instances
      operationId: getVmUsages
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: label
        in: path
        required: true
        schema:
          type: string
      - name: org_id
        in: query
        description: 'Organization ID: non-super users can only access their own organization'
        required: false
        schema:
          type: string
      responses:
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '423':
          description: 'Provider disabled '
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Unexpected internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '200':
          description: Successfully retrieved capacity utilisation for a provider
            instance
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProviderInstanceVmUsagesTO'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /admin/v2/providers/vsphere/instances/{providerId}/calculateDatastore:
    get:
      tags:
      - vSphere Infrastructure
      summary: 'Calculate Datastore requirements of '
      operationId: calculateDatestore
      parameters:
      - name: providerId
        in: path
        description: providerId
        required: true
        schema:
          type: string
      - name: entityType
        in: query
        description: VmTemplate Or SnapShot
        required: true
        schema:
          type: string
      - name: id
        in: query
        description: snapshot Moid or Vm Template Uuid
        required: true
        schema:
          type: string
      - name: orgId
        in: query
        description: Organization Id
        required: true
        schema:
          type: string
      - name: vmCount
        in: query
        description: Vm Count
        required: true
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: Successfully calculated Datastore usage requirement
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatastoreRequirements'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Unexpected internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /admin/v2/providers/vsphere/instances/{id}/vmtemplates:
    get:
      tags:
      - vSphere Infrastructure
      summary: Get vm templates for a provider
      operationId: getVmTemplates
      parameters:
      - name: id
        in: path
        description: Provider instance ID
        required: true
        schema:
          type: string
      - name: org_id
        in: query
        description: 'Organization ID: non-super users can only access their own organization'
        required: false
        schema:
          type: string
      responses:
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Unexpected internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '200':
          description: Successfully retrieved vm templates for a provider instance
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InfrastructureResource'
  /admin/v2/providers/vsphere/instances/{id}/resource-pools/{resourcePoolId}:
    get:
      tags:
      - vSphere Infrastructure
      summary: Get resource pool by id
      operationId: getResourcePool
      parameters:
      - name: id
        in: path
        description: Provider instance ID
        required: true
        schema:
          type: string
      - name: resourcePoolId
        in: path
        description: Resource Pool ID
        required: true
        schema:
          type: string
      - name: org_id
        in: query
        description: 'Organization ID: non-super users can only access their own organization'
        required: false
        schema:
          type: string
      responses:
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '200':
          description: Successfully retrieved resource pool for a provider instance
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InfrastructureResource'
        '500':
          description: Unexpected internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /admin/v2/providers/vsphere/instances/{id}/golden-images:
    get:
      tags:
      - vSphere Infrastructure
      summary: Get golden images for a provider
      operationId: getGoldenImages
      parameters:
      - name: id
        in: path
        description: Provider instance ID
        required: true
        schema:
          type: string
      - name: org_id
        in: query
        description: 'Organization ID: non-super users can only access their own organization'
        required: false
        schema:
          type: string
      responses:
        '200':
          description: Successfully retrieved golden images for a provider instance
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InfrastructureResource'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Unexpected internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /admin/v2/providers/vsphere/instances/{id}/golden-images/{goldenImageId}/snapshots:
    get:
      tags:
      - vSphere Infrastructure
      summary: Get snapshots for a provider and golden image
      operationId: getSnapshotsForGoldenImage
      parameters:
      - name: goldenImageId
        in: path
        description: Golden image ID
        required: true
        schema:
          type: string
      - name: id
        in: path
        description: Provider instance ID
        required: true
        schema:
          type: string
      - name: org_id
        in: query
        description: 'Organization ID: non-super users can only access their own organization'
        required: false
        schema:
          type: string
      responses:
        '200':
          description: Successfully retrieved snapshots for a provider instance and
            golden image
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InfrastructureResource'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Unexpected internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /admin/v2/providers/vsphere/instances/{id}/datacentersview:
    get:
      tags:
      - vSphere Infrastructure
      summary: Get datacenters view for a provider
      operationId: getDatacentersView
      parameters:
      - name: id
        in: path
        description: Provider instance ID
        required: true
        schema:
          type: string
      - name: org_id
        in: query
        description: 'Organization ID: non-super users can only access their own organization'
        required: false
        schema:
          type: string
      responses:
        '200':
          description: Successfully retrieved datacenters view for a provider instance
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InfrastructureResource'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Unexpected internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /admin/v2/providers/vsphere/instances/{id}/datacenters:
    get:
      tags:
      - vSphere Infrastructure
      summary: Get datacenters for a provider
      operationId: getDatacenters
      parameters:
      - name: id
        in: path
        description: Provider instance ID
        required: true
        schema:
          type: string
      - name: org_id
        in: query
        description: 'Organization ID: non-super users can only access their own organization'
        required: false
        schema:
          type: string
      responses:
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Unexpected internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '200':
          description: Successfully retrieved datacenters for a provider instance
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InfrastructureResource'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /admin/v2/providers/vsphere/instances/{id}/datacenters/{datacenterId}/folder:
    get:
      tags:
      - vSphere Infrastructure
      summary: Get vm folder for a provider and datacenter
      operationId: getVmFolderInDataCenter
      parameters:
      - name: datacenterId
        in: path
        description: Datacenter ID
        required: true
        schema:
          type: string
      - name: id
        in: path
        description: Provider instance ID
        required: true
        schema:
          type: string
      - name: org_id
        in: query
        description: 'Organization ID: non-super users can only access their own organization'
        required: false
        schema:
          type: string
      responses:
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Unexpected internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '200':
          description: Successfully retrieved vm folder for a provider instance and
            datacenter
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InfrastructureResource'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /admin/v2/providers/vsphere/instances/{id}/datacenters/{datacenterId}/clusters:
    get:
      tags:
      - vSphere Infrastructure
      summary: Get clusters for a provider and datacenter
      operationId: getClustersInDataCenter
      parameters:
      - name: datacenterId
        in: path
        description: Datacenter ID
        required: true
        schema:
          type: string
      - name: id
        in: path
        description: Provider instance ID
        required: true
        schema:
          type: string
      - name: org_id
        in: query
        description: 'Organization ID: non-super users can only access their own organization'
        required: false
        schema:
          type: string
      responses:
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Unexpected internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '200':
          description: Successfully retrieved clusters for a provider instance and
            datacenter
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InfrastructureResource'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /admin/v2/providers/vsphere/instances/{id}/datacenters/{datacenterId}/clusters/{clusterId}/resource-pools:
    get:
      tags:
      - vSphere Infrastructure
      summary: Get resource pools for a provider, datacenter and cluster
      operationId: getResourcePoolsInDataCenterAndCluster
      parameters:
      - name: clusterId
        in: path
        description: cluster ID
        required: true
        schema:
          type: string
      - name: datacenterId
        in: path
        description: Datacenter ID
        required: true
        schema:
          type: string
      - name: id
        in: path
        description: Provider instance ID
        required: true
        schema:
          type: string
      - name: org_id
        in: query
        description: 'Organization ID: non-super users can only access their own organization'
        required: false
        schema:
          type: string
      responses:
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '200':
          description: Successfully retrieved resource pools for a provider instance,
            datacenter and cluster
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InfrastructureResource'
        '500':
          description: Unexpected internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /admin/v2/providers/vsphere/instances/{id}/datacenters/{datacenterId}/clusters/{clusterId}/networks:
    get:
      tags:
      - vSphere Infrastructure
      summary: Get networks for a provider, datacenter and cluster
      operationId: getNetworksInDataCenterAndCluster
      parameters:
      - name: clusterId
        in: path
        description: cluster ID
        required: true
        schema:
          type: string
      - name: datacenterId
        in: path
        description: Datacenter ID
        required: true
        schema:
          type: string
      - name: id
        in: path
        description: Provider instance ID
        required: true
        schema:
          type: string
      - name: org_id
        in: query
        description: 'Organization ID: non-super users can only access their own organization'
        required: false
        schema:
          type: string
      responses:
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Unexpected internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '200':
          description: Successfully retrieved networks for a provider instance, datacenter
            and cluster
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InfrastructureResource'
  /admin/v2/providers/vsphere/instances/{id}/datacenters/{datacenterId}/clusters/{clusterId}/datastores:
    get:
      tags:
      - vSphere Infrastructure
      summary: Get data stores for a provider, datacenter and cluster
      operationId: getDataStoresInDataCenterAndCluster
      parameters:
      - name: clusterId
        in: path
        description: cluster ID
        required: true
        schema:
          type: string
      - name: datacenterId
        in: path
        description: Datacenter ID
        required: true
        schema:
          type: string
      - name: id
        in: path
        description: Provider instance ID
        required: true
        schema:
          type: string
      - name: org_id
        in: query
        description: 'Organization ID: non-super users can only access their own organization'
        required: false
        schema:
          type: string
      responses:
        '200':
          description: Successfully retrieved datastores for a provider instance,
            datacenter and cluster
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InfrastructureResource'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Unexpected internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /admin/v2/providers/vsphere/instances/{id}/customization-specs:
    get:
      tags:
      - vSphere Infrastructure
      summary: Get customization specs for a provider
      operationId: getCustomizationSpecs
      parameters:
      - name: id
        in: path
        description: Provider instance ID
        required: true
        schema:
          type: string
      - name: org_id
        in: query
        description: 'Organization ID: non-super users can only access their own organization'
        required: false
        schema:
          type: string
      responses:
        '200':
          description: Successfully retrieved customization specs for a provider instance
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InfrastructureResource'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Unexpected internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /admin/v2/providers/vsphere/edge/{edgeDeploymentId}/certificate:
    get:
      tags:
      - vSphere Infrastructure
      summary: Fetch certificate of a vCenter to be saved as a vSphere provider
      operationId: fetchVCenterCertificateDetails
      parameters:
      - name: edgeDeploymentId
        in: path
        description: Edge Deployment ID
        required: true
        schema:
          type: string
      - name: org_id
        in: query
        description: 'Organization ID: non-super users can only access their own organization'
        required: false
        schema:
          type: string
      - name: vcenter_url
        in: query
        description: vCenter Url
        required: true
        schema:
          type: string
      responses:
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Unexpected internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '200':
          description: Successfully retrieved certificate for the vCenter
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VCenterCertificateResponseTO'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /admin/v2/providers/azure/instances/{id}/vm-skus:
    get:
      tags:
      - Azure Infrastructure
      operationId: getVMComputeSkus
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: gpu_types
        in: query
        description: AMD for AMD based GPU compute sku, NVIDIA for NVIDIA based GPU
          compute sku and NONE for non-GPU compute skus
        required: false
        schema:
          type: array
          items:
            type: string
      - name: min_cpu_cores
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 0
      - name: min_memory_mb
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 0
      - name: org_id
        in: query
        description: 'Organization ID: non-super users can only access their own organization'
        required: false
        schema:
          type: string
      - name: page
        in: query
        description: Page number to retrieve.
        schema:
          type: number
          default: 0
      - name: require_premium_io
        in: query
        required: false
        schema:
          type: boolean
      - name: series
        in: query
        required: false
        schema:
          type: string
      - name: size
        in: query
        description: Size of each page.
        schema:
          type: number
          default: 10
      - name: sort
        in: query
        description: Ascending/Descending. Format is property,{asc|desc} and default
          is ascending.
        schema:
          type: string
      - name: template_recommended
        in: query
        required: false
        schema:
          type: boolean
      - name: uag_allowed
        in: query
        required: false
        schema:
          type: boolean
      responses:
        '200':
          description: Successfully returned list of VM compute skus
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageInfrastructureResource'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Provider instance not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      deprecated: true
  /admin/v2/providers/azure/instances/{id}/vm-skus-series:
    get:
      tags:
      - Azure Infrastructure
      operationId: getVMComputeSkusSeries
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: org_id
        in: query
        description: 'Organization ID: non-super users can only access their own organization'
        required: false
        schema:
          type: string
      - name: page
        in: query
        description: Page number to retrieve.
        schema:
          type: number
          default: 0
      - name: size
        in: query
        description: Size of each page.
        schema:
          type: number
          default: 10
      - name: sort
        in: query
        description: Ascending/Descending. Format is property,{asc|desc} and default
          is ascending.
        schema:
          type: string
      responses:
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Provider instance not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '200':
          description: Successfully returned list of VM compute skus series
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
  /admin/v2/providers/azure/instances/{id}/user-assigned-identities:
    get:
      tags:
      - Azure Infrastructure
      operationId: getUserAssignedIdentities
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: org_id
        in: query
        description: 'Organization ID: non-super users can only access their own organization'
        required: false
        schema:
          type: string
      - name: page
        in: query
        description: Page number to retrieve.
        schema:
          type: number
          default: 0
      - name: size
        in: query
        description: Size of each page.
        schema:
          type: number
          default: 10
      - name: sort
        in: query
        description: Ascending/Descending. Format is property,{asc|desc} and default
          is ascending.
        schema:
          type: string
      responses:
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '200':
          description: Successfully returned azure user assigned manged identities
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageInfrastructureResource'
        '404':
          description: Provider instance not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /admin/v2/providers/azure/instances/{id}/resource-groups:
    get:
      tags:
      - Azure Infrastructure
      operationId: getResourceGroups
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: org_id
        in: query
        description: 'Organization ID: non-super users can only access their own organization'
        required: false
        schema:
          type: string
      - name: page
        in: query
        description: Page number to retrieve.
        schema:
          type: number
          default: 0
      - name: size
        in: query
        description: Size of each page.
        schema:
          type: number
          default: 10
      - name: sort
        in: query
        description: Ascending/Descending. Format is property,{asc|desc} and default
          is ascending.
        schema:
          type: string
      responses:
        '200':
          description: Successfully returned azure resource groups
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageInfrastructureResource'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Provider instance not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /admin/v2/providers/azure/instances/{id}/networks:
    get:
      tags:
      - Azure Infrastructure
      operationId: getNetworks
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: org_id
        in: query
        description: 'Organization ID: non-super users can only access their own organization'
        required: false
        schema:
          type: string
      - name: page
        in: query
        description: Page number to retrieve.
        schema:
          type: number
          default: 0
      - name: reachable_from
        in: query
        description: Returns subset of networks in provider which are peered to the
          specified resource id
        required: false
        schema:
          type: string
      - name: size
        in: query
        description: Size of each page.
        schema:
          type: number
          default: 10
      - name: sort
        in: query
        description: Ascending/Descending. Format is property,{asc|desc} and default
          is ascending.
        schema:
          type: string
      responses:
        '200':
          description: Successfully returned azure networks
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageInfrastructureResource'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: User validation errors on provided network. Check your network
            specified in reachable_from and try again
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageInfrastructureResource'
        '404':
          description: Provider instance not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /admin/v2/providers/azure/instances/{id}/networks/subnets:
    get:
      tags:
      - Azure Infrastructure
      operationId: getSubnetsWithFilter
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: network_id
        in: query
        required: true
        schema:
          type: string
      - name: org_id
        in: query
        description: 'Organization ID: non-super users can only access their own organization'
        required: false
        schema:
          type: string
      - name: page
        in: query
        description: Page number to retrieve.
        schema:
          type: number
          default: 0
      - name: size
        in: query
        description: Size of each page.
        schema:
          type: number
          default: 10
      - name: sort
        in: query
        description: Ascending/Descending. Format is property,{asc|desc} and default
          is ascending.
        schema:
          type: string
      responses:
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Provider instance not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '200':
          description: Successfully returned azure subnets based of the network Id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageInfrastructureResource'
  /admin/v2/providers/azure/instances/{id}/galleries:
    get:
      tags:
      - Azure Infrastructure
      operationId: getSharedImageGalleries
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: org_id
        in: query
        description: 'Organization ID: non-super users can only access their own organization'
        required: false
        schema:
          type: string
      - name: page
        in: query
        description: Page number to retrieve.
        schema:
          type: number
          default: 0
      - name: size
        in: query
        description: Size of each page.
        schema:
          type: number
          default: 10
      - name: sort
        in: query
        description: Ascending/Descending. Format is property,{asc|desc} and default
          is ascending.
        schema:
          type: string
      responses:
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Provider instance not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '200':
          description: Successfully returned list of Azure shared image galleries
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageInfrastructureResource'
  /admin/v2/providers/azure/instances/{id}/galleries/images:
    get:
      tags:
      - Azure Infrastructure
      operationId: getSharedGalleryImages
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: gallery_id
        in: query
        description: Azure Shared image gallery resource id
        required: true
        schema:
          type: string
      - name: org_id
        in: query
        description: 'Organization ID: non-super users can only access their own organization'
        required: false
        schema:
          type: string
      - name: page
        in: query
        description: Page number to retrieve.
        schema:
          type: number
          default: 0
      - name: size
        in: query
        description: Size of each page.
        schema:
          type: number
          default: 10
      - name: sort
        in: query
        description: Ascending/Descending. Format is property,{asc|desc} and default
          is ascending.
        schema:
          type: string
      responses:
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Provider instance not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '200':
          description: Successfully returned list of Images for given shared image
            gallery
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageInfrastructureResource'
  /admin/v2/providers/azure/instances/{id}/galleries/images/versions:
    get:
      tags:
      - Azure Infrastructure
      operationId: getSharedGalleryImageVersions
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: gallery_image_id
        in: query
        description: Azure Shared image gallery image resource id
        required: true
        schema:
          type: string
      - name: org_id
        in: query
        description: 'Organization ID: non-super users can only access their own organization'
        required: false
        schema:
          type: string
      - name: page
        in: query
        description: Page number to retrieve.
        schema:
          type: number
          default: 0
      - name: size
        in: query
        description: Size of each page.
        schema:
          type: number
          default: 10
      - name: sort
        in: query
        description: Ascending/Descending. Format is property,{asc|desc} and default
          is ascending.
        schema:
          type: string
      responses:
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '200':
          description: Successfully returned list of versions for image in shared
            image gallery
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageInfrastructureResource'
        '404':
          description: Provider instance not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /admin/v2/providers/azure/instances/{id}/disk-skus:
    get:
      tags:
      - Azure Infrastructure
      operationId: getDiskComputeSkus
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: include_premium
        in: query
        required: false
        schema:
          type: boolean
          default: true
      - name: org_id
        in: query
        description: 'Organization ID: non-super users can only access their own organization'
        required: false
        schema:
          type: string
      - name: page
        in: query
        description: Page number to retrieve.
        schema:
          type: number
          default: 0
      - name: size
        in: query
        description: Size of each page.
        schema:
          type: number
          default: 10
      - name: sort
        in: query
        description: Ascending/Descending. Format is property,{asc|desc} and default
          is ascending.
        schema:
          type: string
      responses:
        '200':
          description: Successfully returned list of Disk SKUs
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageInfrastructureResource'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Provider instance not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /admin/v2/providers/azure/instances/{id}/compute-vm-skus:
    get:
      tags:
      - Azure Infrastructure
      operationId: getAzureVmComputeSkus
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: org_id
        in: query
        description: 'Organization ID: non-super users can only access their own organization'
        required: false
        schema:
          type: string
      - name: page
        in: query
        description: Page number to retrieve.
        schema:
          type: number
          default: 0
      - name: search
        in: query
        description: Search Criteria. Please see model definition for list of searchable
          fields.
        schema:
          type: string
        example: id $eq id-1
      - name: size
        in: query
        description: Size of each page.
        schema:
          type: number
          default: 10
      - name: sort
        in: query
        description: Ascending/Descending. Format is property,{asc|desc} and default
          is ascending.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      responses:
        '200':
          description: Successfully returned list of VM compute skus
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageInfrastructureResource'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Provider instance not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /admin/v2/providers/azure/instances/{id}/community-galleries/images:
    get:
      tags:
      - Azure Infrastructure
      operationId: getCommunityGalleryImages
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: org_id
        in: query
        description: 'Organization ID: non-super users can only access their own organization'
        required: false
        schema:
          type: string
          description: 'Organization ID: non-super users can only access their own
            organization'
      - name: page
        in: query
        description: Page number to retrieve.
        schema:
          type: number
          default: 0
      - name: size
        in: query
        description: Size of each page.
        schema:
          type: number
          default: 10
      - name: sort
        in: query
        description: Ascending/Descending. Format is property,{asc|desc} and default
          is ascending.
        schema:
          type: string
      responses:
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '200':
          description: Successfully returned images from Horizon Community Gallery
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageInfrastructureResource'
        '404':
          description: Provider instance not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /admin/v2/providers/azure/environments:
    get:
      tags:
      - Azure Infrastructure
      operationId: getAzureEnvironments
      responses:
        '200':
          description: Successfully returned azure environments
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
  /admin/v2/providers/azure/environments/{env}/regions:
    get:
      tags:
      - Azure Infrastructure
      operationId: getAzureRegions
      parameters:
      - name: env
        in: path
        required: true
        schema:
          type: string
      - name: org_id
        in: query
        description: 'Organization ID: non-super users can only access their own organization'
        required: false
        schema:
          type: string
      responses:
        '200':
          description: Successfully returned azure regions
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        '404':
          description: Azure environment not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /admin/v2/providers/azure/compute-vm-skus-with-preferences:
    get:
      tags:
      - Azure Infrastructure
      summary: Return a list of virtual machine compute SKUs with preferences
      operationId: getVmComputeSkusWithPreferences
      parameters:
      - name: in_use
        in: query
        description: Used to filter VM models based on usage by a template, one of
          true/false. Leave empty to avoid filtering
        required: false
        schema:
          type: boolean
      - name: org_id
        in: query
        description: 'Organization ID: non-super users can only access their own organization'
        required: false
        schema:
          type: string
      - name: page
        in: query
        description: Page number to retrieve.
        schema:
          type: number
          default: 0
      - name: provider_id
        in: query
        description: Provider instance ID
        required: false
        schema:
          type: string
      - name: search
        in: query
        description: Search Criteria. Please see model definition for list of searchable
          fields.
        schema:
          type: string
        example: name $eq name-1
      - name: size
        in: query
        description: Size of each page.
        schema:
          type: number
          default: 10
      - name: sort
        in: query
        description: Ascending/Descending. Format is property,{asc|desc} and default
          is ascending.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: tags
        in: query
        description: List of tags on which to filter the SKUs
        required: false
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
      - name: visible
        in: query
        description: Used to filter VM models based on visibility, one of true/false.
          Leave empty to avoid filtering
        required: false
        schema:
          type: boolean
      responses:
        '200':
          description: Successfully returned list of VM compute skus
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AzureComputeVmSkuResponseTO'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '207':
          description: Successfully returned a partial list of VM compute skus with
            error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AzureComputeVmSkuResponseTO'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /admin/v2/edge-deployments/{id}/logs/{logId}:
    get:
      tags:
      - Edge Deployments
      summary: Get Edge Deployment Log by Id
      operationId: getEdgeDeploymentLogById
      parameters:
      - name: id
        in: path
        description: Edge deployment ID
        required: true
        schema:
          type: string
      - name: logId
        in: path
        description: Edge deployment Log Document ID
        required: true
        schema:
          type: string
      - name: org_id
        in: query
        required: false
        schema:
          type: string
      responses:
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Unexpected internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '200':
          description: Successfully retrieved Edge Deployment Logs for Id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdgeDeploymentLogTO'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /admin/v2/edge-deployments/{id}/device-pairing-info:
    get:
      tags:
      - Edge Deployments
      summary: Get the device pairing info associated to the edge deployment
      operationId: getDevicePairingInfo
      parameters:
      - name: id
        in: path
        description: Edge deployment ID
        required: true
        schema:
          type: string
      - name: org_id
        in: query
        description: 'Organization ID: non-super users can only access their own organization'
        required: false
        schema:
          type: string
      responses:
        '200':
          description: Successfully retrieved the pairing info associated to the edge
            deployment
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PairingInfoResponseTO'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Unexpected internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '412':
          description: Precondition Failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /admin/v2/edge-deployments/{id}/device-connection-string:
    get:
      tags:
      - Edge Deployments
      summary: 'Get the device connection string associated to the edge deployment.
        NOTE: This is supported only for VSphere providers'
      operationId: getDeviceConnectionString
      parameters:
      - name: id
        in: path
        description: Edge deployment ID
        required: true
        schema:
          type: string
      - name: org_id
        in: query
        description: 'Organization ID: non-super users can only access their own organization'
        required: false
        schema:
          type: string
      responses:
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '200':
          description: Successfully retrieved the connection string associated to
            the edge deployment
          content:
            application/json:
              schema:
                type: string
        '500':
          description: Unexpected internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '412':
          description: Precondition Failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /admin/v2/edge-deployments/{id}/cmp-readiness:
    get:
      tags:
      - Edge Deployments
      summary: Get CMP Readiness by Id
      operationId: getEdgeDeploymentCmpReadiness
      parameters:
      - name: id
        in: path
        description: Edge deployment ID
        required: true
        schema:
          type: string
      - name: org_id
        in: query
        required: false
        schema:
          type: string
      responses:
        '200':
          description: Successfully retrieved CMP readiness
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdgeCmpReadinessModelTO'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Unexpected internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '412':
          description: Precondition Failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /admin/v2/edge-deployments/upgradable-versions:
    get:
      tags:
      - Edge Deployments
      summary: Get list of upgradable versions for all edge deployments of the given
        org
      operationId: getAllEdgeDeploymentsUpgradableVersions
      parameters:
      - name: deployment_type
        in: query
        description: Deployment Type. If not set default value is CLUSTER
        required: false
        schema:
          type: string
          enum:
          - VM
          - CLUSTER
          - UNMANAGED
      - name: id
        in: query
        required: false
        schema:
          type: string
      - name: include_upgradable_edges_only
        in: query
        description: If set to true, returns only the edges which have at least 1
          upgradable version. Edges whose upgradable versions cannot be determined
          due to some error will not be included in the response
        required: false
        schema:
          type: boolean
      - name: org_id
        in: query
        required: false
        schema:
          type: string
      - name: page
        in: query
        description: Page number to retrieve.
        schema:
          type: number
          default: 0
      - name: provider_label
        in: query
        required: false
        schema:
          type: string
      - name: search
        in: query
        description: Search Criteria. Please see model definition for list of searchable
          fields.
        schema:
          type: string
        example: id $eq id-1
      - name: size
        in: query
        description: Size of each page.
        schema:
          type: number
          default: 10
      - name: sort
        in: query
        description: Ascending/Descending. Format is property,{asc|desc} and default
          is ascending.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      responses:
        '200':
          description: Successfully retrieved upgradable versions for all edge deployments
            of the given org
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageEdgeDeploymentUpgradableVersionsTO'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Unexpected internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /admin/v1/sso-configurations/{id}/ca-bundle:
    get:
      tags:
      - SSO Configurations
      summary: Download the latest CA bundle associated to the SSO configuration
      operationId: getCaBundle_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: bundle_version
        in: query
        description: Optional parameter to fetch a specific version bundle, instead
          of default latest bundle
        required: false
        schema:
          type: integer
          format: int32
      - name: org_id
        in: query
        required: false
        schema:
          type: string
      responses:
        '200':
          description: Successfully download the CA bundle associated to SSO configuration
        '403':
          description: Forbidden
          content:
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Unexpected internal server error
          content:
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /admin/v1/sso-configurations/discovery-data:
    get:
      tags:
      - SSO Configurations
      summary: Fetches SSO discovery data for the edge and AD
      description: Fetch SSO discovery data for the edge and AD
      operationId: getDiscoveryData_1
      parameters:
      - name: ad_ids
        in: query
        required: true
        schema:
          type: array
          items:
            type: string
      - name: edge_ids
        in: query
        required: true
        schema:
          type: array
          items:
            type: string
      - name: org_id
        in: query
        required: false
        schema:
          type: string
      - name: skip_ads_in_use
        in: query
        required: false
        schema:
          type: boolean
          default: false
      responses:
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '200':
          description: Successfully retrieved SSO discovery data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SsoConfigurationDiscoveryTO'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /admin/v1/providers:
    get:
      tags:
      - Providers
      summary: Lists all supported providers.
      operationId: getAll_6
      responses:
        '200':
          description: List of supported providers
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProviderReadTO'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /admin/v1/providers/compute-vm-skus/preferences/tags:
    get:
      tags:
      - VM Skus
      summary: Get all VM tags for an org
      operationId: getVmTags
      parameters:
      - name: org_id
        in: query
        description: 'Organization ID: non-super users can only access their own organization'
        required: false
        schema:
          type: string
      - name: provider_label
        in: query
        description: Provider label
        required: true
        schema:
          type: string
      responses:
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '200':
          description: Successfully retrieved VM tags for the org
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VmTagsTO'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /admin/v1/providers/aws/workspaces/compute-skus:
    get:
      tags:
      - AWS Infrastructure
      operationId: getAwsWorkspacesComputeSkus
      parameters:
      - name: org_id
        in: query
        description: 'Organization ID: non-super users can only access their own organization'
        required: false
        schema:
          type: string
      responses:
        '404':
          description: Workspaces compute skus not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '200':
          description: Successfully returned aws workspaces compute skus
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  uniqueItems: true
                  type: array
                  items:
                    type: string
                    enum:
                    - VALUE
                    - STANDARD
                    - PERFORMANCE
                    - POWER
                    - GRAPHICS
                    - POWERPRO
                    - GRAPHICSPRO
                    - GRAPHICS_G4_DN
                    - GRAPHICSPRO_G4_DN
                    - UNKNOWN_TO_SDK_VERSION
        '500':
          description: Unexpected internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /admin/v1/providers/aws/regions:
    get:
      tags:
      - AWS Infrastructure
      operationId: getAwsRegions
      parameters:
      - name: org_id
        in: query
        description: 'Organization ID: non-super users can only access their own organization'
        required: false
        schema:
          type: string
      responses:
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '200':
          description: Successfully returned aws regions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AwsRegionTO'
        '500':
          description: Unexpected internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Regions not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /admin/v1/providers/aws/instances/{id}/workspace-directories:
    get:
      tags:
      - AWS Infrastructure
      operationId: getWorkspaceDirectories
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: org_id
        in: query
        description: 'Organization ID: non-super users can only access their own organization'
        required: false
        schema:
          type: string
      - name: page
        in: query
        description: Page number to retrieve.
        schema:
          type: number
          default: 0
      - name: size
        in: query
        description: Size of each page.
        schema:
          type: number
          default: 10
      - name: sort
        in: query
        description: Ascending/Descending. Format is property,{asc|desc} and default
          is ascending.
        schema:
          type: string
      responses:
        '200':
          description: Successfully returned keys from KMS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageInfrastructureResource'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Unexpected internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Provider instance not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: User validation errors on provided provider.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageInfrastructureResource'
  /admin/v1/providers/aws/instances/{id}/vpc:
    get:
      tags:
      - AWS Infrastructure
      operationId: getNetworks_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: org_id
        in: query
        description: 'Organization ID: non-super users can only access their own organization'
        required: false
        schema:
          type: string
      - name: page
        in: query
        description: Page number to retrieve.
        schema:
          type: number
          default: 0
      - name: size
        in: query
        description: Size of each page.
        schema:
          type: number
          default: 10
      - name: sort
        in: query
        description: Ascending/Descending. Format is property,{asc|desc} and default
          is ascending.
        schema:
          type: string
      responses:
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: User validation errors on provided network.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageInfrastructureResource'
        '500':
          description: Unexpected internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Provider instance not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '200':
          description: Successfully returned VPCs
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageInfrastructureResource'
  /admin/v1/providers/aws/instances/{id}/vpc/subnets:
    get:
      tags:
      - AWS Infrastructure
      operationId: getSubnets
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: org_id
        in: query
        description: 'Organization ID: non-super users can only access their own organization'
        required: false
        schema:
          type: string
      - name: page
        in: query
        description: Page number to retrieve.
        schema:
          type: number
          default: 0
      - name: size
        in: query
        description: Size of each page.
        schema:
          type: number
          default: 10
      - name: sort
        in: query
        description: Ascending/Descending. Format is property,{asc|desc} and default
          is ascending.
        schema:
          type: string
      - name: vpc_id
        in: query
        required: true
        schema:
          type: string
      responses:
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Unexpected internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Provider instance not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '200':
          description: Successfully returned subnets
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageInfrastructureResource'
        '400':
          description: User validation errors on provided subnet.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageInfrastructureResource'
  /admin/v1/providers/aws/instances/{id}/keys:
    get:
      tags:
      - AWS Infrastructure
      operationId: getKeys
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: org_id
        in: query
        description: 'Organization ID: non-super users can only access their own organization'
        required: false
        schema:
          type: string
      - name: page
        in: query
        description: Page number to retrieve.
        schema:
          type: number
          default: 0
      - name: size
        in: query
        description: Size of each page.
        schema:
          type: number
          default: 10
      - name: sort
        in: query
        description: Ascending/Descending. Format is property,{asc|desc} and default
          is ascending.
        schema:
          type: string
      responses:
        '200':
          description: Successfully returned keys from KMS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageInfrastructureResource'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Unexpected internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Provider instance not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: User validation errors on provided provider.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageInfrastructureResource'
  /admin/v1/domain-certificates/{id}:
    get:
      tags:
      - Domain Certificates
      summary: Fetch one Domain Certificate record
      description: Fetch one Domain Certificate record
      operationId: getById_5
      parameters:
      - name: id
        in: path
        description: Domain Certificate ID
        required: true
        schema:
          type: string
      - name: expanded
        in: query
        description: Fetch list of Active Directories using the Domain Certificate
        required: false
        schema:
          type: boolean
          default: false
      - name: org_id
        in: query
        description: 'Organization ID: non-super users can only access their own organization'
        required: false
        schema:
          type: string
      responses:
        '200':
          description: Successfully retrieved Domain Certificate record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainCertificateTO'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Domain Certificate record not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /admin/v1/agent-monitoring/config/deem:
    get:
      tags:
      - agent-monitoring-controller
      summary: Get DEEM configuration for agent
      operationId: getAgentConfig
      parameters:
      - name: org_id
        in: query
        description: 'Organization ID: non-super users can only access their own organization'
        required: false
        schema:
          type: string
      responses:
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '200':
          description: Successfully created/updated the agent configuration
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DEEMConfigTO'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Unexpected internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /auth/v2/client/users/logout:
    post:
      tags:
      - Auth
      summary: Logout User with ID token
      description: Log out from IDP
      operationId: logoutUserV2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LogoutRequestV2'
        required: true
      responses:
        '412':
          description: Precondition Failed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/LogoutUrl'
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/LogoutUrl'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/LogoutUrl'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/LogoutUrl'
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/LogoutUrl'
  /auth/v1/token:
    post:
      tags:
      - Auth
      summary: Get access token
      description: Gets the access token to authenticate the user.
      operationId: getAccessToken
      parameters:
      - name: x-envoy-external-address
        in: header
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AuthResponse'
  /auth/v1/refreshtoken:
    post:
      tags:
      - Auth
      summary: Get a new refresh token
      description: Provide refresh token from access token api to refresh the token.
      operationId: refreshToken
      parameters:
      - name: idp_tenant_domain
        in: query
        required: true
        schema:
          type: string
      - name: is_public_client
        in: query
        required: false
        schema:
          type: boolean
      - name: x-envoy-external-address
        in: header
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AuthResponse'
  /auth/v1/oauth/token:
    post:
      tags:
      - Auth
      summary: API for authentication using client credentials
      operationId: oAuthAuthorize
      requestBody:
        description: The application/x-www-form-urlencoded form data type
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AuthorizeRequestDoc'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessTokenDto'
      security:
      - basicAuth: []
  /auth/v1/logout:
    post:
      tags:
      - Auth
      summary: Logout User
      description: Log out from IDP, return the provider logout url.
      operationId: logoutUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LogoutRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/LogoutUrl'
  /auth/v1/external/authenticator/view/v1/token:
    post:
      tags:
      - Auth
      summary: Get access token from JWT token for view use-cases
      description: Verifies JWT token, extracts the user profile and generates titan
        access token based on that
      operationId: getAccessTokenFromViewJwtToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthRequestWithViewJwtToken'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AuthResponse'
  /auth/v1/client/users/revoke-ota:
    post:
      tags:
      - Auth
      summary: Revoke Ota
      description: Revoke generated OTA - Currently supported only for WS1 cloud
      operationId: revokeOta
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RevokeOtaRequest'
        required: true
      responses:
        '200':
          description: OK
  /auth/v1/admin/org-idp-map:
    get:
      tags:
      - Auth
      summary: Get CSP org ID to IDP tenant mapping
      operationId: getOrgIdpMapping
      parameters:
      - name: org_id
        in: query
        required: false
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OrgIdpMappingResponse'
    post:
      tags:
      - Auth
      summary: Map CSP org ID to IDP
      description: Map CSP org ID to IDP tenant and domains
      operationId: mapOrgIdp
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrgIdpMappingRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OrgIdpMappingResponse'
    delete:
      tags:
      - Auth
      summary: Delete CSP org from IDP tenant map
      operationId: deleteOrgIdpMapping
      parameters:
      - name: org_id
        in: query
        required: false
        schema:
          type: string
      responses:
        '204':
          description: No Content
  /auth/v1/admin/internal-networks:
    get:
      tags:
      - Auth
      summary: Gets the internal-networks for a given orgID
      description: Returns the list of internal-networks for a given orgID
      operationId: getInternalNetworks
      parameters:
      - name: org_id
        in: query
        required: false
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InternalNetworksResponse'
    post:
      tags:
      - Auth
      summary: Create a new internal networks list for an org ID
      description: Internal-networks is used to determine what policies needs to be
        applied - internal / external.
      operationId: createInternalNetworks
      parameters:
      - name: org_id
        in: query
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InternalNetworksRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InternalNetworksResponse'
    delete:
      tags:
      - Auth
      summary: Deletes internal-networks for an orgID
      description: Deletes a list of internal-networks or all for an orgID
      operationId: deleteInteralNetworks
      parameters:
      - name: org_id
        in: query
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InternalNetworksRequest'
        required: true
      responses:
        '200':
          description: OK
    patch:
      tags:
      - Auth
      summary: Updates the internal for a given orgID
      description: Updates the list of internal-networks for a given orgID
      operationId: patchInternalNetworks
      parameters:
      - name: org_id
        in: query
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InternalNetworksRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InternalNetworksResponse'
  /auth/v1/admin/azure-ad-setup:
    get:
      tags:
      - Auth
      summary: Get Azure AD setup
      operationId: getAzureAdSetup
      parameters:
      - name: org_id
        in: query
        required: false
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AzureAdSetup'
    post:
      tags:
      - Auth
      summary: Start Azure AD setup
      description: Starts alternative flow to setup Azure AD for Horizon Administrators
        without Global Administrator privilege. Returns url to be sent to Azure Global
        Administrator to grant consent.
      operationId: startAzureAdSetup
      parameters:
      - name: org_id
        in: query
        required: false
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AuthUrl'
  /auth/v1/admin/org-idp-map/{orgId}:
    patch:
      tags:
      - Auth
      summary: Patch organization to IDP mapping
      description: Patch the IDP tenant domain associated to the mapping
      operationId: patchOrgIdpMapping
      parameters:
      - name: orgId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrgIdpPatchRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OrgIdpMappingResponse'
  /auth/v1/callback:
    get:
      tags:
      - Auth
      summary: Callback API used to echo the authentication code returned from IAM
      operationId: callback
      parameters:
      - name: code
        in: query
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                type: string
  /auth/v1/azure-ad-callback:
    get:
      tags:
      - Auth
      summary: Update Azure AD setup after consent granted
      description: To be called on redirect from Azure AD after Global Administrator
        grants consent. After validating the state and code, updates status for Azure
        AD setup.
      operationId: azureAdSetupCallback
      parameters:
      - name: state
        in: query
        required: true
        schema:
          type: string
      - name: code
        in: query
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: boolean
  /auth/v1/auth-url:
    get:
      tags:
      - Auth
      summary: Get IAM authentication URL
      description: Get authentication url based on redirect url. Returns consent url
        for admin else auth url.
      operationId: getAuthUrl
      parameters:
      - name: redirect_uri
        in: query
        required: true
        schema:
          type: string
      - name: is_admin
        in: query
        required: false
        schema:
          type: boolean
      - name: consent_granted
        in: query
        required: false
        schema:
          type: boolean
      - name: idp_type
        in: query
        required: false
        schema:
          type: string
          default: azure
          enum:
          - azure
          - ws1a
          - ws1a_onprem
      - name: idp_tenant_id
        in: query
        required: false
        schema:
          type: string
      - name: idp_tenant_domain
        in: query
        required: false
        schema:
          type: string
      - name: state
        in: query
        required: false
        schema:
          type: string
      - name: prompt
        in: query
        required: false
        schema:
          type: string
      - name: code_challenge
        in: query
        required: false
        schema:
          type: string
      - name: ota
        in: query
        required: false
        schema:
          type: string
      - name: org_id
        in: query
        required: false
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AuthUrl'
  /auth/v1/admin/users:
    get:
      tags:
      - Auth
      summary: Get users from IAM
      description: Get users from IAM with an optional filter by IAM user_name or
        list of user ids(exclusive)
      operationId: getUsers
      parameters:
      - name: user_name
        in: query
        required: false
        schema:
          type: string
      - name: first_name
        in: query
        required: false
        schema:
          type: string
      - name: last_name
        in: query
        required: false
        schema:
          type: string
      - name: domain
        in: query
        required: false
        schema:
          type: string
      - name: org_id
        in: query
        required: false
        schema:
          type: string
      - name: user_ids
        in: query
        required: false
        schema:
          type: array
          items:
            type: string
      - name: top
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: -1
      - name: next_link
        in: query
        required: false
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UsersResponse'
  /auth/v1/admin/usersAndGroups:
    get:
      tags:
      - Auth
      summary: Get users and groups from IAM
      description: Filters the users and groups info based on search string.
      operationId: getUsersAndGroups
      parameters:
      - name: search_string
        in: query
        required: false
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UsersAndGroups'
      deprecated: true
  /auth/v1/admin/user/{userId}/groups:
    get:
      tags:
      - Auth
      summary: Get a specific user's group information based on userId
      description: Fetches list of groups user is part of
      operationId: getGroupsByUserId
      parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: string
      - name: org_id
        in: query
        required: false
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GroupsResponse'
  /auth/v1/admin/idp-tenants/{idpTenantId}/org-idp-domains:
    get:
      tags:
      - Auth
      summary: Get org idp domains for given idpTenantId
      description: Fetches org and idp domain map
      operationId: getOrgIdpDomainsByIdpTenantId
      parameters:
      - name: idpTenantId
        in: path
        required: true
        schema:
          type: string
      - name: searchable
        in: query
        description: Search Criteria. Please see model definition for list of searchable
          fields.
        required: false
        schema:
          $ref: '#/components/schemas/SearchablePredicateOrgIdpMapping'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OrgDomainsDTO'
  /auth/v1/admin/idp-map:
    get:
      tags:
      - Auth
      summary: Get IDP mapping by tenant ID and/or tenant domain
      operationId: getIdpMapping
      parameters:
      - name: idp_tenant_id
        in: query
        required: false
        schema:
          type: string
      - name: idp_tenant_domain
        in: query
        required: false
        schema:
          type: string
      - name: application_name
        in: query
        required: false
        schema:
          type: string
      - name: idp_type
        in: query
        required: false
        schema:
          type: string
      - name: page
        in: query
        description: Zero-based page index (0..N)
        schema:
          type: integer
          default: 0
      - name: size
        in: query
        description: The size of the page to be returned
        schema:
          type: integer
          default: 20
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PageOrgIdpMapping'
  /auth/v1/admin/groups:
    get:
      tags:
      - Auth
      summary: Get user groups from IAM
      description: Get user groups from IAM with an optional filter by display_name
        or list of group_ids(exclusive)
      operationId: getGroups
      parameters:
      - name: display_name
        in: query
        required: false
        schema:
          type: string
      - name: org_id
        in: query
        required: false
        schema:
          type: string
      - name: group_ids
        in: query
        required: false
        schema:
          type: array
          items:
            type: string
      - name: top
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: -1
      - name: next_link
        in: query
        required: false
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GroupsResponse'
  /auth/v1/admin/groups/{id}/users:
    get:
      tags:
      - Auth
      summary: Get users in group IAM. If transitive param is set, will return a flat
        list of all nested users.
      description: Get users in group IAM. If transitive param is set, will return
        a flat list of all nested users.
      operationId: getUsersInGroup
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: org_id
        in: query
        required: false
        schema:
          type: string
      - name: next_link
        in: query
        required: false
        schema:
          type: string
      - name: transitive
        in: query
        required: false
        schema:
          type: boolean
      - name: select
        in: query
        required: false
        schema:
          type: string
      - name: top
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: -1
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UsersResponse'
  /auth/v1/admin/groups/{id}/users/delta:
    get:
      tags:
      - Auth
      summary: Get delta of users in group IAM. If transitive param is set, will return
        a flat list of all nested users.
      description: Get users in group IAM. If transitive param is set, will return
        a flat list of all nested users.
      operationId: getUsersInGroupDelta
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: org_id
        in: query
        required: false
        schema:
          type: string
      - name: next_link
        in: query
        required: false
        schema:
          type: string
      - name: transitive
        in: query
        required: false
        schema:
          type: boolean
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UsersResponse'
  /auth/v1/admin/groups/{id}/nested-groups:
    get:
      tags:
      - Auth
      summary: Get groups within in group from IAM. If transitive is set, will return
        a flat list of all nested groups.
      description: Get groups within in group from IAM. If transitive is set, will
        return a flat list of all nested groups.
      operationId: getNestedGroupsInGroup
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: org_id
        in: query
        required: false
        schema:
          type: string
      - name: next_link
        in: query
        required: false
        schema:
          type: string
      - name: transitive
        in: query
        required: false
        schema:
          type: boolean
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GroupsResponse'
  /auth/v1/admin/custom_domains:
    get:
      tags:
      - Auth
      summary: Retrieve a list of domain objects
      description: Retrieve a list of domain associated with the tenant, only supported
        by Azure AD
      operationId: getCustomDomains
      parameters:
      - name: org_id
        in: query
        required: false
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CustomDomainsResponse'
  /auth/.well-known/openid-configuration:
    get:
      tags:
      - Auth
      summary: Get JWT key
      operationId: getJwtKeys
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: object
  /auth/v1/admin/idp-oauth-client:
    delete:
      tags:
      - Auth
      summary: Delete admin and user scoped IDP OAuth clients
      operationId: deleteIdpOAuthClient
      parameters:
      - name: org_id
        in: query
        required: false
        schema:
          type: string
      - name: force
        in: query
        required: false
        schema:
          type: boolean
      responses:
        '204':
          description: No Content
  /av-appies/v1/app-versions:
    get:
      tags:
      - AppVersions
      summary: Gets all application versions
      description: Gets all existing application versions, belonging to the specified
        org. If org is not provided, it will use the org from the authentication context.
      operationId: getAllAppVersions
      parameters:
      - name: pageable
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/Pageable'
      - name: searchable
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/SearchablePredicateAppVersionDto'
      - name: include_application
        in: query
        description: If true, application details will be included in response
        required: false
        schema:
          type: boolean
        example: true
      - name: page
        in: query
        description: Page number to retrieve.
        schema:
          type: integer
          format: int32
      - name: size
        in: query
        description: Size of each page.
        schema:
          type: integer
          format: int32
      - name: sort
        in: query
        description: Ascending/Descending. Format is property,{asc|desc} and default
          is ascending.
        schema:
          type: array
          items:
            type: string
      - name: search
        in: query
        description: Search Criteria. Please see model definition for list of searchable
          fields.
        schema:
          type: string
        example: id $eq id-1
      responses:
        '403':
          description: Forbidden
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/PageAppVersionDto'
        '200':
          description: Success
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/PageAppVersionDto'
        '401':
          description: Unauthorized
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/PageAppVersionDto'
  /av-appies/v1/app-versions/{appVersionId}:
    delete:
      tags:
      - AppVersions
      summary: Delete an application version by id
      description: Deletes an existing application version, belonging to the specified
        org. If org is not provided, it will use the org from the authentication context.
      operationId: deleteAppVersion
      parameters:
      - name: appVersionId
        in: path
        description: App Version Id
        required: true
        schema:
          type: string
        example: e7421121-d052-4fd9-861f-7ce57246134e
      - name: org_id
        in: query
        description: 'Organization ID: non-super users can only access their own organization'
        required: false
        schema:
          type: string
        example: 5c2409df-a307-4a04-b558-fb0693d42890
      - name: force_delete
        in: query
        description: If true, deletes despite potential clean-up errors
        required: false
        schema:
          type: boolean
        example: true
      responses:
        '204':
          description: No Content
        '404':
          description: Not Found
        '403':
          description: Forbidden
        '401':
          description: Unauthorized
    patch:
      tags:
      - AppVersions
      summary: Patch an appVersion attributes
      description: Patch an existing application version with certain attributes of
        the application versionIf org is not provided, it will use the org from the
        authentication context.
      operationId: patchAppVersion
      parameters:
      - name: appVersionId
        in: path
        description: App Version Id
        required: true
        schema:
          type: string
        example: e7421121-d052-4fd9-861f-7ce57246134e
      - name: org_id
        in: query
        description: 'Organization ID: non-super users can only access their own organization'
        required: false
        schema:
          type: string
        example: 5c2409df-a307-4a04-b558-fb0693d42890
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataRequestDtoMapStringString'
        required: true
      responses:
        '404':
          description: Not Found
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AppVersionDto'
        '403':
          description: Forbidden
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AppVersionDto'
        '200':
          description: Success
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AppVersionDto'
        '401':
          description: Unauthorized
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AppVersionDto'
  /av-appies/v1/app-versions/{appVersionId}/markers/{markerId}:
    delete:
      tags:
      - AppVersions
      summary: Unset Marker for an application version
      description: Unsets Marker for an existing application version, belonging to
        the specified org. If org is not provided, it will use the org from the authentication
        context.
      operationId: unsetMarker
      parameters:
      - name: appVersionId
        in: path
        description: App Version Id
        required: true
        schema:
          type: string
        example: e7421121-d052-4fd9-861f-7ce57246134e
      - name: markerId
        in: path
        description: This can be either CURRENT or LATEST
        required: true
        schema:
          type: string
        example: CURRENT
      - name: org_id
        in: query
        description: 'Organization ID: non-super users can only access their own organization'
        required: false
        schema:
          type: string
        example: 5c2409df-a307-4a04-b558-fb0693d42890
      responses:
        '204':
          description: No Content
        '404':
          description: Not Found
        '403':
          description: Forbidden
        '401':
          description: Unauthorized
    put:
      tags:
      - AppVersions
      summary: Set Marker for an application version
      description: Sets Marker for an existing application version, belonging to the
        specified org. If org is not provided, it will use the org from the authentication
        context.
      operationId: setMarker
      parameters:
      - name: appVersionId
        in: path
        description: App Version Id
        required: true
        schema:
          type: string
        example: e7421121-d052-4fd9-861f-7ce57246134e
      - name: markerId
        in: path
        description: This can be either CURRENT or LATEST
        required: true
        schema:
          type: string
        example: CURRENT
      responses:
        '404':
          description: Not Found
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AppVersionDto'
        '403':
          description: Forbidden
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AppVersionDto'
        '200':
          description: Success
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AppVersionDto'
        '401':
          description: Unauthorized
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AppVersionDto'
  /av-appies/v1/app-versions/{appVersionId}/programs:
    get:
      tags:
      - AppVersions
      summary: Get programs for an application version by id
      description: Gets list of programs with icons for existing application version,
        belonging to the specified org. If org is not provided, it will use the org
        from the authentication context.
      operationId: getProgramsForAppVersion
      parameters:
      - name: appVersionId
        in: path
        description: App Version Id
        required: true
        schema:
          type: string
        example: e7421121-d052-4fd9-861f-7ce57246134e
      responses:
        '404':
          description: Not Found
          content:
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProgramDto'
        '403':
          description: Forbidden
          content:
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProgramDto'
        '200':
          description: Success
          content:
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProgramDto'
        '401':
          description: Unauthorized
          content:
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProgramDto'
  /av-appies/v1/applications:
    get:
      tags:
      - Applications
      summary: Get all applications
      description: Gets all applications, belonging to the specified org. If org is
        not provided, it will use the org from the authentication context.
      operationId: getApplications
      parameters:
      - name: include_complete
        in: query
        description: If true, includes app versions and packages associated with the
          application within the response
        required: false
        schema:
          type: boolean
      - name: org_id
        in: query
        description: 'Organization ID: non-super users can only access their own organization'
        required: false
        schema:
          type: string
      - name: searchable
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/SearchablePredicateApplicationDto'
      - name: pageable
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/Pageable'
      - name: page
        in: query
        description: Page number to retrieve.
        schema:
          type: integer
          format: int32
      - name: size
        in: query
        description: Size of each page.
        schema:
          type: integer
          format: int32
      - name: sort
        in: query
        description: Ascending/Descending. Format is property,{asc|desc} and default
          is ascending.
        schema:
          type: array
          items:
            type: string
      - name: search
        in: query
        description: Search Criteria. Please see model definition for list of searchable
          fields.
        schema:
          type: string
        example: id $eq id-1
      responses:
        '404':
          description: Not Found
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/PageApplicationDto'
        '403':
          description: Forbidden
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/PageApplicationDto'
        '200':
          description: Success
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/PageApplicationDto'
        '401':
          description: Unauthorized
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/PageApplicationDto'
    post:
      tags:
      - Applications
      summary: Create an application
      description: Creates a new application, belonging to the specified org. If org
        is not provided, it will use the org from the authentication context.
      operationId: createApplication
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataRequestDtoApplicationDto'
        required: true
      responses:
        '404':
          description: Not Found
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ApplicationDto'
        '403':
          description: Forbidden
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ApplicationDto'
        '201':
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ApplicationDto'
        '401':
          description: Unauthorized
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ApplicationDto'
  /av-appies/v1/applications/{applicationId}:
    delete:
      tags:
      - Applications
      summary: Delete an application by id
      description: Deletes an existing application, belonging to the specified org.
        If org is not provided, it will use the org from the authentication context.
      operationId: deleteApplication
      parameters:
      - name: applicationId
        in: path
        description: Application Id
        required: true
        schema:
          type: string
        example: e7421121-d052-4fd9-861f-7ce57246134e
      - name: org_id
        in: query
        description: 'Organization ID: non-super users can only access their own organization'
        required: false
        schema:
          type: string
        example: 5c2409df-a307-4a04-b558-fb0693d42890
      - name: forceDelete
        in: query
        description: If true, deletes despite potential clean-up errors
        required: false
        schema:
          type: boolean
        example: true
      responses:
        '204':
          description: No Content
        '404':
          description: Not Found
        '403':
          description: Forbidden
        '401':
          description: Unauthorized
    get:
      tags:
      - Applications
      summary: Get an application by id
      description: Get an application by id, belonging to the specified org. If org
        is not provided, it will use the org from the authentication context.
      operationId: getApplication
      parameters:
      - name: applicationId
        in: path
        description: Application Id
        required: true
        schema:
          type: string
        example: e7421121-d052-4fd9-861f-7ce57246134e
      - name: include_complete
        in: query
        description: If true, includes app versions and packages associated with the
          application within the response
        required: false
        schema:
          type: boolean
        example: true
      - name: org_id
        in: query
        description: 'Organization ID: non-super users can only access their own organization'
        required: false
        schema:
          type: string
        example: 5c2409df-a307-4a04-b558-fb0693d42890
      responses:
        '404':
          description: Not Found
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ApplicationDto'
        '403':
          description: Forbidden
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ApplicationDto'
        '200':
          description: Success
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ApplicationDto'
        '401':
          description: Unauthorized
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ApplicationDto'
    put:
      tags:
      - Applications
      summary: Update an application by id
      description: Updates an existing application, belonging to the specified org.
        If org is not provided, it will use the org from the authentication context.
      operationId: updateApplication
      parameters:
      - name: applicationId
        in: path
        description: Application Id
        required: true
        schema:
          type: string
        example: e7421121-d052-4fd9-861f-7ce57246134e
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataRequestDtoApplicationDto'
        required: true
      responses:
        '404':
          description: Not Found
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ApplicationDto'
        '403':
          description: Forbidden
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ApplicationDto'
        '200':
          description: Success
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ApplicationDto'
        '401':
          description: Unauthorized
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ApplicationDto'
  /av-appies/v1/create-app-package:
    post:
      tags:
      - AppPackages
      summary: Create an application if not present, appVersion and creates a app
        studio session
      description: Creates a new application if not present, AppVersion and creates
        a app studio session belonging to the org from the authentication context.Application
        Packaging workflow(aka Cloud Native Capture) is implemented as a seamless
        solution in Horizon Cloud Service on Azure V1 that allows a Customer Admin
        to provision App Volumes Application Packages within the same Admin Console(Astro
        UI)  that is later used to view the application inventory and assign applications
        to users, for delivery on their VDI/WVD desktops, thereby allowing customer
        admins to manage the entire lifecycle of an application from provision to
        retire/delete within the single Admin Console
      operationId: createApplicationPackage
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataRequestDtoApplicationPackageDto'
        required: true
      responses:
        '404':
          description: Not Found
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ApplicationDto'
        '403':
          description: Forbidden
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ApplicationDto'
        '202':
          description: Accepted
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ApplicationDto'
        '401':
          description: Unauthorized
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ApplicationDto'
    put:
      tags:
      - AppPackages
      summary: Update an appPackage by applicationId and appVersionId
      description: Updates an appPackage, belonging to the org and location from the
        authentication context.You can create a new version of an existing Package
        by updating the existing Package. The existing Package becomes the base package
        or acts as a reference for the new version of the Package
      operationId: updateApplicationPackage
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataRequestDtoApplicationPackageUpdateDto'
        required: true
      responses:
        '404':
          description: Not Found
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ApplicationDto'
        '403':
          description: Forbidden
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ApplicationDto'
        '202':
          description: Accepted
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ApplicationDto'
        '401':
          description: Unauthorized
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ApplicationDto'
  /av-appies/v1/import/app-packages:
    post:
      tags:
      - App Import
      summary: import packages
      description: import packages
      operationId: importPackages
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataRequestDtoImportRequestDto'
        required: true
      responses:
        '403':
          description: Forbidden
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ImportResponseDto'
        '202':
          description: Accepted
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ImportResponseDto'
        '401':
          description: Unauthorized
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ImportResponseDto'
  /av-entitlements/v1/app-entitlements:
    get:
      tags:
      - app-entitlement-controller
      operationId: getAppEntitlements
      parameters:
      - name: pageable
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/Pageable'
      - name: searchable
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/SearchablePredicateAppEntitlementDto'
      - name: org_id
        in: query
        required: false
        schema:
          type: string
      - name: page
        in: query
        description: Page number to retrieve.
        schema:
          type: integer
          format: int32
      - name: size
        in: query
        description: Size of each page.
        schema:
          type: integer
          format: int32
      - name: sort
        in: query
        description: Ascending/Descending. Format is property,{asc|desc} and default
          is ascending.
        schema:
          type: array
          items:
            type: string
      - name: search
        in: query
        description: Search Criteria. Please see model definition for list of searchable
          fields.
        schema:
          type: string
        example: id $eq id-1
      responses:
        '200':
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/PageAppEntitlementDto'
  /av-entitlements/v1/app-entitlements/check-conflicts:
    post:
      tags:
      - app-entitlement-controller
      operationId: checkConflicts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataRequestDtoCreateEntitlementsRequestDto'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/hal+json:
              schema:
                type: object
                additionalProperties:
                  type: array
                  items:
                    $ref: '#/components/schemas/AppEntitlementDto'
  /av-entitlements/v1/app-entitlements/create-bulk:
    post:
      tags:
      - app-entitlement-controller
      operationId: createBulkEntitlements
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataRequestDtoCreateEntitlementsRequestDto'
        required: true
      responses:
        '202':
          description: Accepted
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/RequestAcceptedResponseDto'
  /av-entitlements/v1/app-entitlements/delete-bulk:
    post:
      tags:
      - app-entitlement-controller
      operationId: deleteBulkAppEntitlements
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataRequestDtoDeleteEntitlementsRequestDto'
        required: true
      responses:
        '202':
          description: Accepted
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/RequestAcceptedResponseDto'
  /av-fileshare/v1/fileshares:
    get:
      tags:
      - fileshare-controller
      summary: Get all fileshares
      description: Gets all fileshares, belonging to the specified org. If org is
        not provided, it will use the org from the authentication context.
      operationId: getFileshares
      parameters:
      - name: page
        in: query
        description: Page number to retrieve.
        required: false
        schema:
          type: integer
          format: int32
      - name: size
        in: query
        description: Size of each page.
        required: false
        schema:
          type: integer
          format: int32
      - name: sort
        in: query
        description: Ascending/Descending. Format is property,{asc|desc} and default
          is ascending.
        required: false
        schema:
          type: array
          items:
            type: string
      - name: searchable
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/SearchablePredicateFileshareDto'
      - name: org_id
        in: query
        required: false
        schema:
          type: string
      - name: include_sensitive_data
        in: query
        required: false
        schema:
          type: boolean
      - name: search
        in: query
        description: Search Criteria. Please see model definition for list of searchable
          fields.
        schema:
          type: string
        example: id $eq id-1
      responses:
        '202':
          description: No Content
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/PageFileshareDto'
        '404':
          description: Not Found
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/PageFileshareDto'
        '403':
          description: Forbidden
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/PageFileshareDto'
        '401':
          description: Unauthorized
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/PageFileshareDto'
  /activity-manager/v1/activities:
    get:
      tags:
      - Activities
      summary: Get all activities. It returns list of audit and system activities.
      operationId: getAllActivities
      parameters:
      - name: Accept-Language
        in: header
        description: Accept-Language Header.
        schema:
          type: string
          default: en-US
      - name: end_date
        in: query
        description: Event End Date
        required: false
        schema:
          type: string
          format: date-time
        example: '2023-08-31T05:08:56.530+00:00'
      - name: org_id
        in: query
        description: Id of the CSP org
        required: false
        schema:
          type: string
      - name: page
        in: query
        description: Page number to retrieve.
        schema:
          type: number
          default: 0
      - name: search
        in: query
        description: Search Criteria. Please see model definition for list of searchable
          fields.
        required: false
        schema:
          type: string
        example: orgId $eq org-id-1
      - name: size
        in: query
        description: Size of each page.
        schema:
          type: number
          default: 10
      - name: sort
        in: query
        description: Ascending/Descending. Format is property,{asc|desc} and default
          is ascending.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: start_date
        in: query
        description: Event Start Date
        required: false
        schema:
          type: string
          format: date-time
        example: '2023-08-30T05:08:56.530+00:00'
      responses:
        '401':
          description: "Unauthorized \u2013 The user is not authorized to access the\
            \ requested resource."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: "Forbidden \u2013 The user provided sufficient credentials,\
            \ but they are not allowed to access a resource regardless of the authorization\
            \ state"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error - Failed to fetch activity detail
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '200':
          description: Successfully fetched activities
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageActivityResponseRepresentation'
  /activity-manager/v1/activities/{id}:
    get:
      tags:
      - Activities
      summary: Get system or audit activity by Id.
      operationId: getActivityById
      parameters:
      - name: Accept-Language
        in: header
        description: Accept-Language Header.
        schema:
          type: string
          default: en-US
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: page
        in: query
        description: Page number to retrieve.
        schema:
          type: number
          default: 0
      - name: size
        in: query
        description: Size of each page.
        schema:
          type: number
          default: 10
      responses:
        '401':
          description: "Unauthorized \u2013 The user is not authorized to access the\
            \ requested resource."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '200':
          description: Successfully fetched activity detail
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityRequestRepresentation'
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: "Forbidden \u2013 The user provided sufficient credentials,\
            \ but they are not allowed to access a resource regardless of the authorization\
            \ state"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error - Failed to fetch activity detail
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /rx-service/v1/tenant/client-setting:
    get:
      tags:
      - Tenant Setting API
      summary: Get tenant client setting
      description: Get tenant client setting, with an optional org ID filter. Non-super
        users can only query for their own org IDs. This will return the configuration
        for this org for which the caller has 'read' permission
      operationId: getTenantClientSetting
      parameters:
      - name: org_id
        in: query
        description: orginzation Id
        required: false
        schema:
          type: string
        example: orginzation Id
      responses:
        '200':
          description: Successfully retrieved tenant configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TenantClientSettingTO'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
      - Tenant Setting API
      summary: Update an existing tenant client setting
      description: Updates an existing tenant client setting with new values. The
        new data must be complete and valid as if it were a new record
      operationId: updateTenantClientSetting
      parameters:
      - name: org_id
        in: query
        description: orginzation Id
        required: false
        schema:
          type: string
        example: orginzation Id
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TenantClientSettingTO'
        required: true
      responses:
        '409':
          description: Conflict -  concurrent updates
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '412':
          description: Precondition failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '200':
          description: Successfully update tenant configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TenantClientSettingTO'
  /rx-service/v1/tenant/custom-domain:
    get:
      tags:
      - Custom Domain API
      summary: Get custom-defined FQDN information
      operationId: getCustomDefinedDomain
      parameters:
      - name: org_id
        in: query
        required: false
        schema:
          type: string
      responses:
        '200':
          description: Successfully get URL custom-defined FQDN
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomDefinedDomainTO'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      tags:
      - Custom Domain API
      summary: create custom-defined FQDN for current tenant
      operationId: createCustomDefinedDomain
      parameters:
      - name: org_id
        in: query
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCustomDefinedDomainTO'
        required: true
      responses:
        '202':
          description: The request has been accepted for processing and the operation
            will complete asynchronously
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomDefinedDomainTO'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomDefinedDomainTO'
    patch:
      tags:
      - Custom Domain API
      summary: update custom-defined FQDN for current tenant
      operationId: updateCustomDefinedDomain
      parameters:
      - name: org_id
        in: query
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCustomDefinedDomainTO'
        required: true
      responses:
        '200':
          description: Successfully update URL custom-defined FQDN
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomDefinedDomainTO'
        '202':
          description: The request has been accepted for processing and the operation
            will complete asynchronously
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomDefinedDomainTO'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
      - Custom Domain API
      summary: delete custom-defined FQDN for current tenant
      operationId: deleteCustomDefinedDomain
      parameters:
      - name: force
        in: query
        required: false
        schema:
          type: boolean
      - name: org_id
        in: query
        required: false
        schema:
          type: string
      responses:
        '200':
          description: Successfully delete URL custom-defined FQDN
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomDefinedDomainTO'
        '202':
          description: The request has been accepted for processing and the operation
            will complete asynchronously
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomDefinedDomainTO'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /rx-service/v1/tenant/vanity:
    get:
      tags:
      - Tenant Setting API
      summary: Get tenant vanity
      description: Get tenant vanity setting, with an optional org ID filter. Non-super
        users can only query for their own org IDs. This will return the configuration
        for this org for which the caller has 'read' permission
      operationId: getTenantVanity
      parameters:
      - name: org_id
        in: query
        description: organization Id
        required: false
        schema:
          type: string
        example: organization Id
      responses:
        '200':
          description: Successfully retrieved tenant configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TenantVanityTO'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
      - Tenant Setting API
      summary: Update an existing tenant vanity
      description: Updates an existing tenant setting with new values. The new data
        must be complete and valid as if it were a new record
      operationId: updateTenantVanity
      parameters:
      - name: org_id
        in: query
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TenantVanityTO'
        required: true
      responses:
        '409':
          description: Conflict -  concurrent updates
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '200':
          description: Successfully update tenant configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TenantSettingTO'
  /rx-service/v2/rds-license:
    post:
      tags:
      - RDS License API
      summary: Get RDS License
      description: Get per-device RDS License for current client device
      operationId: getRdsLicense_1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClientBaseRequest'
        required: true
      responses:
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '200':
          description: Successfully get RDS license
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RDSLicenseTO'
    put:
      tags:
      - RDS License API
      summary: Update RDS License
      description: Update per-device RDS License for current client device
      operationId: updateRdsLicense
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RDSLicenseRequest'
        required: true
      responses:
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '200':
          description: Successfully updated RDS license
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RDSLicenseTO'
    delete:
      tags:
      - RDS License API
      summary: Delete RDS License
      description: Delete per-device RDS License for current client device
      operationId: deleteRdsLicense
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClientBaseRequest'
        required: true
      responses:
        '204':
          description: Successfully deleted RDS license
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /rx-service/v2/profile:
    post:
      tags:
      - User Profile API
      summary: Get user profile
      description: Get the profile setting for current user
      operationId: getProfile
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProfileExtendedRequest'
        required: true
      responses:
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '412':
          description: Precondition Failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
      - User Profile API
      summary: Update user profile
      description: Update the profile setting for current user
      operationId: updateProfile
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProfileTO'
        required: true
      responses:
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '412':
          description: Precondition Failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /rx-service/v2/profile/favorites:
    post:
      tags:
      - User Profile API
      summary: Get user favorites
      description: Gets the favorites for current user
      operationId: getFavorites
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClientBaseRequest'
        required: true
      responses:
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '412':
          description: Precondition Failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
      - User Profile API
      summary: Update user favorites
      description: Update the favorites for current user
      operationId: updateFavorites
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
        required: true
      responses:
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '412':
          description: Precondition Failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
      - User Profile API
      summary: Delete user favorites
      description: Delete the favorites for current user
      operationId: DeleteFavorites
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
        required: true
      responses:
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '412':
          description: Precondition Failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      tags:
      - User Profile API
      summary: Patch user favorites
      description: Patch the favorites for current user
      operationId: patchFavorites
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
        required: true
      responses:
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '412':
          description: Precondition Failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
components:
  schemas:
    ApplicationDefinitionImageReferenceListRepresentation:
      required:
      - imageReferences
      type: object
      properties:
        imageReferences:
          maxItems: 100
          minItems: 0
          type: array
          items:
            $ref: '#/components/schemas/ImageReference'
        orgId:
          type: string
          description: OrgId is required for non-customer CSP token
    ImageReference:
      type: object
      properties:
        modelVersion:
          type: integer
          format: int64
        streamId:
          type: string
        versionId:
          type: string
        markerId:
          type: string
        sourceResource:
          $ref: '#/components/schemas/InfrastructureResource'
      description: Reference to an image (stream and version) from which all VMs in
        the template will be created. This is obtained from the Image Service.
    ErrorDetail:
      type: object
      properties:
        code:
          type: string
          description: Unique code for this error
          example: SG_ADMIN_INVALID_TEMPLATE_DEFINITION
        message:
          type: string
          description: Error message
          example: Invalid template definition
        detail:
          type: string
          description: Detailed Error message
          example: Template creation request contained invalid value imagexyz for
            imageId
        domain:
          type: string
          description: Service where the error happened
          example: Image
        severity:
          type: string
          description: Severity of the error
          example: Critical
        timestampInUtc:
          type: string
          description: Time stamp in UTC format - dow mon dd hh:mm:ss zzz yyyy
          format: date-time
        parameters:
          type: object
          additionalProperties:
            type: string
            description: Custom parameters for this error
          description: Custom parameters for this error
        cause:
          $ref: '#/components/schemas/ErrorDetail'
      description: Stack trace of the error
    ErrorResponse:
      type: object
      properties:
        status:
          type: integer
          description: Http status for the error
          format: int32
          example: 400
        errors:
          type: array
          description: Stack trace of the error
          items:
            $ref: '#/components/schemas/ErrorDetail'
        traceId:
          type: string
          description: Trace Id to check in the logs
          example: 627937bfdc75be5d6f96a8bd
        resource:
          type: string
          description: Resource which on which error happened
          example: /admin/templates
    AppDefResultsTO:
      type: object
      properties:
        applicationReference:
          $ref: '#/components/schemas/ApplicationReference'
        applicationImageReferences:
          type: array
          items:
            $ref: '#/components/schemas/ApplicationImageReference'
    ApplicationDefinitionResponseTO:
      type: object
      properties:
        id:
          type: string
        orgId:
          type: string
        name:
          type: string
        path:
          type: string
        streamId:
          type: string
        versionId:
          type: string
        appInventoryId:
          type: string
        publisher:
          type: string
        version:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        icons:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/Icon'
        registeredExtensions:
          $ref: '#/components/schemas/RegisteredExtensionsRepresentation'
        manualEntry:
          type: boolean
    ApplicationImageReference:
      type: object
      properties:
        imageReference:
          $ref: '#/components/schemas/ImageReference'
        markers:
          type: array
          items:
            $ref: '#/components/schemas/MarkerTO'
        applicationDefinitionResponseTO:
          $ref: '#/components/schemas/ApplicationDefinitionResponseTO'
        version:
          type: string
          description: app version
          example: 'Nullable attribute; Valid Example : v1.1'
    ApplicationReference:
      type: object
      properties:
        name:
          type: string
        version:
          type: string
        icon:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/Icon'
        publisher:
          type: string
          description: app publisher
          example: 'Nullable attribute; Valid Example : Microsoft Corporation'
    Extension:
      type: object
      properties:
        friendlyName:
          type: string
          description: Friendly Name
        value:
          type: string
          description: Value
      description: List of Extentions
    Icon:
      type: object
      properties:
        width:
          type: integer
          description: Icon's width
          format: int32
        height:
          type: integer
          description: Icon's height
          format: int32
        iconHash:
          type: string
          description: Icon's hash
        iconSasPath:
          type: string
          description: Icon's sas path
        path:
          type: string
          description: Icon's path
      description: List of application icons
    MarkerTO:
      required:
      - imageId
      - name
      - orgId
      - status
      - versionId
      type: object
      properties:
        id:
          type: string
          description: Unique record ID
          readOnly: true
          example: 0123456789
        name:
          maxLength: 64
          minLength: 0
          pattern: ^[A-Za-z0-9_-]*$
          type: string
          description: Name of this marker
          example: HRLite,HRPro
        versionId:
          type: string
          description: Version ID this marker is associated with
          readOnly: true
          example: 0123456789
        imageId:
          type: string
          description: Image ID this marker is associated with
          readOnly: true
          example: 0123456789
        status:
          type: string
          description: Indicates the status of the marker based on its stage during
            marker movement workflow
          readOnly: true
          example: IN_PROGRESS
          enum:
          - ADDITION_IN_PROGRESS
          - ADDITION_FAILED
          - ADDED
          - DELETE_IN_PROGRESS
          - DELETE_FAILED
          - DELETE_VALIDATION_IN_PROGRESS
          - UPDATES_COMPLETED
          - UPDATES_FAILED
          - UPDATES_IN_PROGRESS
          - UPDATES_INITIATED
          - UPDATES_PARTIALLY_COMPLETED
          - UPDATES_VALIDATION_COMPLETED
          - UPDATES_VALIDATION_FAILED
          - UPDATES_VALIDATION_IN_PROGRESS
          - "IN_PROGRESS,\n    VALIDATION_FAILED,\n    VALIDATION_COMPLETED,\n   \
            \ UPDATES_INITIATED,\n    UPDATES_FAILED,\n    UPDATES_COMPLETED,\n  \
            \  UPDATES_PARTIALLY_COMPLETED"
        nextVersionId:
          type: string
          description: The next Version ID this marker is being moved to
          readOnly: true
          example: 0123456789
        orgId:
          type: string
          description: Org ID that owns this record
          readOnly: true
          example: 0123456789
        errorCode:
          type: string
          description: Error code for failed Asset
          readOnly: true
          example: UPDATES_FAILED
          enum:
          - FORBIDDEN
          - UNSUPPORTED_PROVIDER
          - PROVIDER_LABEL_MISSING
          - UNSUPPORTED_METHOD
          - PROVIDER_INSTANCE_NOT_OF_SAME_ORG
          - RESOURCE_FETCH_FROM_DB_FAILED
          - RESOURCE_FETCH_FROM_UPSTREAM_FAILED
          - RESOURCE_DELETE_FROM_DB_FAILED
          - RESOURCE_SAVE_TO_DB_FAILED
          - RESOURCE_NOT_FOUND
          - RESOURCE_ALREADY_EXISTS
          - AZURE_RESOURCE_NOT_FOUND
          - AZURE_CONNECTION_FAILED
          - AZURE_FAILED_TO_CREATE_NIC
          - AZURE_FAILED_TO_CREATE_PUBLIC_IP
          - AZURE_FAILED_TO_CREATE_RESOURCE_GROUP
          - AZURE_NETWORK_NOT_FOUND
          - AZURE_SUBNET_NOT_FOUND
          - AZURE_VM_NOT_FOUND
          - AZURE_VM_INVALID_POWER_STATE
          - AZURE_VM_INVALID_AGENT_STATE
          - AZURE_QUOTA_EXHAUSTED
          - AZURE_FAILED_TO_GET_USAGE
          - AZURE_FAILED_TO_GET_VM_SIZES
          - AZURE_FAILED_TO_GET_AGENT_STATUS
          - AZURE_FAILED_TO_PROVISION_VM
          - AZURE_FAILED_TO_AllOW_RDP
          - AZURE_FAILED_TO_ALLOW_RDP_AND_ENABLE_RDS
          - AZURE_FAILED_TO_CREATE_SNAPSHOT
          - AZURE_FAILED_TO_DELETE_SNAPSHOT
          - AZURE_FAILED_TO_CREATE_MANAGED_DISK
          - AZURE_FAILED_TO_CREATE_NETWORK_SECURITY_GROUP
          - AZURE_FAILED_TO_DELETE_VM
          - AZURE_FAILED_TO_START_VM
          - AZURE_FAILED_TO_RESTART_VM
          - RETRY_AZURE_FAILED_TO_RESTART_VM
          - AZURE_FAILED_TO_RUN_SYSPREP_ON_VM
          - AZURE_FAILED_TO_DELETE_CUSTOM_SCRIPT_EXTENSION
          - AZURE_FAILED_TO_DEALLOCATE_VM
          - AZURE_FAILED_TO_GENERALIZE_VM
          - AZURE_FAILED_TO_CREATE_SIG
          - AZURE_FAILED_TO_CREATE_IMAGE_IN_SIG
          - AZURE_FAILED_TO_GET_NSG
          - AZURE_FAILED_TO_GET_NIC
          - AZURE_FAILED_TO_INITIATE_SIG_REPLICATION
          - AZURE_FAILED_TO_REPLICATION_IMAGE
          - AZURE_INVALID_SIG_ID_FORMAT
          - AZURE_FAILED_TO_FETCH_SIG_IMAGE_DETAILS
          - AZURE_FAILED_TO_FETCH_SIG_IMAGE_VERSION
          - AZURE_FAILED_TO_COPY_SIG_IMAGE_VERSION
          - AZURE_FAILED_TO_DELETE_SIG_IMAGE_VERSION
          - AZURE_FAILED_TO_DELETE_RESOURCE_GROUP
          - AZURE_FAILED_TO_FETCH_VM_FROM_RESOURCE_GROUP
          - AZURE_FAILED_TO_VERIFY_RESOURCE_GROUP
          - AZURE_VM_GENERATION_NOT_SUPPORTED
          - AZURE_OPERATION_FAILED
          - AZURE_IMAGE_VERSION_DOES_NOT_EXIST
          - INVALID_ORG_ID
          - FAILED_TO_FETCH_LOCATION
          - ORG_LOCATION_NOT_FOUND
          - FAILED_TO_INSTALL_AGENT
          - CONFLICT_CSE
          - RETRY_AGENT_INSTALL
          - GOLDPATTERN_MISSING_FIELDS
          - GOLDPATTERN_INVALID_DATA
          - INVALID_OS_TYPE
          - INVALID_GPU_TYPE
          - IMAGE_DISCOVERY_FAILED
          - IMAGE_DISCOVERY_TIME_OUT
          - PROVIDER_INSTANCE_FETCH_FAILED
          - EDGE_DEPLOYMENT_FETCH_FAILED
          - VERSION_IN_USE
          - MARKER_IN_USE
          - VERSION_IN_USE_AS_CLONE_SOURCE
          - VM_COMPUTE_SKUS_FETCH_FAILED
          - AIMS_IMPORT_CALL_FAILED
          - AIMS_COPY_CALL_FAILED
          - AIMS_CLONE_CALL_FAILED
          - AIMS_PUBLISH_CALL_FAILED
          - AIMS_POST_VALIDATION_CLEANUP_CALL_FAILED
          - AIMS_REPUBLISH_CALL_FAILED
          - AIMS_SHRINK_CALL_FAILED
          - AIMS_DELETE_ASSET_CALL_FAILED
          - AIMS_DELETE_ASSET_FAILED
          - VSPHERE_OPERATION_FAILED
          - VSPHERE_IMAGE_IMPORT_REQUEST_FAILED
          - VSPHERE_IMAGE_PUBLISH_REQUEST_FAILED
          - VSPHERE_IMAGE_REPUBLISH_REQUEST_FAILED
          - VSPHERE_IMAGE_CLONE_REQUEST_FAILED
          - VSPHERE_IMAGE_DELETE_REQUEST_FAILED
          - CREDENTIAL_ID_MISSING
          - CREDENTIALS_FETCH_FAILED
          - CREDENTIAL_CREATION_FAILED
          - CREDENTIALS_NOT_FOUND
          - CREDENTIALS_DELETE_FAILED
          - VALIDATION_FAILED
          - IMAGE_EVENT_VALIDATION_FAILED
          - AGENT_INSTALL_TYPE_NOT_FOUND
          - INVALID_RESOURCE_STATE
          - INVALID_OS_CUSTOMIZATION_OPTION
          - HORIZON_AGENT_FEATURES_MISSING
          - APPLICATION_SCAN_IS_NOT_APPLICABLE
          - APPLICATION_SCAN_DETAILS_MISSING
          - INITIATE_VERSION_PUBLISH_FAILED
          - INITIATE_VERSION_REPUBLISH_FAILED
          - INITIATE_ADD_VERSION_FAILED
          - INITIATE_IMAGE_REPLICATION_FAILED
          - INITIATE_VALIDATE_VERSION_FAILED
          - PUBLISH_WITH_RESILIENCY_NOT_ENABLED
          - PUBLISH_WITH_RESILIENCY_SHOULD_BE_ENABLED
          - INITATE_IMAGE_IMPORT_FAILED
          - CSE_ALREADY_PRESENT_WARNING
          - RESOURCE_CLEANUP_FROM_PROVIDER_FAILED
          - BAD_REQUEST
          - UNSUPPORTED_OPERATION
          - UNSUPPORTED_EXCEPTION
          - UNSUPPORTED_COLLECTION_FOR_LOCATION
          - PERMISSION_MISSING
          - FAILED_TIME_OUT
          - INVALID_REQUEST_FORMAT
          - REQUEST_REJECTED
          - ILLEGAL_SOURCE_TYPE_FOR_GIVEN_PROVIDER
          - IMAGE_ALREADY_EXISTS
          - INVALID_VERSION_TYPE
          - AGENT_PACKAGE_ID_NOT_FOUND
          - AGENT_DETAILS_FETCH_FAILED
          - AGENT_FEATURES_VERIFICATION_FAILED
          - DELETE_STREAM_NOT_SUPPORTED
          - INVALID_SEARCH_USAGE
          - UNKNOWN_EXCEPTION
          - SIMULATED_EXCEPTION
          - MARKER_DELETION_VALIDATION_FAILED
          - MARKER_UPDATION_NOT_SUPPORTED
          - MARKER_MOVEMENT_CALL_FAILED
          - MARKER_MOVEMENT_PARTIALLY_SUCCEEDED
          - VERSION_PATCHING_FAILED
          - INFRA_PREFERENCE_DELETION_NOT_SUPPORTED
          - EDGE_DEPLOYMENT_NOT_FOUND
          - INFRASTRUCTURE_DETAILS_MISSING
          - ADMIN_TEMPLATE_CREATION_CALL_FAILED
          - ADMIN_TEMPLATE_DELETION_CALL_FAILED
          - TEMPLATE_ERROR_EVENT
          - TEMPLATE_ID_NOT_FOUND
          - TEMPLATE_STATUS_NOT_FOUND
          - TEMPLATE_PROVIDER_LABEL_NOT_FOUND
          - TEMPLATE_NO_VM_EXISTS
          - TEMPLATE_FAILED_TO_FETCH_VM
          - HOC_EVENT_FAILURE
          - SOURCE_TARGET_REGION_MISMATCH
          - RBAC_ACCESS_REQUIRED
          - INVALID_TASK_STATUS
          - INVALID_PUBLISH_FLOW_STEP
          - UNSUPPORTED_PROVIDER_INSTANCE
          - VIEW_INTERNAL_ERROR
          - VSPHERE_INTERNAL_ERROR
          - VSPHERE_INTERNAL_SERVER_ERROR
          - VSPHERE_CONNECTION_ERROR
          - VSPHERE_FAILED_TO_PUSH_AGENT_INTO_VM
          - VSPHERE_AGENT_INSTALL_TIMED_OUT
          - VSPHERE_CONCURRENT_TASK_LIMIT_EXCEEDED
          - VSPHERE_TEMPLATE_NOT_FOUND
          - VSPHERE_OPERATION_TIMED_OUT
          - VSPHERE_TASK_CANCELLED
          - VSPHERE_TOOLS_NOT_INSTALLED
          - VSPHERE_TOOLS_NOT_UPDATED
          - VSPHERE_TOOLS_ARE_NOT_RUNNING
          - VSPHERE_PUBLISH_RESOURCE_CONFLICT
          - IMAGE_REPLICATION_FAILED
        errorDetails:
          type: string
          description: Specific error details based on the failure
          readOnly: true
        errorDetailsParameters:
          type: object
          additionalProperties:
            type: string
            description: The parameters for the error detail.
            readOnly: true
          description: The parameters for the error detail.
          readOnly: true
        createdAt:
          type: string
          description: Timestamp of record creation
          format: date-time
          readOnly: true
        updatedAt:
          type: string
          description: Timestamp of last record modification
          format: date-time
          readOnly: true
        templateCount:
          type: integer
          description: Number of templates this marker associated with this marker.
          format: int64
          readOnly: true
    OtherFileType:
      type: object
      properties:
        friendlyName:
          type: string
          description: Friendly name
        type:
          type: string
          description: Type
        value:
          type: string
          description: Value
      description: List of OtherFileTypes
    PageAppDefResultsTO:
      type: object
      properties:
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int32
        pageable:
          $ref: '#/components/schemas/PageableObject'
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: '#/components/schemas/AppDefResultsTO'
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/SortObject'
        first:
          type: boolean
        last:
          type: boolean
        numberOfElements:
          type: integer
          format: int32
        empty:
          type: boolean
    PageableObject:
      type: object
      properties:
        pageNumber:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        offset:
          type: integer
          format: int64
        sort:
          $ref: '#/components/schemas/SortObject'
        paged:
          type: boolean
        unpaged:
          type: boolean
    RegisteredExtensionsRepresentation:
      type: object
      properties:
        otherFileType:
          type: array
          items:
            $ref: '#/components/schemas/OtherFileType'
        extensions:
          type: array
          items:
            $ref: '#/components/schemas/Extension'
    SortObject:
      type: object
      properties:
        empty:
          type: boolean
        sorted:
          type: boolean
        unsorted:
          type: boolean
    InfraPreferenceRequest:
      required:
      - data
      - infraResourceType
      - providerInstanceId
      type: object
      properties:
        providerInstanceId:
          type: string
          description: ProviderInstance ID that identifies the provider and related
            details
        infraResourceType:
          type: string
          description: Defines the infra resource types
          enum:
          - VCENTER
        data:
          type: object
          additionalProperties:
            type: object
            description: Infra resources data
          description: Infra resources data
      description: List of infra preferences per provider.
    InfraPreferencesCreateRequest:
      required:
      - orgId
      - values
      type: object
      properties:
        orgId:
          type: string
          description: Org ID that owns this record
        values:
          type: array
          description: List of infra preferences per provider.
          items:
            $ref: '#/components/schemas/InfraPreferenceRequest'
    AssetDetailsRequest:
      required:
      - data
      - type
      type: object
      properties:
        type:
          type: string
          description: Asset type. Use AZURE_VM_IN_RG when importing VM from Azure
            marketplace. Use AZURE_IMAGE_IN_SIG when importing published image from
            Azure SIG. Use VIEW_VM while importing vSphere Images.
          example: AZURE_VM_IN_RG / AZURE_IMAGE_IN_SIG / VIEW_VM
          enum:
          - AZURE_IMAGE_IN_SIG
          - AZURE_IMAGE_REPLICA_IN_SIG
          - AKKA_IMAGE_IN_RG
          - AZURE_VM_IN_RG
          - AKKA_VM_IN_RG
          - AZURE_IMAGE_IN_RG
          - VSPHERE_MASTER_VM
          - AWS_AMI
          - AWS_WORKSPACE_BUNDLE
          - GCP_IMAGE
          - VIEW_VM
          - VIEW_CUSTOMIZED_VM
          - VIEW_REPLICA_SPECIALIZED
          - VIEW_SPECIALIZED
          - AKKA_MASTER_VM
          - AKKA_CUSTOMIZED_VM
          - AKKA_SPECIALIZED_VM
          - AKKA_REPLICA_SPECIALIZED
        data:
          type: object
          additionalProperties:
            type: object
            description: 'Asset metadata.<br/><br/>Required attributes for source
              type AZURE_MARKET_PLACE and asset type AZURE_VM_IN_RG: licenseType,
              publisher, offer, sku, version, subnet, vnet and vmSize.<br/><br/> Required
              attributes for source type AZURE_CUSTOM_VM and asset type AZURE_VM_IN_RG:
              licenseType, publisher, offer, sku, vmSize, vmName, resourceGroupName.<br/><br/>
              If sourceType is AZURE_CUSTOM_VM, vmName, and resourceGroupName fields
              are used to validate the existence of source VM on given Provider. Upon
              successful validation, the source VM metadata is used to create corresponding
              image and version.<br/><br/> Required attributes for AZURE_IMAGE_IN_SIG:
              galleryAzureADTenantId, galleryImageResourceId.  Optional Attributes:
              mspOrgId, multiSession, isClientAccessLicenseApplicable. <br/><br/>
              If mspOrgId is provided, its used to validate that source image exists
              in MSP Org and to copy source image metadata such as OS, OS type and
              GPU type and application scan data from MSP Org to Customer''s Org for
              target image and version.<br/><br/> Required attributes for source type
              VIEW_IMAGES and asset type VIEW_VM: sourceVmOrTemplateName, vsphereOsType,
              imageDeployType, vmMoValue. Optional Attributes: snapshotMoValue (Required
              if imageDeployType is SNAPSHOT).'
            example:
              licenseType: Windows_Client
              publisher: microsoftwindowsdesktop
              offer: windows-10
              sku: 19h2-evd
              vNet: test_vnet
              subNet: test_vnet_subnet
              vmSize: Standard_D2_v2
              galleryAzureADTenantId: AzureAD-TenantId-Containing-SourceImage
              galleryImageResourceId: Source-SIGImageVersion-AzureResourceId
              mspOrgId: PartnerOrg-CSPOrgId-Containing-SourceImage
              vmName: CustomVM-Name
              resourceGroupName: CustomVM-Resource-Group-Name
              sourceVmOrTemplateName: SourceVmName-Or-TemplateName-From-vCenter
              vsphereOsType: windows9_64Guest
              imageDeployType: TEMPLATE
              vmMoValue: Vm-Mo-Value-From-vCenter
              snapshotMoValue: Snapshot-Mo-Value-From-vCenter
          description: 'Asset metadata.<br/><br/>Required attributes for source type
            AZURE_MARKET_PLACE and asset type AZURE_VM_IN_RG: licenseType, publisher,
            offer, sku, version, subnet, vnet and vmSize.<br/><br/> Required attributes
            for source type AZURE_CUSTOM_VM and asset type AZURE_VM_IN_RG: licenseType,
            publisher, offer, sku, vmSize, vmName, resourceGroupName.<br/><br/> If
            sourceType is AZURE_CUSTOM_VM, vmName, and resourceGroupName fields are
            used to validate the existence of source VM on given Provider. Upon successful
            validation, the source VM metadata is used to create corresponding image
            and version.<br/><br/> Required attributes for AZURE_IMAGE_IN_SIG: galleryAzureADTenantId,
            galleryImageResourceId.  Optional Attributes: mspOrgId, multiSession,
            isClientAccessLicenseApplicable. <br/><br/> If mspOrgId is provided, its
            used to validate that source image exists in MSP Org and to copy source
            image metadata such as OS, OS type and GPU type and application scan data
            from MSP Org to Customer''s Org for target image and version.<br/><br/>
            Required attributes for source type VIEW_IMAGES and asset type VIEW_VM:
            sourceVmOrTemplateName, vsphereOsType, imageDeployType, vmMoValue. Optional
            Attributes: snapshotMoValue (Required if imageDeployType is SNAPSHOT).'
          example:
            licenseType: Windows_Client
            publisher: microsoftwindowsdesktop
            offer: windows-10
            sku: 19h2-evd
            vNet: test_vnet
            subNet: test_vnet_subnet
            vmSize: Standard_D2_v2
            galleryAzureADTenantId: AzureAD-TenantId-Containing-SourceImage
            galleryImageResourceId: Source-SIGImageVersion-AzureResourceId
            mspOrgId: PartnerOrg-CSPOrgId-Containing-SourceImage
            vmName: CustomVM-Name
            resourceGroupName: CustomVM-Resource-Group-Name
            sourceVmOrTemplateName: SourceVmName-Or-TemplateName-From-vCenter
            vsphereOsType: windows9_64Guest
            imageDeployType: TEMPLATE
            vmMoValue: Vm-Mo-Value-From-vCenter
            snapshotMoValue: Snapshot-Mo-Value-From-vCenter
        options:
          $ref: '#/components/schemas/Options'
        vmInfo:
          $ref: '#/components/schemas/VmInfo'
      description: Asset or Image Copy information needed to import the VM or Image
    ImageCatalogRequest:
      required:
      - assetDetails
      - gpuType
      - os
      - osType
      - providerInstanceId
      - providerLabel
      - sourceStreamType
      - streamName
      - versionSource
      - versionType
      type: object
      properties:
        sourceStreamType:
          type: string
          description: Source for the VM
          example: AZURE_MARKET_PLACE / AZURE_SIG / VIEW_IMAGES
          enum:
          - COPIED_FROM_VERSION
          - IMPORTED_VMS
          - AZURE_MARKET_PLACE
          - AKKA_MARKET_PLACE
          - VSPHERE_CATALOG
          - AZURE_SIG
          - AKKA_SIG
          - AZURE_CUSTOM_VM
          - AKKA_CUSTOM_VM
          - UPLOADED
          - AWS_AMIS
          - AWS_WORKSPACE_BUNDLES
          - GCP_IMAGES
          - VIEW_IMAGES
          - AKKA_IMAGES
        streamName:
          pattern: ^[a-zA-Z][a-zA-Z0-9\-]*[a-zA-Z0-9]$
          type: string
          description: Image Name
          example: ExampleImage
        streamDescription:
          type: string
          description: Image Description
          example: Example Description
        versionSource:
          type: string
          description: Version Source is mandatory - this should be set to 0.0 if
            you want version to start from 1.0.0
          example: '0.0'
        versionType:
          type: string
          description: Version Type is mandatory - This along with version source
            decides the version name
          example: MAJOR, MINOR, PATCH
          enum:
          - MAJOR
          - MINOR
          - PATCH
        versionDescription:
          type: string
          description: Description of the version
          example: This is a test version
        providerLabel:
          type: string
          description: ProviderType for this VM
          example: AZURE,AKKA,VSPHERE,AWS,GCP
          enum:
          - AZURE
          - AKKA
          - VSPHERE
          - ZEROCLOUD
          - GCP
          - AWS
          - VIEW
        providerInstanceId:
          type: string
          description: Provider instance id that gives provider specific region details.
            If this is a secondary 'vSphere' provider, then it must be associated
            with a 'view' edge for Image Import to be successful.
        assetDetails:
          $ref: '#/components/schemas/AssetDetailsRequest'
        os:
          type: string
          description: Display name of the OS from image-sources api
        osType:
          type: string
          description: OS type of the image
          example: WINDOWS, LINUX
          enum:
          - WVD
          - SERVER
          - CLIENT
          - WINDOWS
          - LINUX
        gpuType:
          type: string
          description: Indicates if the image is of GPU or a non-GPU type
          example: NONE, AMD, NVIDIA
          enum:
          - NONE
          - AMD
          - NVIDIA
        orgId:
          type: string
          description: Org Id with which this image would be associated.
        projectId:
          type: string
          description: Project ID that owns this record (null if scoped to the Org)
        markers:
          type: array
          description: Markers to be added to the Version.
          items:
            $ref: '#/components/schemas/MarkerTO'
    Options:
      type: object
      properties:
        createPublicIp:
          type: boolean
          description: Enables Public IP for the VM. Not for vSphere providers.
      description: Options supported for this asset
      example: createPublicIP
    VmInfo:
      required:
      - password
      - username
      type: object
      properties:
        username:
          type: string
          description: Admin username for the VM
        password:
          type: array
          description: Admin password for the VM
          items:
            type: string
            description: Admin password for the VM
      description: Admin username/password for the VM. Used while creating/provisioning
        VMs for image preparation.For Azure providers, you have to provide a new username/password
        that you want set for the new imported Vm that you want to customize. For
        vSphere providers, you have to provide the username/password that you already
        set for Source Vm or Source Template.
    AssetDetails:
      required:
      - assetType
      - data
      type: object
      properties:
        assetType:
          type: string
          enum:
          - AZURE_IMAGE_IN_SIG
          - AZURE_IMAGE_REPLICA_IN_SIG
          - AKKA_IMAGE_IN_RG
          - AZURE_VM_IN_RG
          - AKKA_VM_IN_RG
          - AZURE_IMAGE_IN_RG
          - VSPHERE_MASTER_VM
          - AWS_AMI
          - AWS_WORKSPACE_BUNDLE
          - GCP_IMAGE
          - VIEW_VM
          - VIEW_CUSTOMIZED_VM
          - VIEW_REPLICA_SPECIALIZED
          - VIEW_SPECIALIZED
          - AKKA_MASTER_VM
          - AKKA_CUSTOMIZED_VM
          - AKKA_SPECIALIZED_VM
          - AKKA_REPLICA_SPECIALIZED
        data:
          type: object
          additionalProperties:
            type: object
      description: Specific details based on asset type
      example: 'assetType: AzureImageInSIG, assetDetails: galleryName, galleryRG,
        galleryImageDef, galleryVersion and so on '
    ImageCatalogRepresentation:
      type: object
      properties:
        streamId:
          type: string
        streamName:
          type: string
        streamDescription:
          type: string
        os:
          type: string
        sourceStreamType:
          type: string
          enum:
          - COPIED_FROM_VERSION
          - IMPORTED_VMS
          - AZURE_MARKET_PLACE
          - AKKA_MARKET_PLACE
          - VSPHERE_CATALOG
          - AZURE_SIG
          - AKKA_SIG
          - AZURE_CUSTOM_VM
          - AKKA_CUSTOM_VM
          - UPLOADED
          - AWS_AMIS
          - AWS_WORKSPACE_BUNDLES
          - GCP_IMAGES
          - VIEW_IMAGES
          - AKKA_IMAGES
        streamStatus:
          type: string
          enum:
          - AVAILABLE
          - DELETING
          - DISABLED
          - FAILED
          - IN_PROGRESS
          - PARTIALLY_AVAILABLE
          - IMPORT_COMPLETE
          - PENDING
        sourceStreamId:
          type: string
        sourceVersionId:
          type: string
        versionId:
          type: string
        versionSource:
          type: string
        versionName:
          type: string
        versionDescription:
          type: string
        versionStatus:
          type: string
          enum:
          - AVAILABLE
          - DELETING
          - DISABLED
          - FAILED
          - IMPORT_IN_PROGRESS
          - PUBLISH_IN_PROGRESS
          - REPLICATION_IN_PROGRESS
          - VALIDATION_IN_PROGRESS
          - PARTIALLY_AVAILABLE
          - IMPORT_COMPLETE
          - PENDING
          - FAILED_UNRECOVERABLE
          - VALIDATION_FAILED
          - SHRINK_IN_PROGRESS
        versionType:
          type: string
          enum:
          - MAJOR
          - MINOR
          - PATCH
        versionHistory:
          type: array
          items:
            type: string
        assetId:
          type: string
        sourceAssetId:
          type: string
        assetStatus:
          type: string
          enum:
          - AVAILABLE
          - COPYING_IMAGE
          - DELETING
          - DEPLOYING_VM
          - INSTALLING_AGENTS
          - ALLOW_RDP_FAILED
          - ENABLING_RDS_AND_ALLOW_RDP_FAILED
          - RESTARTING_VM
          - SHUTTING_DOWN_VM
          - IMPORT_PENDING
          - IMPORT_COMPLETE
          - IMPORT_FAILED
          - CLONE_FAILED
          - AGENT_INSTALLATION_FAILED
          - GENERALIZING
          - GENERALIZING_FAILED
          - SYSPREPING
          - SYSPREP_FAILED
          - CAPTURING_AND_UPLOADING_IMAGE_TO_SIG
          - CAPTURE_AND_IMAGE_UPLOAD_FAILED
          - VALIDATION_IN_PROGRESS
          - VALIDATION_FAILED
          - SCANNING_APPS
          - REPLICATING
          - PUBLISH_IN_PROGRESS
          - PUBLISH_COMPLETE
          - PUBLISH_FAILED
          - PUBLISH_BACKUP_IN_PROGRESS
          - PUBLISH_BACKUP_FAILED
          - PUBLISH_BACKUP_VM_VALIDATION_IN_PROGRESS
          - PUBLISH_BACKUP_VM_VALIDATION_FAILED
          - PUBLISH_CLEANUP_IN_PROGRESS
          - PUBLISH_CLEANUP_FAILED
          - IMPORT_FAILED_TIMEOUT
          - IMPORT_RETRY_PENDING
          - PUBLISH_RETRY_PENDING
          - DELETION_FAILED
          - DELETION_RETRY_PENDING
          - REPLICATION_FAILED
          - REPLICATION_FAILED_TIMEOUT
          - REPLICATION_COMPLETE
          - REPLICATION_PENDING
          - DISABLED
          - SHRINK_IN_PROGRESS
          - SHRINK_FAILED
          - SHRINK_TIMEOUT
          - VIEW_SYNC_IN_PROGRESS
          - VIEW_SYNC_FAILED
          - VIEW_SYNC_TIMEOUT
        assetType:
          type: string
          enum:
          - AZURE_IMAGE_IN_SIG
          - AZURE_IMAGE_REPLICA_IN_SIG
          - AKKA_IMAGE_IN_RG
          - AZURE_VM_IN_RG
          - AKKA_VM_IN_RG
          - AZURE_IMAGE_IN_RG
          - VSPHERE_MASTER_VM
          - AWS_AMI
          - AWS_WORKSPACE_BUNDLE
          - GCP_IMAGE
          - VIEW_VM
          - VIEW_CUSTOMIZED_VM
          - VIEW_REPLICA_SPECIALIZED
          - VIEW_SPECIALIZED
          - AKKA_MASTER_VM
          - AKKA_CUSTOMIZED_VM
          - AKKA_SPECIALIZED_VM
          - AKKA_REPLICA_SPECIALIZED
        assetDetails:
          $ref: '#/components/schemas/AssetDetails'
        orgId:
          type: string
        projectId:
          type: string
        markers:
          type: array
          items:
            $ref: '#/components/schemas/MarkerTO'
    VersionCreateTO:
      required:
      - assetDetails
      - description
      - gpuType
      - orgId
      - os
      - osType
      - providerInstanceId
      - providerLabel
      - sourceType
      - versionType
      type: object
      properties:
        orgId:
          type: string
          description: Org Id
        sourceVersionId:
          type: string
          description: Source Version used for creating new version. Its needed when
            versionType is MINOR
        versionType:
          type: string
          description: Version Type of new Version. Only Major and Minor are supported
            currently. Version type and version number of source decides the new version
            number.
          example: MAJOR, MINOR
          enum:
          - MAJOR
          - MINOR
          - PATCH
        description:
          type: string
          description: Description of new Version.
        sourceType:
          type: string
          description: Source type of new Version.
          example: AZURE_SIG / AZURE_CUSTOM_VM
          enum:
          - COPIED_FROM_VERSION
          - IMPORTED_VMS
          - AZURE_MARKET_PLACE
          - AKKA_MARKET_PLACE
          - VSPHERE_CATALOG
          - AZURE_SIG
          - AKKA_SIG
          - AZURE_CUSTOM_VM
          - AKKA_CUSTOM_VM
          - UPLOADED
          - AWS_AMIS
          - AWS_WORKSPACE_BUNDLES
          - GCP_IMAGES
          - VIEW_IMAGES
          - AKKA_IMAGES
        osType:
          type: string
          description: OS type of the image. It must match the OS Type of Image.
          example: WINDOWS, LINUX
          enum:
          - WVD
          - SERVER
          - CLIENT
          - WINDOWS
          - LINUX
        os:
          type: string
          description: Display name of the OS from image-sources api
        gpuType:
          type: string
          description: Indicates if the new version is of GPU or a non-GPU type. It
            must match the GPU type of Image.
          example: NONE, AMD, NVIDIA
          enum:
          - NONE
          - AMD
          - NVIDIA
        providerLabel:
          type: string
          description: ProviderType for this VM
          example: AZURE,AKKA,VSPHERE,GCP,AWS
          enum:
          - AZURE
          - AKKA
          - VSPHERE
          - ZEROCLOUD
          - GCP
          - AWS
          - VIEW
        providerInstanceId:
          type: string
          description: Provider instance id that gives provider specific region details
        assetDetails:
          $ref: '#/components/schemas/AssetDetailsRequest'
        markers:
          type: array
          description: Markers to be added to the Version.
          items:
            $ref: '#/components/schemas/MarkerTO'
        projectId:
          type: string
          description: Project ID that owns this record (null if scoped to the Org)
          example: 12345678-1234-1234-1234-123456789000
    VersionCreateResponseTO:
      type: object
      properties:
        orgId:
          type: string
        projectId:
          type: string
        imageId:
          type: string
        imageName:
          type: string
        imageDescription:
          type: string
        sourceImageType:
          type: string
          enum:
          - COPIED_FROM_VERSION
          - IMPORTED_VMS
          - AZURE_MARKET_PLACE
          - AKKA_MARKET_PLACE
          - VSPHERE_CATALOG
          - AZURE_SIG
          - AKKA_SIG
          - AZURE_CUSTOM_VM
          - AKKA_CUSTOM_VM
          - UPLOADED
          - AWS_AMIS
          - AWS_WORKSPACE_BUNDLES
          - GCP_IMAGES
          - VIEW_IMAGES
          - AKKA_IMAGES
        imageStatus:
          type: string
          enum:
          - AVAILABLE
          - DELETING
          - DISABLED
          - FAILED
          - IN_PROGRESS
          - PARTIALLY_AVAILABLE
          - IMPORT_COMPLETE
          - PENDING
        sourceImageId:
          type: string
        sourceVersionId:
          type: string
        sourceVersionName:
          type: string
        versionId:
          type: string
        versionName:
          type: string
        versionDescription:
          type: string
        versionStatus:
          type: string
          enum:
          - AVAILABLE
          - DELETING
          - DISABLED
          - FAILED
          - IMPORT_IN_PROGRESS
          - PUBLISH_IN_PROGRESS
          - REPLICATION_IN_PROGRESS
          - VALIDATION_IN_PROGRESS
          - PARTIALLY_AVAILABLE
          - IMPORT_COMPLETE
          - PENDING
          - FAILED_UNRECOVERABLE
          - VALIDATION_FAILED
          - SHRINK_IN_PROGRESS
        versionType:
          type: string
          enum:
          - MAJOR
          - MINOR
          - PATCH
        versionHistory:
          type: array
          items:
            type: string
        assetId:
          type: string
        sourceAssetId:
          type: string
        assetStatus:
          type: string
          enum:
          - AVAILABLE
          - COPYING_IMAGE
          - DELETING
          - DEPLOYING_VM
          - INSTALLING_AGENTS
          - ALLOW_RDP_FAILED
          - ENABLING_RDS_AND_ALLOW_RDP_FAILED
          - RESTARTING_VM
          - SHUTTING_DOWN_VM
          - IMPORT_PENDING
          - IMPORT_COMPLETE
          - IMPORT_FAILED
          - CLONE_FAILED
          - AGENT_INSTALLATION_FAILED
          - GENERALIZING
          - GENERALIZING_FAILED
          - SYSPREPING
          - SYSPREP_FAILED
          - CAPTURING_AND_UPLOADING_IMAGE_TO_SIG
          - CAPTURE_AND_IMAGE_UPLOAD_FAILED
          - VALIDATION_IN_PROGRESS
          - VALIDATION_FAILED
          - SCANNING_APPS
          - REPLICATING
          - PUBLISH_IN_PROGRESS
          - PUBLISH_COMPLETE
          - PUBLISH_FAILED
          - PUBLISH_BACKUP_IN_PROGRESS
          - PUBLISH_BACKUP_FAILED
          - PUBLISH_BACKUP_VM_VALIDATION_IN_PROGRESS
          - PUBLISH_BACKUP_VM_VALIDATION_FAILED
          - PUBLISH_CLEANUP_IN_PROGRESS
          - PUBLISH_CLEANUP_FAILED
          - IMPORT_FAILED_TIMEOUT
          - IMPORT_RETRY_PENDING
          - PUBLISH_RETRY_PENDING
          - DELETION_FAILED
          - DELETION_RETRY_PENDING
          - REPLICATION_FAILED
          - REPLICATION_FAILED_TIMEOUT
          - REPLICATION_COMPLETE
          - REPLICATION_PENDING
          - DISABLED
          - SHRINK_IN_PROGRESS
          - SHRINK_FAILED
          - SHRINK_TIMEOUT
          - VIEW_SYNC_IN_PROGRESS
          - VIEW_SYNC_FAILED
          - VIEW_SYNC_TIMEOUT
        assetType:
          type: string
          enum:
          - AZURE_IMAGE_IN_SIG
          - AZURE_IMAGE_REPLICA_IN_SIG
          - AKKA_IMAGE_IN_RG
          - AZURE_VM_IN_RG
          - AKKA_VM_IN_RG
          - AZURE_IMAGE_IN_RG
          - VSPHERE_MASTER_VM
          - AWS_AMI
          - AWS_WORKSPACE_BUNDLE
          - GCP_IMAGE
          - VIEW_VM
          - VIEW_CUSTOMIZED_VM
          - VIEW_REPLICA_SPECIALIZED
          - VIEW_SPECIALIZED
          - AKKA_MASTER_VM
          - AKKA_CUSTOMIZED_VM
          - AKKA_SPECIALIZED_VM
          - AKKA_REPLICA_SPECIALIZED
        assetDetails:
          $ref: '#/components/schemas/AssetDetails'
        markers:
          type: array
          items:
            $ref: '#/components/schemas/MarkerTO'
        sourceType:
          type: string
          enum:
          - COPIED_FROM_VERSION
          - IMPORTED_VMS
          - AZURE_MARKET_PLACE
          - AKKA_MARKET_PLACE
          - VSPHERE_CATALOG
          - AZURE_SIG
          - AKKA_SIG
          - AZURE_CUSTOM_VM
          - AKKA_CUSTOM_VM
          - UPLOADED
          - AWS_AMIS
          - AWS_WORKSPACE_BUNDLES
          - GCP_IMAGES
          - VIEW_IMAGES
          - AKKA_IMAGES
    ApplicationScanDetailsTO:
      type: object
      properties:
        infrastructureResourceList:
          type: array
          description: vNet, subnet, cidr details used for studio template VMs
          example:
            kind: subnets
            id: /subscriptions/xxx/resourceGroups/xxx/providers/Microsoft.Network/virtualNetworks/xxx/subnets/xxx
            data:
              parent: /subscriptions/xxx/resourceGroups/xxx/providers/Microsoft.Network/virtualNetworks/xxx
              name: xxx
              cidr: xxx.xx.x.x/xx
          items:
            $ref: '#/components/schemas/InfrastructureResource'
      description: Details like subnet infrastructure kind are needed to deploy a
        studio template to achieve application scan
    ApplicationScanTO:
      type: object
      properties:
        enableAppScan:
          type: boolean
          description: Application Scan is triggered if this flag is set to true.
        appScanDetails:
          $ref: '#/components/schemas/ApplicationScanDetailsTO'
      description: This option if enabled scans the image for all installed applications
    HorizonAgentTO:
      type: object
      properties:
        agentPackageId:
          type: string
          description: This Agent Package will be installed on image if provided
        installHorizonAgent:
          type: boolean
          description: Horizon agent is installed if this flag is set to true.
        features:
          type: array
          description: Agent features specified by customer to be installed
          example:
          - AvAgentInstall
          - PrintRedir
          items:
            type: string
            description: Agent features specified by customer to be installed
            example: '["AvAgentInstall","PrintRedir"]'
      description: This option lists of Horizon Agent that is used for management
        of desktops in a pool
    InfrastructureResource:
      required:
      - id
      - kind
      type: object
      properties:
        kind:
          type: string
        id:
          type: string
        infrastructureLinks:
          type: object
          additionalProperties:
            type: object
        data:
          type: object
          additionalProperties:
            type: object
      description: Infrastructure Resources needed by the Edge Deployment such as
        `managementNetwork`
    InfrastructureResourceDetailsTO:
      type: object
      properties:
        infrastructureResourceList:
          type: array
          description: vNet, subnet, cidr details used for studio template VMs
          example:
            kind: subnets
            id: /subscriptions/xxx/resourceGroups/xxx/providers/Microsoft.Network/virtualNetworks/xxx/subnets/xxx
            data:
              parent: /subscriptions/xxx/resourceGroups/xxx/providers/Microsoft.Network/virtualNetworks/xxx
              name: xxx
              cidr: xxx.xx.x.x/xx
          items:
            $ref: '#/components/schemas/InfrastructureResource'
      description: InfraResource details needed to create templates for image validation
    OptionsTO:
      type: object
      properties:
        horizonAgent:
          $ref: '#/components/schemas/HorizonAgentTO'
        applicationScan:
          $ref: '#/components/schemas/ApplicationScanTO'
        osCustomizations:
          type: array
          description: This option lists the customizations that can be performed
            on the imported VM
          example:
          - DisableWindowsUpdate
          items:
            type: string
            description: This option lists the customizations that can be performed
              on the imported VM
            example: '["DisableWindowsUpdate"]'
            enum:
            - DisableWindowsUpdate
            - RemoveAppXPackages
        publishWithResiliency:
          type: boolean
          description: Flag to indicate whether to enable Resiliency during Image
            Publish. If enabled, a backup VM would be created and the same can be
            used in case of un-recoverable errors during Image Publish.
          example: false
        validateImage:
          type: boolean
          description: This option can be used to enable or disable image validation
            during version publish
          example: false
        validationInfraResourceDetails:
          $ref: '#/components/schemas/InfrastructureResourceDetailsTO'
      description: 'Optional operations like installing agents, customizing the os,
        scanning for applications can be specified to be performed as part of publish '
    ReplicasTO:
      required:
      - providerInstanceId
      type: object
      properties:
        providerInstanceId:
          type: string
          description: id of the provider instance to create desktop vms. For Azure
            provider instance, it would point to subscription, service principal details
            and so on
      description: ReplicasTO of the image
    VersionPublishCreateTO:
      required:
      - providerLabel
      type: object
      properties:
        providerLabel:
          type: string
          description: Provider label where the image is published
          enum:
          - AZURE
          - AKKA
          - VSPHERE
          - ZEROCLOUD
          - GCP
          - AWS
          - VIEW
        description:
          type: string
          description: Description for this version
          example: Test version
        options:
          $ref: '#/components/schemas/OptionsTO'
        replicas:
          type: array
          description: ReplicasTO of the image
          items:
            $ref: '#/components/schemas/ReplicasTO'
        orgId:
          type: string
          description: Org Id with which this image would be associated.
        projectId:
          type: string
          description: Project ID that owns this record (null if scoped to the Org)
          example: 12345678-1234-1234-1234-123456789000
    VersionPublishTO:
      type: object
      properties:
        orgId:
          type: string
          description: Org ID that the published image belongs to
        versionName:
          type: string
          description: Version name.
          example: 1.0, 1.1.1
        versionId:
          type: string
          description: Id of the version that is being published
          readOnly: true
          example: 0123456789
        versionStatus:
          type: string
          description: Indicates the status of the version based on its stage in publish
            workflow
          example: AVAILABLE
          enum:
          - AVAILABLE
          - DELETING
          - DISABLED
          - FAILED
          - IMPORT_IN_PROGRESS
          - PUBLISH_IN_PROGRESS
          - REPLICATION_IN_PROGRESS
          - VALIDATION_IN_PROGRESS
          - PARTIALLY_AVAILABLE
          - IMPORT_COMPLETE
          - PENDING
          - FAILED_UNRECOVERABLE
          - VALIDATION_FAILED
          - SHRINK_IN_PROGRESS
          - "AVAILABLE,\n    DELETING,\n    FAILED,\n    IMPORT_IN_PROGRESS,\n   \
            \ PUBLISH_IN_PROGRESS,\n    REPLICATION_IN_PROGRESS,\n    PARTIALLY_AVAILABLE,\n\
            \    IMPORT_COMPLETE,\n    PENDING,\n    DISABLED"
        description:
          type: string
          description: Description for this version
          example: Test version
        options:
          $ref: '#/components/schemas/OptionsTO'
        replicas:
          type: array
          description: ReplicasTO of the image
          items:
            $ref: '#/components/schemas/ReplicasTO'
        projectId:
          type: string
          description: Project ID that owns this image (null if scoped to the Org)
          example: 0123456789
    VersionValidationTO:
      required:
      - orgId
      - validationInfraResourceDetails
      type: object
      properties:
        orgId:
          type: string
          description: Org Id
        validationInfraResourceDetails:
          $ref: '#/components/schemas/InfrastructureResourceDetailsTO'
    Agent:
      type: object
      properties:
        name:
          type: string
          description: Name of the agent to be installed
          readOnly: true
        agentVersion:
          type: string
          description: Version of the agent to be installed
          readOnly: true
        type:
          type: string
          description: Agent type
          readOnly: true
          example: HAI, NSX, AV, etc
        details:
          type: object
          additionalProperties:
            type: object
            description: Specific details of each agent necessary for installation
              on the image
            example: features -> [PRINTREDIR, USB]
          description: Specific details of each agent necessary for installation on
            the image
          example: features -> [PRINTREDIR, USB]
      description: Agents to be installed on the asset
      readOnly: true
    VersionOptions:
      type: object
      properties:
        osCustomizations:
          type: array
          description: OS Customizations performed on the image
          example: DisableWindowsUpdate
          items:
            type: string
            description: OS Customizations performed on the image
            example: DisableWindowsUpdate
            enum:
            - DisableWindowsUpdate
            - RemoveAppXPackages
        agents:
          type: array
          description: Agents to be installed on the image
          items:
            $ref: '#/components/schemas/Agent'
        publishWithResiliency:
          type: boolean
          description: Flag to indicate whether to enable Resiliency during Image
            Publish. If enabled, a backup VM would be created and the same can be
            used in case of un-recoverable errors during Image Publish.
          example: false
        validateImage:
          type: boolean
          description: Image validation option.
          example: false
        agentInstallationType:
          type: string
          description: Agent installation type to indicate if agent was installed
            during publish or skipped (manual install).
          example: WITH_PUBLISH, MANUAL
          enum:
          - WITH_PUBLISH
          - MANUAL
        agentFeaturesManuallyUpdated:
          type: boolean
          description: Flag to indicate if agent features were manually updated (in
            case agent was manually installed).
          example: false
      description: options performed on image
      readOnly: true
    VersionTO:
      type: object
      properties:
        id:
          type: string
          description: Unique record ID
          readOnly: true
          example: 0123456789
        streamId:
          type: string
          description: Stream id that this version belong to.
          readOnly: true
          example: 0123456789
        orgId:
          type: string
          description: Org ID that owns this record
          readOnly: true
          example: 0123456789
        name:
          type: string
          description: Version name
          readOnly: true
        description:
          type: string
          description: Description of this version of the image
        os:
          type: string
          description: OS name for this version. If this value is null at version
            level, value from Image can be referred.
          readOnly: true
        sourceVersionId:
          type: string
          description: Indicates the specific version in the current stream that was
            used to create this version if any
        state:
          type: string
          description: Indicates state of the version
          readOnly: true
          example: PUBLISHED
          enum:
          - NOT_READY
          - UNPUBLISHED
          - PARTIALLY_PUBLISHED
          - PUBLISHED
        versionHistory:
          type: array
          description: Indicates lineage of all versions preceding this version
          readOnly: true
          example:
          - 1.0.0
          - 2.0.0
          items:
            type: string
            description: Indicates lineage of all versions preceding this version
            readOnly: true
            example: '["1.0.0","2.0.0"]'
        status:
          type: string
          description: Indicates the status of the version based on its stage in import
            or publish workflow
          example: AVAILABLE
          enum:
          - AVAILABLE
          - DELETING
          - DISABLED
          - FAILED
          - IMPORT_IN_PROGRESS
          - PUBLISH_IN_PROGRESS
          - REPLICATION_IN_PROGRESS
          - VALIDATION_IN_PROGRESS
          - PARTIALLY_AVAILABLE
          - IMPORT_COMPLETE
          - PENDING
          - FAILED_UNRECOVERABLE
          - VALIDATION_FAILED
          - SHRINK_IN_PROGRESS
          - "AVAILABLE,\n    DELETING,\n    FAILED,\n    IMPORT_IN_PROGRESS,\n   \
            \ PUBLISH_IN_PROGRESS,\n    REPLICATION_IN_PROGRESS,\n    PARTIALLY_AVAILABLE,\n\
            \    IMPORT_COMPLETE,\n    PENDING,\n    DISABLED"
        lastTriggeredAction:
          type: string
          description: Indicates the last action performed on the version
          example: IMPORT
          enum:
          - IMPORT
          - IMPORT_CUSTOM_VM
          - CLONE
          - COPY_EXISTING_IMAGE
          - PUBLISH
          - DELETE
          - UNPUBLISH
          - SHRINK
          - USE_EXISTING_IMAGE
          - ADD_VERSION_FROM_COPIED_IMAGE
          - ADD_VERSION_FROM_CUSTOM_VM
          - "IMPORT,\n    CLONE,\n    PUBLISH,\n    DELETE,\n    UNPUBLISH"
        options:
          $ref: '#/components/schemas/VersionOptions'
        createdAt:
          type: string
          description: Timestamp of record creation
          format: date-time
          readOnly: true
        updatedAt:
          type: string
          description: Timestamp of last record modification
          format: date-time
          readOnly: true
        version:
          type: integer
          description: Record version (internal)
          format: int64
          readOnly: true
        markers:
          type: array
          description: Markers associated with Version
          readOnly: true
          items:
            $ref: '#/components/schemas/MarkerTO'
        versionType:
          type: string
          description: Indicates version type
          readOnly: true
          example: MAJOR
          enum:
          - MAJOR
          - MINOR
          - PATCH
          - "MAJOR,\n    MINOR,\n    PATCH"
        versionValidationDetails:
          $ref: '#/components/schemas/VersionValidationDetails'
        sourceType:
          type: string
          description: Indicates source type of the version. This can be blank.
          readOnly: true
          example: AZURE_MARKET_PLACE
          enum:
          - COPIED_FROM_VERSION
          - IMPORTED_VMS
          - AZURE_MARKET_PLACE
          - AKKA_MARKET_PLACE
          - VSPHERE_CATALOG
          - AZURE_SIG
          - AKKA_SIG
          - AZURE_CUSTOM_VM
          - AKKA_CUSTOM_VM
          - UPLOADED
          - AWS_AMIS
          - AWS_WORKSPACE_BUNDLES
          - GCP_IMAGES
          - VIEW_IMAGES
          - AKKA_IMAGES
        providerLabels:
          uniqueItems: true
          type: array
          description: Indicates Provider labels where the version is published
          readOnly: true
          example:
          - AZURE
          - VSPHERE
          items:
            type: string
            description: Indicates Provider labels where the version is published
            readOnly: true
            example: '["AZURE","VSPHERE"]'
        projectId:
          type: string
          description: Project ID that owns this image (null if scoped to the Org)
          readOnly: true
          example: 0123456789
    VersionValidationDetails:
      type: object
      properties:
        validationStatus:
          type: string
          enum:
          - INITIATED
          - IN_PROGRESS
          - SUCCESS
          - FAILED
        studioTemplateId:
          type: string
        studioTemplateName:
          type: string
        studioTemplateStatus:
          type: string
        details:
          type: object
          additionalProperties:
            type: object
        errorDetails:
          type: string
        errorDetailsParameters:
          type: object
          additionalProperties:
            type: string
        onDemandValidation:
          type: boolean
      description: Version validation details (optional)
      readOnly: true
    ShrinkImageVersionRequest:
      required:
      - replicas
      type: object
      properties:
        orgId:
          type: string
          description: Org ID that the published image belongs to
        replicas:
          type: array
          description: ReplicasTo List to be shrank
          items:
            $ref: '#/components/schemas/ReplicasTO'
    VersionRepublishCreateTO:
      type: object
      properties:
        orgId:
          type: string
          description: Org ID
        additionalReplicas:
          type: array
          description: Additional ReplicasTO of the image. Optional and is used to
            expand image to new provider instances.
          items:
            $ref: '#/components/schemas/ReplicasTO'
    HorizonAgentV2TO:
      type: object
      properties:
        agentPackageId:
          type: string
          description: This Agent Package will be installed on image if provided
        features:
          type: array
          description: Agent features specified by customer to be installed
          example:
          - AvAgentInstall
          - PrintRedir
          items:
            type: string
            description: Agent features specified by customer to be installed
            example: '["AvAgentInstall","PrintRedir"]'
      description: This option lists of Horizon Agent that is used for management
        of desktops in a pool
    ProviderDataTO:
      type: object
      properties:
        horizonAgent:
          $ref: '#/components/schemas/HorizonAgentV2TO'
        cloneType:
          type: string
          description: This option is to specify the clone type of the image VM. It
            is required for vSphere providers connected to a View Edge.
          example: FULL_CLONE, INSTANT_CLONE
          enum:
          - FULL_CLONE
          - INSTANT_CLONE
        viewImageType:
          type: string
          description: This option is to specify the image type. It is required for
            vSphere providers connected to a View Edge.
          example: VDI_DESKTOP, RDSH_DESKTOP, RDSH_APPS
          enum:
          - VDI_DESKTOP
          - RDSH_DESKTOP
          - RDSH_APPS
      description: Optional operations like installing agents, customizing the os,
        scanning for applications can be specified to be performed as part of publish
    TargetProviderTO:
      required:
      - providerInstanceId
      - providerLabel
      type: object
      properties:
        providerInstanceId:
          type: string
          description: id of the provider instance to create desktop vms. For Azure
            provider instance, it would point to subscription, service principal details
            and so on
        providerLabel:
          type: string
          description: Provider label where the image is published
          example: VSPHERE
          enum:
          - AZURE
          - AKKA
          - VSPHERE
          - ZEROCLOUD
          - GCP
          - AWS
          - VIEW
        providerData:
          $ref: '#/components/schemas/ProviderDataTO'
      description: List of target providers
    VersionPublishV2CreateTO:
      type: object
      properties:
        orgId:
          type: string
          description: Org Id with which this image would be associated.
        description:
          type: string
          description: Description for this version
          example: Test version
        installAgent:
          type: boolean
          description: Horizon agent is installed if this flag is set to true.
        targetProviders:
          type: array
          description: List of target providers
          items:
            $ref: '#/components/schemas/TargetProviderTO'
        projectId:
          type: string
          description: Project ID that owns this record (null if scoped to the Org)
          example: 12345678-1234-1234-1234-123456789000
    VersionPublishV2TO:
      type: object
      properties:
        orgId:
          type: string
          description: Org ID that the published image belongs to
        versionName:
          type: string
          description: Version name.
          example: 1.0, 1.1.1
        versionId:
          type: string
          description: Id of the version that is being published
          readOnly: true
          example: 0123456789
        versionStatus:
          type: string
          description: Indicates the status of the version based on its stage in publish
            workflow
          example: AVAILABLE
          enum:
          - AVAILABLE
          - DELETING
          - DISABLED
          - FAILED
          - IMPORT_IN_PROGRESS
          - PUBLISH_IN_PROGRESS
          - REPLICATION_IN_PROGRESS
          - VALIDATION_IN_PROGRESS
          - PARTIALLY_AVAILABLE
          - IMPORT_COMPLETE
          - PENDING
          - FAILED_UNRECOVERABLE
          - VALIDATION_FAILED
          - SHRINK_IN_PROGRESS
          - "AVAILABLE,\n    DELETING,\n    FAILED,\n    IMPORT_IN_PROGRESS,\n   \
            \ PUBLISH_IN_PROGRESS,\n    REPLICATION_IN_PROGRESS,\n    PARTIALLY_AVAILABLE,\n\
            \    IMPORT_COMPLETE,\n    PENDING,\n    DISABLED"
        description:
          type: string
          description: Description for this version
          example: Test version
        installAgent:
          type: boolean
          description: Horizon agent is installed if this flag is set to true.
        publishWithResiliency:
          type: boolean
          description: Optional flag to indicate whether to enable Resiliency during
            Image Publish on Azure providers. If enabled, a backup VM would be created
            and the same can be used in case of un-recoverable errors during Image
            Publish. This is ignored for vSphere providers
          example: false
        validateImage:
          type: boolean
          description: This optional flag can be used to enable or disable image validation
            during version publish on Azure providers. This is ignored for vSphere
            providers
          example: false
        osCustomization:
          type: array
          description: This option lists the customizations that can be performed
            on the imported VM. This is ignored for vSphere providers
          example:
          - DisableWindowsUpdate
          items:
            type: string
            description: This option lists the customizations that can be performed
              on the imported VM. This is ignored for vSphere providers
            example: '["DisableWindowsUpdate"]'
            enum:
            - DisableWindowsUpdate
            - RemoveAppXPackages
        targetProviders:
          type: array
          description: List of target providers
          items:
            $ref: '#/components/schemas/TargetProviderTO'
        projectId:
          type: string
          description: Project ID that owns this record (null if scoped to the Org)
          example: 12345678-1234-1234-1234-123456789000
    CloneAssetDetailsRequest:
      required:
      - type
      type: object
      properties:
        data:
          type: object
          additionalProperties:
            type: object
            description: 'Asset metadata. Required attributes for Azure: subnet and
              vnet. Required attributes for View: None'
            example:
              vNet: test_vnet
              subNet: test_vnet_subnet
          description: 'Asset metadata. Required attributes for Azure: subnet and
            vnet. Required attributes for View: None'
          example:
            vNet: test_vnet
            subNet: test_vnet_subnet
        type:
          type: string
          description: Asset type to identify type of data available in data map for
            clone request.
          example: AZURE_NETWORK_RESOURCE
          enum:
          - AZURE_NETWORK_RESOURCE
          - AKKA_NETWORK_RESOURCE
          - VIEW_INFRA_RESOURCE
        options:
          $ref: '#/components/schemas/Options'
      description: Asset information needed to create VM from existing images.
    VersionCloneCreateTO:
      required:
      - assetDetails
      - orgId
      - versionDescription
      - versionType
      type: object
      properties:
        orgId:
          type: string
          description: Org Id
        imageName:
          pattern: ^[a-zA-Z][a-zA-Z0-9\-]*[a-zA-Z0-9]$
          type: string
          description: Image Name, this is mandatory only when cloning as a new Image
            from existing Version. It can contain letters [a-Z], numbers, and dashes.
            It can not start or end with non-alphabetic characters. For cloning as
            a new version, Image name remains same as parent image and should not
            be sent explicitly.
        imageDescription:
          type: string
          description: Image Description, this is mandatory only when cloning new
            Image from existing Version.
        versionDescription:
          type: string
          description: Description of new Version.
        versionType:
          type: string
          description: Version Type is mandatory. It should be passed as MAJOR when
            creating new Image from existing version, if you want version to start
            from 1.0.0
          example: MAJOR, MINOR
          enum:
          - MAJOR
          - MINOR
          - PATCH
        assetDetails:
          $ref: '#/components/schemas/CloneAssetDetailsRequest'
        markers:
          type: array
          description: Markers to be added to the Version.
          items:
            $ref: '#/components/schemas/MarkerTO'
    AppInventoryRequest:
      required:
      - networks
      - providerInstanceId
      - providerLabel
      type: object
      properties:
        providerLabel:
          type: string
          enum:
          - AZURE
          - AKKA
          - VSPHERE
          - ZEROCLOUD
          - GCP
          - AWS
          - VIEW
        providerInstanceId:
          type: string
        networks:
          type: array
          items:
            $ref: '#/components/schemas/InfrastructureResource'
        orgId:
          type: string
          description: OrgId is required for non-customer CSP token
    AppInventoryRepresentation:
      type: object
      properties:
        id:
          type: string
        orgId:
          type: string
        streamId:
          type: string
        versionId:
          type: string
        status:
          type: string
          enum:
          - WAITING_FOR_PUBLISH
          - IN_PROGRESS
          - FAILED_PUBLISH_FAILURE
          - FAILED
          - TEMPLATE_CREATION_IN_PROGRESS
          - TEMPLATE_CREATION_TIMED_OUT
          - GET_APPLICATIONS_IN_PROGRESS
          - GET_APPLICATIONS_TIMED_OUT
          - GET_ICONS_SCHEDULED
          - GET_ICONS_IN_PROGRESS
          - GET_ICONS_TIMED_OUT
          - AVAILABLE
        details:
          type: object
          additionalProperties:
            type: object
        templateId:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        errorCode:
          type: string
          enum:
          - FORBIDDEN
          - APP_INVENTORY_NOT_FOUND
          - APP_INVENTORY_SCAN_IN_PROGRESS
          - APP_INVENTORY_TIME_OUT
          - APP_INVENTORY_TIME_OUT_FOR_ICONS
          - UNSUPPORTED_PROVIDER
          - ADMIN_TEMPLATE_CREATION_CALL_FAILED
          - ADMIN_TEMPLATE_DELETION_CALL_FAILED
          - INV_FETCH_VM_CALL_FAILED
          - TEMPLATE_ERROR_EVENT
          - TEMPLATE_ID_NOT_FOUND
          - TEMPLATE_PROVIDER_LABEL_NOT_FOUND
          - NO_PUBLISHED_ASSET_FOUND_FOR_VERSION
          - APP_INVENTORY_ALREADY_EXISTS
          - APP_INVENTORY_IN_PROGRESS
          - APP_INVENTORY_NOT_FOUND_FOR_TEMPLATE
          - APP_INVENTORY_CREATION_FAILED
          - APP_INVENTORY_INVALID_STATUS
          - APP_INVENTORY_EDGE_DEPLOYMENT_NOT_FOUND
          - APP_INVENTORY_ICON_UPLOAD_WARNING
          - INV_NO_VM_EXISTS
          - INV_FAILED_TO_FETCH_VM
          - APP_INVENTORY_NETWORK_DETAILS_NOT_FOUND
          - APP_INVENTORY_MISSING_FIELDS
          - VALIDATION_FAILED
          - VMWARE_AZURE_STORAGE_ACCOUNT_NOT_FOUND
          - APP_ICONS_UPLOAD_FAILURE
        errorDetail:
          type: string
        totalIconSets:
          type: integer
          format: int64
        receivedIconSets:
          type: integer
          format: int64
    ApplicationDefinitionQueryListRepresentation:
      required:
      - ids
      type: object
      properties:
        ids:
          maxItems: 100
          minItems: 0
          type: array
          items:
            maxLength: 100
            minLength: 0
            type: string
        orgId:
          type: string
          description: OrgId is required for non-customer CSP token
    InfraPreferenceResponseTO:
      required:
      - providerInstanceId
      type: object
      properties:
        id:
          type: string
          description: Unique record ID
          readOnly: true
          example: 0123456789
        orgId:
          type: string
          description: Org ID that owns this record
          readOnly: true
          example: 0123456789
        projectId:
          type: string
          description: Project ID that owns this record (null if scoped to the Org)
          readOnly: true
          example: 12345678-1234-1234-1234-123456789000
        providerInstanceId:
          type: string
          description: ProviderInstance ID that identifies the provider and related
            details
          readOnly: true
          example: 0123456789
        infraResourceType:
          type: string
          description: Defines the infra resource types
          readOnly: true
          enum:
          - VCENTER
        data:
          type: object
          additionalProperties:
            type: object
            description: Infra resources data
            readOnly: true
          description: Infra resources data
          readOnly: true
        createdAt:
          type: string
          description: Timestamp of record creation
          format: date-time
          readOnly: true
        updatedAt:
          type: string
          description: Timestamp of last record modification
          format: date-time
          readOnly: true
        version:
          type: integer
          description: Record version (internal)
          format: int64
          readOnly: true
    HorizonAgentPatchTO:
      type: object
      properties:
        features:
          type: array
          description: 'Agent features of manually installed Horizon Agent in the
            image. Values are case sensitive.

            Notes: If features are sent in the patch request, they are replaced completely
            i.e. existing features are removed and features from request are set in
            version.'
          example:
          - AvAgentInstall
          - ClientDriveRedirection
          - Core
          - DEM
          - HelpDesk
          - GEOREDIR
          - PerfTracker
          - PrintRedir
          - RDP
          - RDSH3D
          - RTAV
          - ScannerRedirection
          - SDOSensor
          - SmartCard
          - SerialPortRedirection
          - TSMMR
          - URLRedirection
          - USB
          - VmwVaudio
          items:
            type: string
            description: 'Agent features of manually installed Horizon Agent in the
              image. Values are case sensitive.

              Notes: If features are sent in the patch request, they are replaced
              completely i.e. existing features are removed and features from request
              are set in version.'
            example: '["AvAgentInstall","ClientDriveRedirection","Core","DEM","HelpDesk","GEOREDIR","PerfTracker","PrintRedir","RDP","RDSH3D","RTAV","ScannerRedirection","SDOSensor","SmartCard","SerialPortRedirection","TSMMR","URLRedirection","USB","VmwVaudio"]'
      description: Horizon agent metadata to be updated to the Version.
    VersionPatchTO:
      type: object
      properties:
        description:
          type: string
          description: Description to be updated for the Version
        markers:
          type: array
          description: Markers to be added/updated to the Version.
          items:
            $ref: '#/components/schemas/MarkerTO'
        horizonAgentMetaData:
          $ref: '#/components/schemas/HorizonAgentPatchTO'
    Predicate:
      type: object
    SearchablePredicateStreamTO:
      type: object
      properties:
        spec:
          $ref: '#/components/schemas/Predicate'
    PageStreamTO:
      type: object
      properties:
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int32
        pageable:
          $ref: '#/components/schemas/PageableObject'
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: '#/components/schemas/StreamTO'
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/SortObject'
        first:
          type: boolean
        last:
          type: boolean
        numberOfElements:
          type: integer
          format: int32
        empty:
          type: boolean
    StreamTO:
      type: object
      properties:
        id:
          type: string
          description: Unique record ID
          readOnly: true
          example: 0123456789
        orgId:
          type: string
          description: Org ID that owns this record
          readOnly: true
          example: 0123456789
        projectId:
          type: string
          description: Project ID that owns this record (null if scoped to the Org)
          example: 12345678-1234-1234-1234-123456789000
        name:
          type: string
          description: Image name
          readOnly: true
        description:
          type: string
          description: Description of the image
        os:
          type: string
          description: Base OS of the image
          readOnly: true
        multiSession:
          type: boolean
          description: Image is Multi-Session or Single-Session
          readOnly: true
        osType:
          type: string
          description: OSType of the image is Windows or Linux
          readOnly: true
          enum:
          - WVD
          - SERVER
          - CLIENT
          - WINDOWS
          - LINUX
        sourceType:
          type: string
          description: Defines the source of the image
          readOnly: true
          enum:
          - COPIED_FROM_VERSION
          - IMPORTED_VMS
          - AZURE_MARKET_PLACE
          - AKKA_MARKET_PLACE
          - VSPHERE_CATALOG
          - AZURE_SIG
          - AKKA_SIG
          - AZURE_CUSTOM_VM
          - AKKA_CUSTOM_VM
          - UPLOADED
          - AWS_AMIS
          - AWS_WORKSPACE_BUNDLES
          - GCP_IMAGES
          - VIEW_IMAGES
          - AKKA_IMAGES
        gpuType:
          type: string
          description: Identifies if the image supports GPU capabilities
          readOnly: true
          enum:
          - NONE
          - AMD
          - NVIDIA
          - AMD,NVIDIA, NONE
        sourceStreamId:
          type: string
          description: Indicates the stream that was used to create this image if
            any
        sourceVersionId:
          type: string
          description: Indicates the specific version in a stream that was used to
            create this image if any
        status:
          type: string
          description: Indicates the status of the image based on its stage in import
            or publish workflow
          example: PENDING, AVAILABLE, IMPORT_COMPLETE and so on
          enum:
          - AVAILABLE
          - DELETING
          - DISABLED
          - FAILED
          - IN_PROGRESS
          - PARTIALLY_AVAILABLE
          - IMPORT_COMPLETE
          - PENDING
        versionCount:
          type: integer
          description: Indicates the number of versions belonging to this stream.
          format: int32
          readOnly: true
          example: 100
        createdAt:
          type: string
          description: Timestamp of record creation
          format: date-time
          readOnly: true
        updatedAt:
          type: string
          description: Timestamp of last record modification
          format: date-time
          readOnly: true
        version:
          type: integer
          description: Record version (internal)
          format: int64
          readOnly: true
        markers:
          type: array
          description: Markers associated with this image
          readOnly: true
          items:
            $ref: '#/components/schemas/MarkerTO'
      description: Searchable fields are "projectId", "name", "os", "multiSession",
        "osType", "sourceType", "gpuType", "sourceStreamId", "sourceVersionId", "status"
    SearchablePredicateVersionSearchTO:
      type: object
      properties:
        spec:
          $ref: '#/components/schemas/Predicate'
    PageVersionTO:
      type: object
      properties:
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int32
        pageable:
          $ref: '#/components/schemas/PageableObject'
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: '#/components/schemas/VersionTO'
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/SortObject'
        first:
          type: boolean
        last:
          type: boolean
        numberOfElements:
          type: integer
          format: int32
        empty:
          type: boolean
    SearchablePredicateAssetTO:
      type: object
      properties:
        spec:
          $ref: '#/components/schemas/Predicate'
    AssetTO:
      required:
      - assetDetails
      - multiSession
      - osType
      - providerInstanceId
      - providerLabel
      - status
      - versionId
      type: object
      properties:
        id:
          type: string
          description: Unique record ID
          readOnly: true
          example: 0123456789
        versionId:
          type: string
          description: Version ID that this asset belongs to
          readOnly: true
          example: 0123456789
        imageId:
          type: string
          description: Image ID that this asset belong to.
          readOnly: true
          example: 0123456789
        orgId:
          type: string
          description: Org ID that owns this record
          readOnly: true
          example: 0123456789
        providerInstanceId:
          type: string
          description: ProviderInstance ID that identifies the provider and related
            details
          readOnly: true
          example: 0123456789
        credentialId:
          type: string
          description: ID of the credential storing the sensitive data of provider
            instance
          readOnly: true
          example: 0123456789
        providerLabel:
          type: string
          description: ProviderLabel identifies the provider type - Azure, vSphere
            and so on
          readOnly: true
          example: 0123456789
        multiSession:
          type: boolean
          description: Identifies if the asset is to be used for single-session or
            multi-session templates
          readOnly: true
        osType:
          type: string
          description: Identifies the osType of the asset
          readOnly: true
          example: WINDOWS, LINUX
          enum:
          - WVD
          - SERVER
          - CLIENT
          - WINDOWS
          - LINUX
        gpuType:
          type: string
          description: Identifies the GPU type of the asset
          readOnly: true
          example: AMD, NVIDIA
          enum:
          - NONE
          - AMD
          - NVIDIA
        assetDetails:
          $ref: '#/components/schemas/AssetDetails'
        state:
          type: string
          description: Identifies state of the asset
          readOnly: true
          example: PUBLISHED
          enum:
          - NOT_READY
          - UNPUBLISHED
          - PUBLISHED
        status:
          type: string
          description: Indicates the status of the asset based on its stage in import
            or publish workflow
          example: GENERALIZING
          enum:
          - AVAILABLE
          - COPYING_IMAGE
          - DELETING
          - DEPLOYING_VM
          - INSTALLING_AGENTS
          - ALLOW_RDP_FAILED
          - ENABLING_RDS_AND_ALLOW_RDP_FAILED
          - RESTARTING_VM
          - SHUTTING_DOWN_VM
          - IMPORT_PENDING
          - IMPORT_COMPLETE
          - IMPORT_FAILED
          - CLONE_FAILED
          - AGENT_INSTALLATION_FAILED
          - GENERALIZING
          - GENERALIZING_FAILED
          - SYSPREPING
          - SYSPREP_FAILED
          - CAPTURING_AND_UPLOADING_IMAGE_TO_SIG
          - CAPTURE_AND_IMAGE_UPLOAD_FAILED
          - VALIDATION_IN_PROGRESS
          - VALIDATION_FAILED
          - SCANNING_APPS
          - REPLICATING
          - PUBLISH_IN_PROGRESS
          - PUBLISH_COMPLETE
          - PUBLISH_FAILED
          - PUBLISH_BACKUP_IN_PROGRESS
          - PUBLISH_BACKUP_FAILED
          - PUBLISH_BACKUP_VM_VALIDATION_IN_PROGRESS
          - PUBLISH_BACKUP_VM_VALIDATION_FAILED
          - PUBLISH_CLEANUP_IN_PROGRESS
          - PUBLISH_CLEANUP_FAILED
          - IMPORT_FAILED_TIMEOUT
          - IMPORT_RETRY_PENDING
          - PUBLISH_RETRY_PENDING
          - DELETION_FAILED
          - DELETION_RETRY_PENDING
          - REPLICATION_FAILED
          - REPLICATION_FAILED_TIMEOUT
          - REPLICATION_COMPLETE
          - REPLICATION_PENDING
          - DISABLED
          - SHRINK_IN_PROGRESS
          - SHRINK_FAILED
          - SHRINK_TIMEOUT
          - VIEW_SYNC_IN_PROGRESS
          - VIEW_SYNC_FAILED
          - VIEW_SYNC_TIMEOUT
          - "AVAILABLE,\n    DELETING,\n    DEPLOYING_VM,\n    INSTALLING_AGENTS,\n\
            \    ENABLING_RDS,\n    RESTARTING_VM,\n    SHUTTING_DOWN_VM,\n    IMPORT_PENDING,\n\
            \    IMPORT_COMPLETE,\n    IMPORT_FAILED,\n    GENERALIZING,\n    SYSPREPING,\n\
            \    SCANNING_APPS,\n    REPLICATING,\n    PUBLISH_COMPLETE,\n    PUBLISH_FAILED,\n\
            \    IMPORT_FAILED_TIMEOUT,\n    IMPORT_RETRY_PENDING,\n    PUBLISH_RETRY_PENDING,\n\
            \    DELETION_FAILED,\n    DELETION_RETRY_PENDING,\n    REPLICATION_FAILED,\n\
            \    REPLICATION_FAILED_TIMEOUT,\n    REPLICATION_COMPLETE,\n    DISABLED"
        errorCode:
          type: string
          description: Error code for failed Asset
          readOnly: true
          example: AZURE_FAILED_TO_ENABLE_RDS
          enum:
          - FORBIDDEN
          - UNSUPPORTED_PROVIDER
          - PROVIDER_LABEL_MISSING
          - UNSUPPORTED_METHOD
          - PROVIDER_INSTANCE_NOT_OF_SAME_ORG
          - RESOURCE_FETCH_FROM_DB_FAILED
          - RESOURCE_FETCH_FROM_UPSTREAM_FAILED
          - RESOURCE_DELETE_FROM_DB_FAILED
          - RESOURCE_SAVE_TO_DB_FAILED
          - RESOURCE_NOT_FOUND
          - RESOURCE_ALREADY_EXISTS
          - AZURE_RESOURCE_NOT_FOUND
          - AZURE_CONNECTION_FAILED
          - AZURE_FAILED_TO_CREATE_NIC
          - AZURE_FAILED_TO_CREATE_PUBLIC_IP
          - AZURE_FAILED_TO_CREATE_RESOURCE_GROUP
          - AZURE_NETWORK_NOT_FOUND
          - AZURE_SUBNET_NOT_FOUND
          - AZURE_VM_NOT_FOUND
          - AZURE_VM_INVALID_POWER_STATE
          - AZURE_VM_INVALID_AGENT_STATE
          - AZURE_QUOTA_EXHAUSTED
          - AZURE_FAILED_TO_GET_USAGE
          - AZURE_FAILED_TO_GET_VM_SIZES
          - AZURE_FAILED_TO_GET_AGENT_STATUS
          - AZURE_FAILED_TO_PROVISION_VM
          - AZURE_FAILED_TO_AllOW_RDP
          - AZURE_FAILED_TO_ALLOW_RDP_AND_ENABLE_RDS
          - AZURE_FAILED_TO_CREATE_SNAPSHOT
          - AZURE_FAILED_TO_DELETE_SNAPSHOT
          - AZURE_FAILED_TO_CREATE_MANAGED_DISK
          - AZURE_FAILED_TO_CREATE_NETWORK_SECURITY_GROUP
          - AZURE_FAILED_TO_DELETE_VM
          - AZURE_FAILED_TO_START_VM
          - AZURE_FAILED_TO_RESTART_VM
          - RETRY_AZURE_FAILED_TO_RESTART_VM
          - AZURE_FAILED_TO_RUN_SYSPREP_ON_VM
          - AZURE_FAILED_TO_DELETE_CUSTOM_SCRIPT_EXTENSION
          - AZURE_FAILED_TO_DEALLOCATE_VM
          - AZURE_FAILED_TO_GENERALIZE_VM
          - AZURE_FAILED_TO_CREATE_SIG
          - AZURE_FAILED_TO_CREATE_IMAGE_IN_SIG
          - AZURE_FAILED_TO_GET_NSG
          - AZURE_FAILED_TO_GET_NIC
          - AZURE_FAILED_TO_INITIATE_SIG_REPLICATION
          - AZURE_FAILED_TO_REPLICATION_IMAGE
          - AZURE_INVALID_SIG_ID_FORMAT
          - AZURE_FAILED_TO_FETCH_SIG_IMAGE_DETAILS
          - AZURE_FAILED_TO_FETCH_SIG_IMAGE_VERSION
          - AZURE_FAILED_TO_COPY_SIG_IMAGE_VERSION
          - AZURE_FAILED_TO_DELETE_SIG_IMAGE_VERSION
          - AZURE_FAILED_TO_DELETE_RESOURCE_GROUP
          - AZURE_FAILED_TO_FETCH_VM_FROM_RESOURCE_GROUP
          - AZURE_FAILED_TO_VERIFY_RESOURCE_GROUP
          - AZURE_VM_GENERATION_NOT_SUPPORTED
          - AZURE_OPERATION_FAILED
          - AZURE_IMAGE_VERSION_DOES_NOT_EXIST
          - INVALID_ORG_ID
          - FAILED_TO_FETCH_LOCATION
          - ORG_LOCATION_NOT_FOUND
          - FAILED_TO_INSTALL_AGENT
          - CONFLICT_CSE
          - RETRY_AGENT_INSTALL
          - GOLDPATTERN_MISSING_FIELDS
          - GOLDPATTERN_INVALID_DATA
          - INVALID_OS_TYPE
          - INVALID_GPU_TYPE
          - IMAGE_DISCOVERY_FAILED
          - IMAGE_DISCOVERY_TIME_OUT
          - PROVIDER_INSTANCE_FETCH_FAILED
          - EDGE_DEPLOYMENT_FETCH_FAILED
          - VERSION_IN_USE
          - MARKER_IN_USE
          - VERSION_IN_USE_AS_CLONE_SOURCE
          - VM_COMPUTE_SKUS_FETCH_FAILED
          - AIMS_IMPORT_CALL_FAILED
          - AIMS_COPY_CALL_FAILED
          - AIMS_CLONE_CALL_FAILED
          - AIMS_PUBLISH_CALL_FAILED
          - AIMS_POST_VALIDATION_CLEANUP_CALL_FAILED
          - AIMS_REPUBLISH_CALL_FAILED
          - AIMS_SHRINK_CALL_FAILED
          - AIMS_DELETE_ASSET_CALL_FAILED
          - AIMS_DELETE_ASSET_FAILED
          - VSPHERE_OPERATION_FAILED
          - VSPHERE_IMAGE_IMPORT_REQUEST_FAILED
          - VSPHERE_IMAGE_PUBLISH_REQUEST_FAILED
          - VSPHERE_IMAGE_REPUBLISH_REQUEST_FAILED
          - VSPHERE_IMAGE_CLONE_REQUEST_FAILED
          - VSPHERE_IMAGE_DELETE_REQUEST_FAILED
          - CREDENTIAL_ID_MISSING
          - CREDENTIALS_FETCH_FAILED
          - CREDENTIAL_CREATION_FAILED
          - CREDENTIALS_NOT_FOUND
          - CREDENTIALS_DELETE_FAILED
          - VALIDATION_FAILED
          - IMAGE_EVENT_VALIDATION_FAILED
          - AGENT_INSTALL_TYPE_NOT_FOUND
          - INVALID_RESOURCE_STATE
          - INVALID_OS_CUSTOMIZATION_OPTION
          - HORIZON_AGENT_FEATURES_MISSING
          - APPLICATION_SCAN_IS_NOT_APPLICABLE
          - APPLICATION_SCAN_DETAILS_MISSING
          - INITIATE_VERSION_PUBLISH_FAILED
          - INITIATE_VERSION_REPUBLISH_FAILED
          - INITIATE_ADD_VERSION_FAILED
          - INITIATE_IMAGE_REPLICATION_FAILED
          - INITIATE_VALIDATE_VERSION_FAILED
          - PUBLISH_WITH_RESILIENCY_NOT_ENABLED
          - PUBLISH_WITH_RESILIENCY_SHOULD_BE_ENABLED
          - INITATE_IMAGE_IMPORT_FAILED
          - CSE_ALREADY_PRESENT_WARNING
          - RESOURCE_CLEANUP_FROM_PROVIDER_FAILED
          - BAD_REQUEST
          - UNSUPPORTED_OPERATION
          - UNSUPPORTED_EXCEPTION
          - UNSUPPORTED_COLLECTION_FOR_LOCATION
          - PERMISSION_MISSING
          - FAILED_TIME_OUT
          - INVALID_REQUEST_FORMAT
          - REQUEST_REJECTED
          - ILLEGAL_SOURCE_TYPE_FOR_GIVEN_PROVIDER
          - IMAGE_ALREADY_EXISTS
          - INVALID_VERSION_TYPE
          - AGENT_PACKAGE_ID_NOT_FOUND
          - AGENT_DETAILS_FETCH_FAILED
          - AGENT_FEATURES_VERIFICATION_FAILED
          - DELETE_STREAM_NOT_SUPPORTED
          - INVALID_SEARCH_USAGE
          - UNKNOWN_EXCEPTION
          - SIMULATED_EXCEPTION
          - MARKER_DELETION_VALIDATION_FAILED
          - MARKER_UPDATION_NOT_SUPPORTED
          - MARKER_MOVEMENT_CALL_FAILED
          - MARKER_MOVEMENT_PARTIALLY_SUCCEEDED
          - VERSION_PATCHING_FAILED
          - INFRA_PREFERENCE_DELETION_NOT_SUPPORTED
          - EDGE_DEPLOYMENT_NOT_FOUND
          - INFRASTRUCTURE_DETAILS_MISSING
          - ADMIN_TEMPLATE_CREATION_CALL_FAILED
          - ADMIN_TEMPLATE_DELETION_CALL_FAILED
          - TEMPLATE_ERROR_EVENT
          - TEMPLATE_ID_NOT_FOUND
          - TEMPLATE_STATUS_NOT_FOUND
          - TEMPLATE_PROVIDER_LABEL_NOT_FOUND
          - TEMPLATE_NO_VM_EXISTS
          - TEMPLATE_FAILED_TO_FETCH_VM
          - HOC_EVENT_FAILURE
          - SOURCE_TARGET_REGION_MISMATCH
          - RBAC_ACCESS_REQUIRED
          - INVALID_TASK_STATUS
          - INVALID_PUBLISH_FLOW_STEP
          - UNSUPPORTED_PROVIDER_INSTANCE
          - VIEW_INTERNAL_ERROR
          - VSPHERE_INTERNAL_ERROR
          - VSPHERE_INTERNAL_SERVER_ERROR
          - VSPHERE_CONNECTION_ERROR
          - VSPHERE_FAILED_TO_PUSH_AGENT_INTO_VM
          - VSPHERE_AGENT_INSTALL_TIMED_OUT
          - VSPHERE_CONCURRENT_TASK_LIMIT_EXCEEDED
          - VSPHERE_TEMPLATE_NOT_FOUND
          - VSPHERE_OPERATION_TIMED_OUT
          - VSPHERE_TASK_CANCELLED
          - VSPHERE_TOOLS_NOT_INSTALLED
          - VSPHERE_TOOLS_NOT_UPDATED
          - VSPHERE_TOOLS_ARE_NOT_RUNNING
          - VSPHERE_PUBLISH_RESOURCE_CONFLICT
          - IMAGE_REPLICATION_FAILED
        errorDetails:
          type: string
          description: Specific error details based on the failure
          readOnly: true
        errorDetailsParameters:
          type: object
          additionalProperties:
            type: string
            description: The parameters for the error detail.
            readOnly: true
          description: The parameters for the error detail.
          readOnly: true
        warningDetails:
          type: string
          description: Warning details.
          readOnly: true
        warningDetailsParameters:
          type: object
          additionalProperties:
            type: string
            description: The parameters for the warning detail.
            readOnly: true
          description: The parameters for the warning detail.
          readOnly: true
        createdAt:
          type: string
          description: Timestamp of record creation
          format: date-time
          readOnly: true
        updatedAt:
          type: string
          description: Timestamp of last record modification
          format: date-time
          readOnly: true
        version:
          type: integer
          description: Record version (internal)
          format: int64
          readOnly: true
        errorsHistory:
          type: array
          description: List of past errors
          readOnly: true
          items:
            $ref: '#/components/schemas/ErrorDetail'
        agents:
          type: array
          description: Agents to be installed on the asset
          readOnly: true
          items:
            $ref: '#/components/schemas/Agent'
        projectId:
          type: string
          description: Project ID that owns this record (null if scoped to the Org)
          readOnly: true
          example: 12345678-1234-1234-1234-123456789000
      description: Searchable fields are "projectId", "providerInstanceId", "orgId"
    PageAssetTO:
      type: object
      properties:
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int32
        pageable:
          $ref: '#/components/schemas/PageableObject'
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: '#/components/schemas/AssetTO'
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/SortObject'
        first:
          type: boolean
        last:
          type: boolean
        numberOfElements:
          type: integer
          format: int32
        empty:
          type: boolean
    Pageable:
      type: object
      properties:
        page:
          minimum: 0
          type: integer
          format: int32
        size:
          minimum: 1
          type: integer
          format: int32
        sort:
          type: array
          items:
            type: string
    SearchablePredicateMarkerTO:
      type: object
      properties:
        spec:
          $ref: '#/components/schemas/Predicate'
    PageMarkerTO:
      type: object
      properties:
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int32
        pageable:
          $ref: '#/components/schemas/PageableObject'
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: '#/components/schemas/MarkerTO'
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/SortObject'
        first:
          type: boolean
        last:
          type: boolean
        numberOfElements:
          type: integer
          format: int32
        empty:
          type: boolean
    PageSupportedImageRepresentation:
      type: object
      properties:
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int32
        pageable:
          $ref: '#/components/schemas/PageableObject'
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: '#/components/schemas/SupportedImageRepresentation'
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/SortObject'
        first:
          type: boolean
        last:
          type: boolean
        numberOfElements:
          type: integer
          format: int32
        empty:
          type: boolean
    SupportedImageRepresentation:
      type: object
      properties:
        id:
          type: string
        displayName:
          type: string
        sourceType:
          type: string
          enum:
          - COPIED_FROM_VERSION
          - IMPORTED_VMS
          - AZURE_MARKET_PLACE
          - AKKA_MARKET_PLACE
          - VSPHERE_CATALOG
          - AZURE_SIG
          - AKKA_SIG
          - AZURE_CUSTOM_VM
          - AKKA_CUSTOM_VM
          - UPLOADED
          - AWS_AMIS
          - AWS_WORKSPACE_BUNDLES
          - GCP_IMAGES
          - VIEW_IMAGES
          - AKKA_IMAGES
        imageProviderType:
          type: string
        imageSourceData:
          type: object
          additionalProperties:
            type: object
    PageVirtualMachineTO:
      type: object
      properties:
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int32
        pageable:
          $ref: '#/components/schemas/PageableObject'
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: '#/components/schemas/VirtualMachineTO'
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/SortObject'
        first:
          type: boolean
        last:
          type: boolean
        numberOfElements:
          type: integer
          format: int32
        empty:
          type: boolean
    VirtualMachineTO:
      type: object
      properties:
        vmName:
          type: string
          description: Name of the virtual machine
          readOnly: true
          example: CustomVM
        vmSize:
          type: string
          description: Size of the virtual machine
          readOnly: true
          example: Standard_D2S_V2
        gpuType:
          type: string
          description: GPU type of the virtual machine
          readOnly: true
          example: NVIDIA
        tags:
          type: object
          additionalProperties:
            type: string
            description: ResourceTags associated with virtual machine
            readOnly: true
          description: ResourceTags associated with virtual machine
          readOnly: true
        generationType:
          type: string
          description: Generation type of the virtual machine
          readOnly: true
          example: V1
        securityType:
          type: string
          description: Security type of the virtual machine
          readOnly: true
          example: TrustedLaunch
    AppRepresentation:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        path:
          type: string
        version:
          type: string
        publisher:
          type: string
        icons:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/Icon'
    PageAppRepresentation:
      type: object
      properties:
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int32
        pageable:
          $ref: '#/components/schemas/PageableObject'
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: '#/components/schemas/AppRepresentation'
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/SortObject'
        first:
          type: boolean
        last:
          type: boolean
        numberOfElements:
          type: integer
          format: int32
        empty:
          type: boolean
    PageApplicationDefinitionResponseTO:
      type: object
      properties:
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int32
        pageable:
          $ref: '#/components/schemas/PageableObject'
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: '#/components/schemas/ApplicationDefinitionResponseTO'
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/SortObject'
        first:
          type: boolean
        last:
          type: boolean
        numberOfElements:
          type: integer
          format: int32
        empty:
          type: boolean
    EntitlementV2:
      required:
      - poolIds
      - resourceDetails
      type: object
      properties:
        id:
          type: string
          description: Entitlement ID
          readOnly: true
          example: ent-id-12345
        name:
          type: string
          description: Entitlement name
          example: dev's entitlement
        description:
          type: string
          description: Entitlement description
          example: Entitlement description
        orgId:
          type: string
          description: Org ID that owns this entitlement
          example: 0123456789
        projectId:
          type: string
          description: Project ID that owns this Entitlement (null if scoped to the
            Org)
          example: 0123456789
        location:
          type: string
          description: Location that is mapped with Org Id
          readOnly: true
          example: US
        poolIds:
          type: array
          description: List of PoolIds
          items:
            type: string
            description: List of PoolIds
        groupIds:
          type: array
          description: List of entitled user groups - requires group ID returned from
            IAM
          example:
          - group-id-1
          - group-id-2
          items:
            type: string
            description: List of entitled user groups - requires group ID returned
              from IAM
            example: '["group-id-1","group-id-2"]'
        userIds:
          type: array
          description: List of entitled users  - requires user ID returned from IAM
          example:
          - user-id-1
          - user-id-2
          items:
            type: string
            description: List of entitled users  - requires user ID returned from
              IAM
            example: '["user-id-1","user-id-2"]'
        resourceDetails:
          type: array
          description: List of filter applications for this entitlements
          items:
            $ref: '#/components/schemas/ResourceDetail'
        createdAt:
          type: string
          description: Time when the entitlement was created
          format: date-time
          readOnly: true
        updatedAt:
          type: string
          description: Time when the entitlement was updated
          format: date-time
          readOnly: true
    ResourceDetail:
      required:
      - poolId
      type: object
      properties:
        resourceId:
          type: string
          description: Application ID
        poolId:
          type: string
      description: List of filter applications for this entitlements
    Edge:
      required:
      - edgeDeploymentId
      - edgeDeploymentName
      type: object
      properties:
        edgeDeploymentId:
          type: string
          description: Edge deployment Id
          readOnly: true
          example: edge-12345
        edgeDeploymentName:
          type: string
          description: Edge deployment name
          readOnly: true
          example: edge-name
    AdditionalAttributes:
      type: object
      properties:
        applicationParentId:
          type: string
          description: applicationId of AV AppShortcut
          example: 653599a7763f6a69c250db68
        avLaunchId:
          type: string
          description: launchId of AV AppShortcut
          example: 9603b61d-9bec-d134-32e5-aba1045f8a76
      description: additionalAttributes has AV AppShortcut information.This will be
        null for applicationType = INSTALLED
    AgentCustomization:
      required:
      - sessionsPerVm
      type: object
      properties:
        disconnectSessionTimeoutMins:
          type: integer
          description: "Specify the timeout after which disconnected sessions timeout\
            \ in minutes\n -1: Log of disconnected sessions immediately\n 0: Never\
            \ logoff disconnected sessions\n >0: Time in minutes after which disconnected\
            \ sessions are loggedOff."
          format: int32
        emptySessionTimeoutMins:
          type: integer
          description: "Empty session timeout\n 0 : Never timeout empty sessions.\n\
            \ >0 : Time in minutes after which the empty session is timed out."
          format: int32
        emptySessionLogoffType:
          type: string
          description: "What to do when the EmptySession timeout is reached\n DISCONNECT\
            \ (disconnect the sessions when the emptySessionTimeout is reached.)\n\
            \ LOGOFF (logoff the session when the emptySessionTimeout is reached.)"
          enum:
          - DISCONNECT
          - LOGOFF
        idleTimeoutMins:
          type: integer
          description: Amount of time the user can have an idle session before. After
            timeout the session is disconnected
          format: int32
        demSettingId:
          type: string
          description: 'DEM (Dynamic Environment Manager) setting id

            Pass the value as the blank string (""), if the existing DEM setting id
            association of the Template if any is to be removed

            If the value passed is null, No action would be performed on the DEM setting
            id association (Existing value if any would be intact)'
        sessionsPerVm:
          maximum: 150
          minimum: 1
          type: integer
          description: Maximum number of sessions per VM
          format: int32
          example: 1
        sessionLoadBalancingSettings:
          $ref: '#/components/schemas/SessionLoadBalancingSettings'
        skipDomainJoin:
          type: boolean
        esUrl:
          type: string
          description: Enrolment server (auth engine) URL.
        proxyInfo:
          $ref: '#/components/schemas/AgentProxyInfo'
        dtemplateName:
          type: string
      description: Defines specific customizations to be applied to each VM in the
        template after it has been created from the template image.
    AppTemplateProperties:
      required:
      - poolTemplateId
      - properties
      type: object
      properties:
        poolTemplateId:
          type: string
          description: pool template id
          example: 0123456789
        properties:
          type: object
          additionalProperties:
            type: object
            description: map of properties associated to the pool template id
          description: map of properties associated to the pool template id
      description: pool template properties
      example: start folder
    ApplicationConfig:
      type: object
      properties:
        multiSessionMode:
          type: string
          description: Multi session mode
          example: DISABLED,ENABLED_DEFAULT_OFF
          enum:
          - DISABLED
          - ENABLED_DEFAULT_OFF
          - ENABLED_DEFAULT_ON
          - ENABLED_ENFORCED
      description: application config
      example: multisession mode
    ApplicationItem:
      required:
      - id
      - name
      - path
      - streamId
      - templateIds
      type: object
      properties:
        streamId:
          type: string
          description: Application's stream Id
        versionId:
          type: string
          description: Image version Id
        id:
          type: string
          description: Application's Id
        version:
          type: string
          description: Application's version
          example: 1.0.0
        publisher:
          type: string
          description: Publisher
          example: VMware Inc
        os:
          type: string
          description: Operating System
          example: Windows
        path:
          type: string
          description: Application's launch path
          example: c:\app\chrome.exe
        name:
          type: string
          description: Application's name
          example: Chrome
        displayName:
          type: string
          description: Application's display name
          example: Google Chrome
        templateIds:
          type: array
          description: List of template ids
          items:
            type: string
            description: List of template ids
        icons:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/Icon'
          description: List of application icons
        orgId:
          type: string
          description: Org Id
          example: 0123456789
        registeredExtensions:
          $ref: '#/components/schemas/RegisteredExtensions'
        applicationType:
          type: string
          description: application type
          example: INSTALLED, APP_VOLUMES
          enum:
          - INSTALLED
          - APP_VOLUMES
          - MANUAL
        disabled:
          type: boolean
          description: If disabled, application will filter out in launch api.
          readOnly: true
          example: false
        appGroupId:
          type: string
          description: App Group Id
        resourceId:
          type: string
          description: Resource Id
          example: App Group Id + Pool Group Id
        appIdentifier:
          type: string
          description: Application Identifier
          example: Application identifier
        applicationConfig:
          $ref: '#/components/schemas/ApplicationConfig'
        appTemplateProperties:
          type: array
          description: pool template properties
          example: start folder
          items:
            $ref: '#/components/schemas/AppTemplateProperties'
        additionalAttributes:
          $ref: '#/components/schemas/AdditionalAttributes'
      description: List of applications
    AvApplication:
      required:
      - avApplicationId
      type: object
      properties:
        avApplicationId:
          type: string
          description: Application's Id
        avApplicationVersionId:
          type: string
          description: Version id of package within application
        avApplicationMarkerId:
          type: string
          description: Marker id associated with application
      description: Application list of AV application assignments at pool group level
    Pool:
      required:
      - name
      - protocols
      - templateType
      - templates
      - type
      type: object
      properties:
        id:
          type: string
          description: Pool ID
          readOnly: true
          example: ent-id-12345
        name:
          maxLength: 20
          minLength: 1
          pattern: ^[a-zA-Z][a-zA-Z0-9\- ]+$
          type: string
          description: Pool name
          example: pg-123
        displayName:
          type: string
          description: Pool's display name
          example: NewPool
        description:
          type: string
          description: Pool description
          example: Pool description
        type:
          type: string
          description: Pool type
          example: DESKTOP
          enum:
          - DESKTOP
          - APPLICATION
          - DESKTOP_APPLICATION
        templateType:
          type: string
          description: Template type - templates added to the poolType must match
            this value
          example: MULTI_SESSION
          enum:
          - DEDICATED
          - FLOATING
          - MULTI_SESSION
          - RDSH
          - WVD
          - APP_CAPTURE_STUDIO
        orgId:
          type: string
          description: Org ID that owns this poolType
          example: 0123456789
        projectId:
          type: string
          description: Project ID that owns this poolType (null if scoped to the Org)
          example: 0123456789
        location:
          type: string
          description: Location that is mapped with Org Id
          readOnly: true
          example: US
        templates:
          type: array
          description: List of templates
          items:
            $ref: '#/components/schemas/Template'
        protocols:
          type: array
          description: List of supported desktop protocols
          items:
            $ref: '#/components/schemas/Protocol'
        applications:
          maxItems: 100
          minItems: 0
          type: array
          description: List of applications
          items:
            $ref: '#/components/schemas/ApplicationItem'
        connectionAffinity:
          type: string
          description: Connection Affinity - rule to be used while brokering the pool
          example: NEAREST_SITE
          enum:
          - NEAREST_SITE
          - HOME_SITE
        homesiteMappings:
          type: object
          additionalProperties:
            type: string
            description: Map to store UsersId or GroupId with their preferred homesite
              Id
            example: '{"user-id-1":"site-id-1","group-id-1":"site-id-2"}'
          description: Map to store UsersId or GroupId with their preferred homesite
            Id
          example:
            user-id-1: site-id-1
            group-id-1: site-id-2
        requireHomesite:
          type: boolean
          description: Flag to specify home site restriction is enabled or not
          example: true
        scope:
          type: string
          description: Scope - use first preferred homesite or all preferred home
            sites
          example: ALL_SITES
          enum:
          - WITHIN_SITE
          - ALL_SITES
        createdAt:
          type: string
          description: Time when the pool was created
          format: date-time
          readOnly: true
        updatedAt:
          type: string
          description: Time when the pool was updated
          format: date-time
          readOnly: true
        powerPolicy:
          $ref: '#/components/schemas/PowerPolicy'
        preferredClientType:
          type: string
          description: Preferred Client Type
          readOnly: true
          example: HORIZON_CLIENT
          enum:
          - HORIZON_CLIENT
          - BROWSER
        enableSSO:
          type: boolean
          description: Enable SSO on this pool.
        showAssignedMachineName:
          type: boolean
          description: Displays the host name of the assigned machine instead of the
            pool group display name (only for dedicated desktops)
        reportedCapacity:
          $ref: '#/components/schemas/ReportedCapacity'
        disabled:
          type: boolean
          description: If disabled, pool will not receive any launch request.
          readOnly: true
        agentCustomization:
          $ref: '#/components/schemas/AgentCustomization'
        agentCustomizationStatus:
          type: string
          description: Agent Customization Status
          enum:
          - PENDING_ACTIVE
          - ACTIVE
          - PARTIAL_SUCCESS
        transientLoadThresholdSecs:
          type: integer
          description: Time spacing (in seconds) between consecutive session placement
            on a MULTI-SESSIONtemplate VM. This property will be used to load balance
            session slots among theMULTI-SESSION template VMs. This value should be
            between 0 to 300
          format: int32
          example: 10
        transientLoadThresholdSecsStatus:
          type: string
          description: transient load threshold update status
          enum:
          - PENDING_ACTIVE
          - ACTIVE
          - PARTIAL_SUCCESS
        agentUpdateBadgeLevel:
          type: string
          description: AgentUpdate Badge Level
          enum:
          - UPTODATE
          - NEED
          - URGENT
          - CRITICAL
        startSessionSettings:
          $ref: '#/components/schemas/StartSessionSettings'
        enabledPoolFeatures:
          uniqueItems: true
          type: array
          description: Optional enabled features for the pool.
          items:
            type: string
            description: Optional enabled features for the pool.
            enum:
            - W365
        vmMaintenancePolicy:
          $ref: '#/components/schemas/PortalVMMaintenancePolicy'
        avApplicationDeliveryPrecedence:
          type: string
          description: 'User preference of package delivery within AV application,
            in case of conflict : POOL_GROUP/USER_ENTITLEMENT'
          enum:
          - POOL_GROUP
          - USER_ENTITLEMENT
        avApplicationList:
          type: array
          description: Application list of AV application assignments at pool group
            level
          items:
            $ref: '#/components/schemas/AvApplication'
        directConnect:
          type: boolean
          description: If true, only internal users are allowed to direct connect.
    PortalVMMaintenancePolicy:
      type: object
      properties:
        modelVersion:
          type: integer
          format: int64
        enabled:
          type: boolean
        vmMaintenancePolicyType:
          type: string
          enum:
          - SCHEDULED
          - SESSION
        vmAction:
          type: string
          enum:
          - POWER_OFF
          - POWER_ON
          - RESTART
          - SHUTDOWN
          - RESIZE
          - REBUILD
        recurrenceType:
          type: string
          enum:
          - WEEKLY
          - DAILY
        dayOfWeek:
          type: integer
          format: int32
        hourOfDay:
          type: integer
          format: int32
        timeZone:
          type: string
        numOfSessionsPerVM:
          type: integer
          format: int32
        maxQuiescingVMs:
          type: integer
          description: Max number of VMs which can quiesced when the template is undergoing
            normal maintenance.
          format: int32
      description: VM Maintenance Policy
    PowerPolicy:
      required:
      - min
      - occupancyPresetMode
      type: object
      properties:
        modelVersion:
          type: integer
          format: int64
        enabled:
          type: boolean
          description: Is the power mgmt policy is enabled or disabled?
          example: false
        min:
          minimum: -1
          type: integer
          description: Minimal number/percentage of vms to be powered on at all times
          format: int32
          example: 2
        minUnit:
          type: string
          description: Is the min a percentage value or an absolute value?
          example: PERCENTAGE
          enum:
          - PERCENTAGE
          - ABSOLUTE
        occupancyPresetMode:
          type: string
          description: The occupancy mode for the Dtemplate
          example: BALANCED
          enum:
          - OPTIMIZED_FOR_PERFORMANCE
          - BALANCED
          - OPTIMIZED_FOR_COST
          - DISABLED
        powerSchedules:
          maxItems: 25
          minItems: 0
          type: array
          description: The power schedules for the template
          items:
            $ref: '#/components/schemas/PowerSchedule'
        powerOffProtectTimeMins:
          maximum: 60
          minimum: 1
          type: integer
          description: Time duration for which vms should be protected from power
            off on user logout or after power on because of farm load
          format: int32
          example: 30
      description: Power policy Spec
    PowerSchedule:
      required:
      - allDay
      - endTime
      - min
      - name
      - occursOn
      - startTime
      - timeZone
      type: object
      properties:
        modelVersion:
          type: integer
          format: int64
        name:
          type: string
          description: The schedule name
          example: VmwareWeekdaySchedule
        startTime:
          pattern: ^([0-1]?[0-9]|2[0-3]):[0-5][0-9]$
          type: string
          description: The hhmm start time of a schedule
          example: 08:00
        endTime:
          pattern: ^([0-1]?[0-9]|2[0-3]):[0-5][0-9]$
          type: string
          description: The hhmm end time of a schedule
          example: '17:00'
        timeZone:
          type: string
          description: The time zone for the schedule
          example: Asia/Tokyo
        occursOn:
          type: integer
          description: Bit mask representing the days of a week for which the schedule
            is applicable.For ex) 127 means the schedule is applicable on all days,
            31 means the schedule is applicable on all week days
          format: int32
          example: 31
        min:
          minimum: 0
          type: integer
          description: Min number/percentage of vms to power on in the schedule
          format: int32
          example: 5
        allDay:
          type: boolean
          description: Is this a all day schedule?
          example: false
      description: The power schedules for the template
    Protocol:
      type: object
      properties:
        id:
          type: string
        type:
          type: string
      description: User selected protocol for entitlement
      example: '[{''id'':''6028f479ae42263399104f58'', ''type'':''blast''}]'
    ProviderInstanceDTO:
      type: object
      properties:
        id:
          type: string
          description: Unique record ID
          readOnly: true
          example: 0123456789
      description: Details of the provider instance.
      readOnly: true
    RegisteredExtensions:
      type: object
      properties:
        otherFileType:
          type: array
          description: List of OtherFileTypes
          items:
            $ref: '#/components/schemas/OtherFileType'
        extensions:
          type: array
          description: List of Extentions
          items:
            $ref: '#/components/schemas/Extension'
      description: Registered extentions
    ReportedCapacity:
      type: object
      properties:
        freeSessions:
          type: integer
          format: int32
        provisionedSessions:
          type: integer
          format: int32
        usedSessions:
          type: integer
          format: int32
        consumedVMs:
          type: integer
          format: int32
        maxVMs:
          type: integer
          format: int32
        limit:
          type: integer
          format: int32
        sessionLimit:
          type: integer
          format: int32
        consumedSessions:
          type: integer
          format: int32
      description: PoolType Reported Capacity
      readOnly: true
      example:
        freeSessions: 10
        provisionedSessions: 20
        provisionedVMs: 2
        consumedVMs: 1
        maxVMs: 2
    SessionLoadBalancingSettings:
      required:
      - LBCHANGETHRESHOLD
      - LBCPUTHRESHOLD
      - LBDISKQUEUELENTHRESHOLD
      - LBDISKREADLATENCYTHRESHOLD
      - LBDISKWRITELATENCYTHRESHOLD
      - LBINCLUDESESSIONCOUNT
      - LBMEMTHRESHOLD
      - LBUSECUSTOMSCRIPT
      type: object
      properties:
        modelVersion:
          type: integer
          format: int64
        loadIndexThresholdPercent:
          type: integer
          format: int32
        LBCPUTHRESHOLD:
          minimum: 0
          type: integer
          description: Load balance cpu threshold
          format: int32
          example: 50
        LBCHANGETHRESHOLD:
          minimum: 0
          type: integer
          description: Load balance change threshold
          format: int32
          example: 1
        LBMEMTHRESHOLD:
          minimum: 0
          type: integer
          description: Load balance memory threshold
          format: int32
          example: 50
        LBDISKQUEUELENTHRESHOLD:
          minimum: 0
          type: integer
          description: Load balance disk queue length threshold
          format: int32
          example: 50
        LBDISKREADLATENCYTHRESHOLD:
          minimum: 0
          type: integer
          description: Load balance disk read latency threshold
          format: int32
          example: 50
        LBDISKWRITELATENCYTHRESHOLD:
          minimum: 0
          type: integer
          description: Load balance disk write latency threshold
          format: int32
          example: 50
        LBINCLUDESESSIONCOUNT:
          type: boolean
          description: Does load balance include session count
          example: true
        LBUSECUSTOMSCRIPT:
          type: boolean
          description: Does load balance use custom script
          example: false
    StartSessionSettings:
      type: object
      properties:
        maxSessionLifeTime:
          type: integer
          description: The maximum number of minutes for a session. after this timeout
            user gets disconnected state , then session abide to to disconnectSessionTimeoutMins
            rule
          format: int32
          example: 1440
      description: Start Session Settings
    Template:
      required:
      - id
      type: object
      properties:
        id:
          type: string
          description: Template ID
          example: template-1
        name:
          type: string
          description: Template name
          readOnly: true
        orgId:
          type: string
          description: Organization ID
          readOnly: true
        location:
          type: string
          description: Template location
          readOnly: true
        providerLocation:
          type: string
          description: Provider location
          readOnly: true
        templateType:
          type: string
          description: Template type
          readOnly: true
          enum:
          - DEDICATED
          - FLOATING
          - MULTI_SESSION
          - RDSH
          - WVD
          - APP_CAPTURE_STUDIO
        clientAccessLicenseApplicable:
          type: boolean
          description: 'clientAccessLicenseApplicable is set to true if customer has
            RDS CAL for Server images. Ref : https://docs.microsoft.com/en-us/azure/virtual-desktop/overview'
          readOnly: true
        edgeDeploymentId:
          type: string
          description: Site ID/Edge Deployment Id
          readOnly: true
        powerPolicy:
          $ref: '#/components/schemas/PowerPolicy'
        imageReference:
          $ref: '#/components/schemas/ImageReference'
        providerInstance:
          $ref: '#/components/schemas/ProviderInstanceDTO'
        disabled:
          type: boolean
        avAgentInstalled:
          type: boolean
        activeDirectoryId:
          type: string
          description: Active Directory ID
          readOnly: true
        disassociateAction:
          type: string
          enum:
          - FORCEFUL
          - GRACEFUL
          - CLEANUP
        delete:
          type: boolean
          description: True when a DELETE call for a template has been made to portal,
            but the template has not yet finished deleting.
          readOnly: true
        agentCustomization:
          $ref: '#/components/schemas/AgentCustomization'
        transientLoadThresholdSecs:
          type: integer
          description: Time spacing (in seconds) between consecutive session placement
            on a MULTI-SESSIONtemplate VM. This property will be used to load balance
            session slots among theMULTI-SESSION template VMs. This value should be
            between 0 to 300
          format: int32
          example: 10
        vmMaintenancePolicy:
          $ref: '#/components/schemas/PortalVMMaintenancePolicy'
        flags:
          type: object
          additionalProperties:
            type: boolean
        viewTemplate:
          type: boolean
      description: List of templates
    EdgeRequest:
      type: object
    Site:
      required:
      - edges
      - name
      - orgId
      type: object
      properties:
        id:
          type: string
          description: Site Id
          readOnly: true
          example: site-id-12345
        name:
          type: string
          description: Site name
          example: site1
        orgId:
          type: string
          description: Site OrgId
          example: org-id-12345
        projectId:
          type: string
          description: Project ID that owns this Site (null if scoped to the Org)
          example: 0123456789
        location:
          type: string
          description: Location that is mapped with Org Id
          readOnly: true
          example: US
        description:
          type: string
          description: Site description
          example: Site-desc
        geoGraphicLocation:
          type: string
          enum:
          - US
          - EU
          - APJ
          - UK
        edges:
          type: array
          description: List of edges
          items:
            $ref: '#/components/schemas/Edge'
        createdAt:
          type: string
          description: Time when site was created
          format: date-time
          readOnly: true
        updatedAt:
          type: string
          description: Time when site was updated
          format: date-time
          readOnly: true
    HomesiteMapping:
      required:
      - domain
      - entityId
      - entityName
      - homeSiteId
      - homeSiteName
      - orgId
      - type
      type: object
      properties:
        id:
          type: string
          description: Home site mapping Id
          readOnly: true
          example: hm-id-12345
        entityId:
          type: string
          description: Home site entity Id
          example: en-id-12345
        entityName:
          type: string
          description: Home site entity Name
          example: en-name-12345
        domain:
          type: string
          description: Entity domain
          example: domain-1
        homeSiteId:
          type: string
          description: Home site Id
          example: '05650'
        homeSiteName:
          type: string
          description: Home site Name
          example: site-1
        orgId:
          type: string
          description: Home site OrgId Id
          example: org-id-12345
        location:
          type: string
          description: Location that is mapped with Org Id
          readOnly: true
          example: US
        type:
          type: string
          description: List of Type USER or GROUP
          enum:
          - USER
          - GROUP
        createdAt:
          type: string
          description: Time when home site mapping was created
          format: date-time
          readOnly: true
        updatedAt:
          type: string
          description: Time when home site mapping was updated
          format: date-time
          readOnly: true
    UserLogoffReq:
      required:
      - agentSessionGuid
      - sessionType
      - userId
      - vmId
      type: object
      properties:
        userId:
          type: string
          description: User ID
        sessionType:
          type: string
          description: Session Type
          default: DESKTOP
          enum:
          - DESKTOP
          - APPLICATION
        vmId:
          type: string
          description: VM Id
        agentSessionGuid:
          type: string
          description: Agent Session GUID
        dtemplateId:
          type: string
      description: Individual User Logoff Req.
    AppRequest:
      type: object
      properties:
        orgId:
          type: string
          description: organization id for authorization
          example: 1d2d6889-506a-424d-a162-12345565882b
        poolAppMappings:
          type: array
          description: Pool and appId/appGroupId pairs to be searched for
          example:
          - poolId: 1234dddf125ef01722b7bcc5
            appId: 1234dddf567ef01722b7bcc5
            appGroupId: 12sfghddg1a7352122b7bcc5
          items:
            $ref: '#/components/schemas/PoolAppMapping'
    PoolAppMapping:
      type: object
      properties:
        poolId:
          type: string
          description: Pool id for which to search the application
          example: pool-id-1
        appId:
          type: string
          description: Application id to be searched for a pool
          example: app-id-1
        appGroupId:
          type: string
          description: Application Group Id to be searched for a pool
          example: 'Nullable Field, Example: app-group-1'
        appIdentifier:
          type: string
          description: Application Identifier to be searched for a pool
          example: 'Nullable Field, Example: app-identifier-1'
        applicationType:
          type: string
          description: application type
          example: INSTALLED, APP_VOLUMES
          enum:
          - INSTALLED
          - APP_VOLUMES
          - MANUAL
      description: Pool and appId/appGroupId pairs to be searched for
      example:
      - poolId: 1234dddf125ef01722b7bcc5
        appId: 1234dddf567ef01722b7bcc5
        appGroupId: 12sfghddg1a7352122b7bcc5
    ApplicationItemResultTO:
      required:
      - appName
      - poolName
      type: object
      properties:
        poolId:
          type: string
          description: Pool ID
          readOnly: true
          example: pool-id-12345
        poolName:
          type: string
          description: Pool name
          example: pg-123
        appVersion:
          type: string
          description: Application's version
          example: 1.0.0
        appName:
          type: string
          description: Application's name
          example: Chrome
        appDisplayName:
          type: string
          description: Application's display name
          example: Google Chrome
        applications:
          type: array
          description: List of applications
          items:
            $ref: '#/components/schemas/ApplicationItem'
        applicationType:
          type: string
          description: application type
          example: INSTALLED, APP_VOLUMES
          enum:
          - INSTALLED
          - APP_VOLUMES
          - MANUAL
        appPublisher:
          type: string
          description: application publisher
          example: Microsoft Corporation
        appVersions:
          type: array
          description: application versions
          example:
          - v1
          - v2
          items:
            type: string
            description: application versions
            example: '["v1","v2"]'
        appGroupId:
          type: string
          description: Application Group Id generated by grouping apps based on App
            name + publisher. Currently implemented for installed Apps
          example: 'Nullable field, Example: mongo-uuid'
        appIdentifier:
          type: string
          description: Application Identifier
    PageApplicationItemResultTO:
      type: object
      properties:
        totalPages:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: '#/components/schemas/ApplicationItemResultTO'
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/SortObject'
        first:
          type: boolean
        last:
          type: boolean
        pageable:
          $ref: '#/components/schemas/PageableObject'
        numberOfElements:
          type: integer
          format: int32
        empty:
          type: boolean
    EntitlementUnassignReq:
      required:
      - resourceDetails
      type: object
      properties:
        userIds:
          type: array
          description: List of users to be unassigned
          example:
          - user-id-3
          - user-id-4
          items:
            type: string
            description: List of users to be unassigned
            example: '["user-id-3","user-id-4"]'
        groupIds:
          type: array
          description: List of groups to be unassigned
          example:
          - group-id-1
          - group-id-2
          items:
            type: string
            description: List of groups to be unassigned
            example: '["group-id-1","group-id-2"]'
        resourceDetails:
          type: array
          description: List of apps/desktop to be unassigned.
          example:
          - resourceId: app-id-1
            poolId: pg-id-2
          - poolId: pg-id-2
          - appGroupId: app-grp-id-1
            poolId: pg-id-2
            appType: INSTALLED
          - appIdentifier: app-identifier-1
            poolId: pg-id-2
            appType: APP_VOLUMES
          items:
            $ref: '#/components/schemas/ResourceDetail'
    EntilementBulkUnassignStatusRes:
      type: object
      properties:
        status:
          type: string
        jobId:
          type: string
    DesktopSpecRequestTO:
      type: object
      properties:
        launchId:
          type: string
          description: Launch ID
          example: p:12345
        nativeClient:
          type: boolean
          description: Launch client - HTML or native client
        protocol:
          $ref: '#/components/schemas/Protocol'
        clientId:
          type: string
          description: Client ID
          example: clientid
        sessionId:
          type: string
          description: ID of the session to resume
          example: abcd
        resumeSession:
          type: boolean
    DesktopSpecJwt:
      type: object
      properties:
        specJwt:
          type: string
          description: Desktop spec JWT
          example: jwt
        brokerUrl:
          type: string
          description: Broker/Connection Service URL
          example: https://broker.vwmare.com
        launchURL:
          type: string
          description: Desktop launch URL
          example: https://broker.vwmare.com/launch?dspec=jwt
        id:
          type: string
          description: LaunchId i.e. EntitlementId or sessionId which this DSpec represents
          example: ent-and-123
        gwUrl:
          type: string
          description: 'The URL of the UAG if using reverse connect. '
          example: uag.example.com
        deviceId:
          type: string
          description: Machine identity when joined to Azure AD
          example: a6ac59ff-8547-4bab-b639-f0319a664f75
        ssoEnabled:
          type: boolean
          description: Boolean for SSO is enabled or not
          example: true
        dspecId:
          type: string
    Client:
      required:
      - id
      - instanceId
      - localTime
      - type
      - version
      type: object
      properties:
        dspecToken:
          type: string
        type:
          type: string
        id:
          type: string
        version:
          type: string
        instanceId:
          type: string
        localTime:
          type: string
      description: hz client metadata
    ClientError:
      required:
      - client
      - errors
      type: object
      properties:
        traceId:
          type: string
          description: Trace Id from request
          example: 3ae7effc-7a75-4da4-ab85-65e6140c616d
        resource:
          type: string
          description: api which caused error
          example: /portal/v1/users/spec
        httpStatusCode:
          type: integer
          description: http status code
          format: int32
          example: 503
        errors:
          maxItems: 2147483647
          minItems: 1
          type: array
          description: detailed error information
          items:
            $ref: '#/components/schemas/ClientErrorDetail'
        client:
          $ref: '#/components/schemas/Client'
        dspecId:
          type: string
      description: send client error to HOC
    ClientErrorDetail:
      required:
      - code
      - domain
      - timestampInUtc
      type: object
      properties:
        code:
          type: string
        message:
          type: string
        detail:
          type: string
        domain:
          type: string
          enum:
          - SG_AUTH
          - SG_CONNECTION_SERVICE
          - SG_PORTAL
          - SG_RX_SERVICE
          - SG_UAG
        severity:
          type: string
        timestampInUtc:
          type: string
        parameters:
          type: object
          additionalProperties:
            type: string
        cause:
          type: string
      description: detailed error information
    ProtocolTokenRepresentation:
      type: object
      properties:
        userId:
          type: string
        protocolHost:
          type: string
        protocolPort:
          type: string
        protocolToken:
          type: string
        protocol:
          type: string
        edgeModuleId:
          type: string
        uagFqdn:
          type: string
    IconDetail:
      type: object
      properties:
        appId:
          type: string
          description: Application ID
          example: appId
        width:
          type: integer
          description: width
          format: int32
          example: 200
        height:
          type: integer
          description: height
          format: int32
          example: 280
        iconHash:
          type: string
          description: iconHash
          example: fdhfds-jhfkfhs
        iconUrl:
          type: string
          description: iconUrl
          example: https://azure.com/storage/org/test.png
        path:
          type: string
          description: icon path
          example: https://<hdc>//test.png
      description: List of Icon details
      readOnly: true
    PageResourceTO:
      type: object
      properties:
        totalPages:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: '#/components/schemas/ResourceTO'
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/SortObject'
        first:
          type: boolean
        last:
          type: boolean
        pageable:
          $ref: '#/components/schemas/PageableObject'
        numberOfElements:
          type: integer
          format: int32
        empty:
          type: boolean
    ResourceTO:
      type: object
      properties:
        orgId:
          type: string
          description: Org Id
          readOnly: true
          example: 79949827-af95-4c02-8763-092c0d208663
        orgName:
          type: string
          description: Org Name
          readOnly: true
          example: Test Org
        resourceIdentifier:
          type: string
          description: Resource Identifier
          readOnly: true
          example: 6597a8ebf00be548cfe71866659f9eb9fa3c5f2cdd417615
        resourceName:
          type: string
          description: Resource Name
          readOnly: true
          example: Test Application
        displayName:
          type: string
          description: Resource display Name
          readOnly: true
          example: Test Application
        poolGroupId:
          type: string
          description: PoolGroup Id
          readOnly: true
          example: 62cd24f76ad5583910084c25
        poolGroupName:
          type: string
          description: PoolGroup Name
          readOnly: true
          example: Test PG
        resourceType:
          type: string
          description: Resource Type
          readOnly: true
          example: DESKTOP,APPLICATION
        icons:
          type: array
          description: List of Icon details
          readOnly: true
          items:
            $ref: '#/components/schemas/IconDetail'
        applicationType:
          type: string
          description: Application Type
          readOnly: true
          example: INSTALLED|MANUAL
        templateType:
          type: string
          description: Template Type
          readOnly: true
          example: DEDICATED|FLOATING|MULTI_SESSION
    DesktopSpecReq:
      type: object
      properties:
        entitlementId:
          type: string
          description: Entitlement ID
          example: ent-id-12345
          deprecated: true
        launchId:
          type: string
          description: Launch ID
          example: p:12345
        nativeClient:
          type: boolean
          description: Launch client - HTML or native client
        protocol:
          $ref: '#/components/schemas/Protocol'
        templateId:
          type: string
          description: Template ID
          example: 6012393dfdfdf8
        vmId:
          type: string
          description: VM ID
          example: ded1000
        deviceId:
          type: string
          description: Device ID
          example: a6ac59ff-8547-4bab-b639-f0319a664f75
        clientId:
          type: string
          description: Client ID
          example: clientid
        clientSessionId:
          type: string
          description: Client Session ID
          example: UUID string
        appName:
          type: string
          description: App Name to launch
          example: Notepad
        sessionId:
          type: string
          description: ID of the session to resume
          example: abcd
        userAccessType:
          type: string
        resumeSession:
          type: boolean
        azureADJoined:
          type: boolean
    UserActionReq:
      required:
      - actionType
      - id
      type: object
      properties:
        actionType:
          type: string
          description: 'Action type: LOGOFF, RESTART etc'
          example: LOGOFF
          enum:
          - LOGOFF
          - RESTART
        id:
          type: string
          description: resource ID on which action to be performed.
          example: ent-id-12345
      description: User action req.
    UserDesktopMappingAssignRequest:
      required:
      - orgId
      - poolId
      - templateId
      - userId
      - userName
      - userPrincipalName
      - vmId
      type: object
      properties:
        userId:
          type: string
          description: User Id
        userPrincipalName:
          type: string
          description: User principal name from identity provider
          example: john.smith@horizonv2.onmicrosof.com
        userName:
          type: string
          description: User Name
        orgId:
          type: string
          description: Org ID that owns the entitlement user belongs to
          example: 0123456789
        entitlementId:
          type: string
          deprecated: true
        poolId:
          type: string
          description: Pool user belongs to
          example: pool-id-12345
        templateId:
          type: string
          description: Template Id
        vmId:
          type: string
          description: Dedicated VM for the user
    UserDesktopMapping:
      required:
      - orgId
      - templateId
      - userId
      - userName
      - userPrincipalName
      - vmId
      type: object
      properties:
        id:
          type: string
        userId:
          type: string
        userPrincipalName:
          type: string
        userName:
          type: string
        orgId:
          type: string
        location:
          type: string
        entitlementId:
          type: string
          deprecated: true
        poolId:
          type: string
        templateId:
          type: string
        vmId:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        disabled:
          type: boolean
        autoAssign:
          type: boolean
    UserDesktopMappingDeassignRequest:
      required:
      - templateId
      - userId
      - vmId
      type: object
      properties:
        userId:
          type: string
          description: User Id
        entitlementId:
          type: string
          deprecated: true
        poolId:
          type: string
          description: Pool ID
          example: pool-id-12345
        templateId:
          type: string
          description: Template Id
        vmId:
          type: string
          description: Dedicated VM for the user
    VmUser:
      type: object
      properties:
        vmId:
          type: string
          description: VM ID
        userId:
          type: string
          description: User ID
        username:
          type: string
          description: User Name
        agentSessionGuid:
          type: string
          description: Agent session GUID
        agentSessionId:
          type: string
          description: Agent session ID
        agentStaticSessionGuid:
          type: string
          description: Agent Static session GUID
        sessionType:
          type: string
          description: Session type
        templateType:
          type: string
          description: Template type
        clientId:
          type: string
          description: Client ID
        sessionStatus:
          type: string
          description: Session status
        lastAssignedTime:
          type: string
          description: Last assigned time
          format: date-time
        entitlementId:
          type: string
          description: Entitlement ID
        remotableContent:
          type: boolean
          description: For application sessions. Returns true if there is something
            to remote. (when session is not empty)
        dspecId:
          type: string
      description: VM session information
    UserDesktopMappingBulkRequest:
      required:
      - orgId
      - poolId
      - userDesktopMappings
      type: object
      properties:
        orgId:
          type: string
          description: Org ID that owns the entitlement user belongs to
          example: 0123456789
        userDesktopMappings:
          type: array
          items:
            $ref: '#/components/schemas/UserDesktopMappingTO'
        poolId:
          type: string
          description: Pool user belongs to
          example: pool-id-12345
    UserDesktopMappingTO:
      required:
      - templateId
      - userId
      - userName
      - userPrincipalName
      - vmId
      type: object
      properties:
        userId:
          type: string
        userPrincipalName:
          type: string
        userName:
          type: string
        templateId:
          type: string
        vmId:
          type: string
    UserDesktopMappingBulkResponse:
      type: object
      properties:
        resourceId:
          type: string
        taskId:
          type: string
    ValidateEdgeRequest:
      required:
      - providerInstanceId
      - providerType
      - siteId
      type: object
      properties:
        siteId:
          type: string
          description: Site Id
          example: site-id-12345
        providerInstanceId:
          type: string
          description: provider instance id
          example: prov-1234
        providerType:
          type: string
          description: provider instance type
          example: azure/vsphere/view
    SiteRequest:
      required:
      - name
      - orgId
      type: object
      properties:
        id:
          type: string
          description: Site Id
          example: site-id-12345
        name:
          maxLength: 64
          minLength: 0
          type: string
          description: Site name
          example: site1
        orgId:
          type: string
          description: Site OrgId
          example: org-id-12345
        projectId:
          type: string
          description: Project ID that owns this Site (null if scoped to the Org)
          example: 0123456789
        description:
          type: string
          description: Site description
          example: Site-desc
    SiteAllowedRegionMetaData:
      required:
      - geographicLocationName
      - regionName
      type: object
      properties:
        geographicLocationName:
          type: string
          description: Geographic location
          example: US,EU,APJ
          enum:
          - US
          - EU
          - APJ
          - UK
        regionName:
          type: string
          description: Region names
          example: westus2,japaneast
        createdAt:
          type: string
          description: Time when site was created
          format: date-time
          readOnly: true
        updatedAt:
          type: string
          description: Time when site was updated
          format: date-time
          readOnly: true
    BulkSessionActionReq:
      required:
      - actionType
      - sessionIds
      type: object
      properties:
        actionType:
          type: string
          description: 'Action type: BULK_LOGOFF, BULK_DISCONNECT etc'
          example: BULK_LOGOFF
          enum:
          - BULK_LOGOFF
          - BULK_DISCONNECT
        sessionIds:
          type: array
          description: Session/Udm ids on which action to be performed.
          items:
            type: string
            description: Session/Udm ids on which action to be performed.
      description: Bulk Session action req.
    SessionBatchReq:
      required:
      - userGuidDTOs
      type: object
      properties:
        userGuidDTOs:
          type: array
          description: List of UserIds and corresponding Agent session Guids
          items:
            $ref: '#/components/schemas/UserGuidDTO'
      description: Filter Session by GUID batch req.
    UserGuidDTO:
      required:
      - agentSessionGuid
      - userId
      type: object
      properties:
        userId:
          type: string
          description: userId
          example: userId
        agentSessionGuid:
          type: array
          description: List of AgentSessionGuid
          items:
            type: string
            description: List of AgentSessionGuid
      description: List of UserIds and corresponding Agent session Guids
    InvSessionDTO:
      type: object
      properties:
        id:
          type: string
        vmId:
          type: string
        userId:
          type: string
        username:
          type: string
        entitlementId:
          type: string
        templateId:
          type: string
        agentSessionGuid:
          type: string
        sessionType:
          type: string
        templateType:
          type: string
        viewAgentVersion:
          type: string
        haiAgentVersion:
          type: string
        normalizedAgentVersion:
          type: string
        clientId:
          type: string
        sessionStatus:
          type: string
        lastAssignedTime:
          type: string
          format: date-time
        lastLoginTime:
          type: string
          format: date-time
        providerLabel:
          type: string
        edgeName:
          type: string
        edgeId:
          type: string
        siteName:
          type: string
        siteId:
          type: string
        poolName:
          type: string
        poolId:
          type: string
        clientSessionId:
          type: string
        dspecId:
          type: string
        multiSessionEnabled:
          type: boolean
    AdEntity:
      required:
      - entityId
      - entityName
      type: object
      properties:
        entityId:
          type: string
          description: User or Group Id
          example: user-id-12345
        entityName:
          type: string
          description: User or Group Name
          example: user-name-12345
        domain:
          type: string
          description: entity domain
          example: domain-1
      description: List of groups getting mapped to the home ste
      example:
      - entityId: group-id-1
        entityName: group-1
    HomesiteMappingBatchReq:
      required:
      - homeSiteId
      - orgId
      type: object
      properties:
        homeSiteId:
          type: string
          description: HomeSite Id
          example: '05650'
        homeSiteName:
          type: string
          description: HomeSite Name
          example: site-1
        orgId:
          type: string
          description: HomeSite OrgId Id
          example: org-id-12345
        users:
          type: array
          description: List of users getting mapped to the home ste
          example:
          - entityId: group-id-1
            entityName: group-1
          items:
            $ref: '#/components/schemas/AdEntity'
        groups:
          type: array
          description: List of groups getting mapped to the home ste
          example:
          - entityId: group-id-1
            entityName: group-1
          items:
            $ref: '#/components/schemas/AdEntity'
        createdAt:
          type: string
          description: Time when HomeSite mapping was created
          format: date-time
          readOnly: true
        updatedAt:
          type: string
          description: Time when HomeSite mapping was updated
          format: date-time
          readOnly: true
    AdEntityResponse:
      required:
      - entityId
      - entityName
      type: object
      properties:
        entityId:
          type: string
        entityName:
          type: string
        message:
          type: string
    HomesiteMappingBatchResp:
      type: object
      properties:
        homesiteMappingsCreated:
          type: array
          items:
            $ref: '#/components/schemas/HomesiteMapping'
        homesiteMappingsfailedFor:
          type: array
          items:
            $ref: '#/components/schemas/AdEntityResponse'
    PatchEntitlementV2Req:
      type: object
      properties:
        userIdsToAdd:
          type: array
          description: List of users to be added to the entitlement
          example:
          - user-id-3
          - user-id-4
          items:
            type: string
            description: List of users to be added to the entitlement
            example: '["user-id-3","user-id-4"]'
        userIdsToRemove:
          type: array
          description: List of users to be removed from the entitlement
          example:
          - user-id-1
          - user-id-2
          items:
            type: string
            description: List of users to be removed from the entitlement
            example: '["user-id-1","user-id-2"]'
        groupIdsToAdd:
          type: array
          description: List of user groups to be added to entitlement
          example:
          - group-id-3
          - group-id-4
          items:
            type: string
            description: List of user groups to be added to entitlement
            example: '["group-id-3","group-id-4"]'
        groupIdsToRemove:
          type: array
          description: List of groups to be removed from the entitlement
          example:
          - group-id-1
          - group-id-2
          items:
            type: string
            description: List of groups to be removed from the entitlement
            example: '["group-id-1","group-id-2"]'
        resourceDetailsToAdd:
          type: array
          description: List of apps to be added to the entitlement
          example:
          - group-id-1
          - group-id-2
          items:
            $ref: '#/components/schemas/ResourceDetail'
        resourceDetailsToRemove:
          type: array
          description: List of apps to be removed from the entitlement
          example:
          - group-id-1
          - group-id-2
          items:
            $ref: '#/components/schemas/ResourceDetail'
        poolIdsToAdd:
          type: array
          description: List of poolIds to be added to the entitlement
          example:
          - group-id-1
          - group-id-2
          items:
            type: string
            description: List of poolIds to be added to the entitlement
            example: '["group-id-1","group-id-2"]'
        poolIdsToRemove:
          type: array
          description: List of poolIds to be removed from the entitlement
          example:
          - group-id-1
          - group-id-2
          items:
            type: string
            description: List of poolIds to be removed from the entitlement
            example: '["group-id-1","group-id-2"]'
    PatchPoolReq:
      type: object
      properties:
        powerPolicy:
          $ref: '#/components/schemas/PowerPolicy'
        templatesToAdd:
          type: array
          description: List of templates to be added to the pool
          example:
          - dataCenterId: datacenter-1
            edgeDeploymentId: string
            id: template-3
            location: string
            name: string
            orgId: string
            powerPolicy:
              base: TOTAL
              enabled: false
              min: 2
              minUnit: PERCENTAGE
              occupancyPresetMode: BALANCED
              powerOffProtectTimeMins: 30
              powerSchedules:
              - allDay: false
                endTime: '17:00'
                min: 5
                name: VmwareWeekdaySchedule
                occursOn: 31
                startTime: 08:00
                timeZone: Asia/Tokyo
            templateType: DEDICATED
          items:
            $ref: '#/components/schemas/Template'
        templatesToRemove:
          type: array
          description: List of templates to be removed from the pool
          example:
          - template-1
          - template-2
          items:
            type: string
            description: List of templates to be removed from the pool
            example: '["template-1","template-2"]'
        enableSSO:
          type: boolean
          description: Enable SSO on this pool.
        showAssignedMachineName:
          type: boolean
          description: Displays the host name of the assigned machine instead of the
            pool group display name (only for dedicated desktops)
        applicationsToAdd:
          type: array
          description: List of applications to be added to the pool
          items:
            $ref: '#/components/schemas/ApplicationItem'
        applicationsToRemove:
          type: array
          description: List of applications to be removed from the pool
          items:
            $ref: '#/components/schemas/ApplicationItem'
        displayName:
          type: string
          description: Pool's display name
          example: NewPool
        agentCustomization:
          $ref: '#/components/schemas/AgentCustomization'
        transientLoadThresholdSecs:
          type: integer
          description: Time spacing (in seconds) between consecutive session placement
            on a MULTI-SESSIONtemplate VM. This property will be used to load balance
            session slots among theMULTI-SESSION template VMs. This value should be
            between 0 to 300
          format: int32
          example: 10
        startSessionSettings:
          $ref: '#/components/schemas/StartSessionSettings'
        vmMaintenancePolicy:
          $ref: '#/components/schemas/PortalVMMaintenancePolicy'
        avApplicationDeliveryPrecedence:
          type: string
          description: 'User preference of package delivery within AV application,
            in case of conflict : POOL_GROUP/USER_ENTITLEMENT'
          enum:
          - POOL_GROUP
          - USER_ENTITLEMENT
        avApplicationToAdd:
          type: array
          description: Application list of AV application assignments at pool group
            level
          items:
            $ref: '#/components/schemas/AvApplication'
        avApplicationToRemove:
          type: array
          description: Application list of AV application assignments at pool group
            level
          items:
            $ref: '#/components/schemas/AvApplication'
        directConnect:
          type: boolean
          description: Enable DirectConnect on this pool.
    AllowedSiteMetaDataRequest:
      required:
      - regionName
      - regionPoint
      type: object
      properties:
        regionName:
          type: string
          description: Region names
          example: westus2,japaneast
        regionPoint:
          $ref: '#/components/schemas/GeoJsonPoint'
      description: List of site geo graphic meta data to be removed
    AllowedSitePatchRequest:
      type: object
      properties:
        siteAllowedToAdd:
          maxItems: 100
          minItems: 0
          type: array
          description: List of site geo graphic meta data to be added
          items:
            $ref: '#/components/schemas/AllowedSiteMetaDataRequest'
        siteAllowedToRemove:
          maxItems: 100
          minItems: 0
          type: array
          description: List of site geo graphic meta data to be removed
          items:
            $ref: '#/components/schemas/AllowedSiteMetaDataRequest'
    GeoJsonPoint:
      type: object
      properties:
        x:
          type: number
          format: double
        y:
          type: number
          format: double
        type:
          type: string
        coordinates:
          type: array
          items:
            type: number
            format: double
      description: Point of the region
      example:
        type: Point
        coordinates:
        - 77.281296
        - 12.715035
    AppLaunchItem:
      type: object
      properties:
        type:
          type: string
          description: application type
        appName:
          type: string
          description: application name
        icons:
          type: array
          description: Icon details
          items:
            $ref: '#/components/schemas/IconDetail'
        registeredExtensions:
          $ref: '#/components/schemas/RegisteredExtensions'
        version:
          type: string
          description: app version
      description: Application Launch Item ID if applicable - This is applicable only
        for application entitlements
      example: fkds76fs98fds09fs
    DedicatedDesktop:
      type: object
      properties:
        id:
          type: string
          description: User Desktop Mapping ID
        templateId:
          type: string
          description: Template ID of the VM
        vmId:
          type: string
          description: VM ID
      description: Dedicated desktop information if applicable - This is applicable
        only for Dedicated entitlements
    LaunchItemsDTO:
      required:
      - entitlementType
      - name
      - protocols
      type: object
      properties:
        id:
          type: string
          description: Pool/Entitlement ID
          readOnly: true
          example: ent-id-12345
        name:
          type: string
          description: Pool/AppDisplay/Entitlement name or dedicated vmId
          example: entitlement-123
        entitlementType:
          type: string
          description: Entitlement type
          example: DESKTOP
          enum:
          - DESKTOP
          - APPLICATION
          - DESKTOP_APPLICATION
        protocols:
          type: array
          description: List of supported desktop protocols
          items:
            $ref: '#/components/schemas/Protocol'
        restartable:
          type: boolean
          description: Whether the launch item is restartable
        vm:
          $ref: '#/components/schemas/DedicatedDesktop'
        app:
          $ref: '#/components/schemas/AppLaunchItem'
        preferredClientType:
          type: string
          description: Preferred Client type
          enum:
          - HORIZON_CLIENT
          - BROWSER
        iconType:
          type: string
          description: Used by clients to determine defaults for icons.
          example: W365, DEFAULT
          enum:
          - DEFAULT
          - W365
        icons:
          type: array
          items:
            $ref: '#/components/schemas/IconDetail'
        originId:
          type: string
        appGroupId:
          type: string
          description: App Group Id
          example: 1234-244
        directConnect:
          type: boolean
    InvVmWithUser:
      type: object
      properties:
        agentStatus:
          type: string
          description: Agent status
        statusCode:
          type: integer
          description: Agent status code
          format: int32
        viewAgentVersion:
          type: string
          description: View Agent Version
        haiAgentVersion:
          type: string
          description: Hai Agent version
        timestamp:
          type: integer
          description: Agent message timestamp. The inventory will only store the
            the latest record ever seen, and discard stale ones if received later
          format: int64
        publicKey:
          type: string
        sessionPlacementStatus:
          type: string
          description: Indicates the availability of the vm for session placement
        maxSessions:
          type: integer
          description: Indicates maximum number of sessions supported by the VM
          format: int32
        vmFreeSessions:
          type: integer
          description: Indicates the number of free sessions on the VM
          format: int32
        createdAt:
          type: string
          format: date-time
          readOnly: true
        updatedAt:
          type: string
          format: date-time
          readOnly: true
        id:
          type: string
          description: VM ID
          readOnly: true
        cloudId:
          type: string
          description: VM ID from cloud provider
          readOnly: true
        lifecycleStatus:
          type: string
          description: VM lifecycle status
          readOnly: true
        image:
          type: string
          description: Image used to create the VM
          readOnly: true
        error:
          type: string
          description: Reason for error status
          readOnly: true
        privateIp:
          type: string
          readOnly: true
        powerState:
          type: string
          description: Power state
          readOnly: true
        snapshotId:
          type: string
          description: VM snapshot ID
          readOnly: true
        az:
          type: string
          description: Availability Zone id
          readOnly: true
        sessions:
          uniqueItems: true
          type: array
          description: Set of sessions with user details
          items:
            $ref: '#/components/schemas/VmUser'
        users:
          uniqueItems: true
          type: array
          description: Set of users assigned to the VM
          deprecated: true
          items:
            $ref: '#/components/schemas/VmUserV1'
    PageInvVmWithUser:
      type: object
      properties:
        totalPages:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: '#/components/schemas/InvVmWithUser'
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/SortObject'
        first:
          type: boolean
        last:
          type: boolean
        pageable:
          $ref: '#/components/schemas/PageableObject'
        numberOfElements:
          type: integer
          format: int32
        empty:
          type: boolean
    VmUserV1:
      type: object
      properties:
        userId:
          type: string
          description: User's Id
        userName:
          type: string
          description: User's name
      description: Set of users assigned to the VM
    PagePool:
      type: object
      properties:
        totalPages:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: '#/components/schemas/Pool'
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/SortObject'
        first:
          type: boolean
        last:
          type: boolean
        pageable:
          $ref: '#/components/schemas/PageableObject'
        numberOfElements:
          type: integer
          format: int32
        empty:
          type: boolean
    OrgTO:
      type: object
      properties:
        orgId:
          type: string
          description: Org Id
          readOnly: true
          example: 79949827-af95-4c02-8763-092c0d208663
        orgName:
          type: string
          description: Org Name
          readOnly: true
          example: Test Org
    PagePoolGroupTO:
      type: object
      properties:
        totalPages:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: '#/components/schemas/PoolGroupTO'
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/SortObject'
        first:
          type: boolean
        last:
          type: boolean
        pageable:
          $ref: '#/components/schemas/PageableObject'
        numberOfElements:
          type: integer
          format: int32
        empty:
          type: boolean
    PoolGroupTO:
      type: object
      properties:
        orgId:
          type: string
          description: Org Id
          readOnly: true
          example: 79949827-af95-4c02-8763-092c0d208663
        poolGroupId:
          type: string
          description: PoolGroup Id
          readOnly: true
          example: 62cd24f76ad5583910084c25
        poolGroupName:
          type: string
          description: PoolGroup Name
          readOnly: true
          example: Test PG
        poolGroupType:
          type: string
          description: PoolGroup Type
          readOnly: true
          example: DESKTOP_APPLICATION,DESKTOP,APPLICATION
        templateType:
          type: string
          description: Template Type
          readOnly: true
          example: DEDICATED|FLOATING|MULTI_SESSION
    ExternalIntLaunchItem:
      required:
      - launchItem
      type: object
      properties:
        launchItem:
          $ref: '#/components/schemas/LaunchItemsDTO'
    EntitlementUnassignTask:
      type: object
      properties:
        id:
          type: string
        orgId:
          type: string
        location:
          type: string
        inputEntitlementIds:
          type: array
          items:
            type: string
        failedEntitlementIds:
          type: array
          items:
            type: string
        processedEntitlementIds:
          type: array
          items:
            type: string
        groupIds:
          type: array
          items:
            type: string
        userIds:
          type: array
          items:
            type: string
        resourceDetails:
          type: array
          items:
            $ref: '#/components/schemas/ResourceDetail'
        status:
          type: string
          enum:
          - INIT
          - RUNNING
          - FINISHED
          - ERROR
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        removeAllUsers:
          type: boolean
        sendNotification:
          type: boolean
    PageEntitlementV2:
      type: object
      properties:
        totalPages:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: '#/components/schemas/EntitlementV2'
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/SortObject'
        first:
          type: boolean
        last:
          type: boolean
        pageable:
          $ref: '#/components/schemas/PageableObject'
        numberOfElements:
          type: integer
          format: int32
        empty:
          type: boolean
    UserSessionDTO:
      required:
      - protocols
      - sessionType
      type: object
      properties:
        id:
          type: string
          description: ID
          example: abcd-edff
        sessionId:
          type: string
          description: session ID
          example: ent-id-12345
        sessionType:
          type: string
          description: Session type
          example: APPLICATION
          enum:
          - DESKTOP
          - APPLICATION
        protocols:
          type: array
          description: List of supported protocols
          items:
            $ref: '#/components/schemas/Protocol'
        protocolMatch:
          type: boolean
          description: Boolean, true if there is one or more protocols available that
            this client can use
        hasRemotableAssets:
          type: boolean
          description: Whether this remote session has assets that can be remotable.
            This helps the client decide whether to automatically reconnect to the
            session.
        originId:
          type: string
          description: Identifier for the environment in which the session is running
    ActionStatus:
      type: object
      properties:
        actionType:
          type: string
          description: 'Action type: LOGOFF'
          example: LOGOFF
          enum:
          - LOGOFF
          - RESTART
        status:
          type: string
          description: 'Status: pending/completed'
          example: PENDING
    PageTask:
      type: object
      properties:
        totalPages:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: '#/components/schemas/Task'
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/SortObject'
        first:
          type: boolean
        last:
          type: boolean
        pageable:
          $ref: '#/components/schemas/PageableObject'
        numberOfElements:
          type: integer
          format: int32
        empty:
          type: boolean
    Task:
      required:
      - entityId
      - location
      - orgId
      - status
      - taskType
      type: object
      properties:
        id:
          type: string
        entityId:
          type: string
        orgId:
          type: string
        location:
          type: string
        taskType:
          type: string
          enum:
          - ENTITLEMENT_UNASSIGN_TASK
          - ENTITLEMENT_CREATE_SYNC_TASK
          - ENTITLEMENT_PATCH_SYNC_TASK
          - POOL_PATCH_SYNC_TASK
          - POOL_DELETE_TASK
          - AV_APPLICATION_REMOVE_TASK
        taskDetails:
          type: object
          additionalProperties:
            type: object
        status:
          type: string
          enum:
          - INIT
          - RUNNING
          - FINISHED
          - ERROR
        sendNotification:
          type: boolean
        errorResponse:
          $ref: '#/components/schemas/ErrorResponse'
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    SiteEdgeResponse:
      required:
      - edge
      - name
      - orgId
      type: object
      properties:
        id:
          type: string
          description: Site Id
          readOnly: true
          example: site-id-12345
        name:
          type: string
          description: Site name
          example: site1
        orgId:
          type: string
          description: Site OrgId
          example: org-id-12345
        description:
          type: string
          description: Site description
          example: Site-desc
        edge:
          $ref: '#/components/schemas/Edge'
    AllowedSiteResponse:
      required:
      - geographicLocation
      type: object
      properties:
        geographicLocation:
          type: string
          description: Geographic location
          example: US,EU,APJ
          enum:
          - US
          - EU
          - APJ
          - UK
        sites:
          type: array
          description: List of sites
          items:
            $ref: '#/components/schemas/Site'
    PageSiteAllowedRegionMetaData:
      type: object
      properties:
        totalPages:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: '#/components/schemas/SiteAllowedRegionMetaData'
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/SortObject'
        first:
          type: boolean
        last:
          type: boolean
        pageable:
          $ref: '#/components/schemas/PageableObject'
        numberOfElements:
          type: integer
          format: int32
        empty:
          type: boolean
    PageHomesiteMapping:
      type: object
      properties:
        totalPages:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: '#/components/schemas/HomesiteMapping'
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/SortObject'
        first:
          type: boolean
        last:
          type: boolean
        pageable:
          $ref: '#/components/schemas/PageableObject'
        numberOfElements:
          type: integer
          format: int32
        empty:
          type: boolean
    VMRegisterTO:
      required:
      - cloudId
      type: object
      properties:
        id:
          type: string
          description: VM ID
          example: vm1
        cloudId:
          type: string
          description: VM ID from cloud provider
    InventoryVM:
      type: object
      properties:
        id:
          type: string
          description: VM ID
          readOnly: true
        cloudId:
          type: string
          description: VM ID from cloud provider
          readOnly: true
        lifecycleStatus:
          type: string
          description: VM lifecycle status
          readOnly: true
        image:
          type: string
          description: Image used to create the VM
          readOnly: true
        error:
          type: string
          description: Reason for error status
          readOnly: true
        privateIp:
          type: string
          readOnly: true
        powerState:
          type: string
          description: Power state
          readOnly: true
        snapshotId:
          type: string
          description: VM snapshot ID
          readOnly: true
        agentStatus:
          type: string
          description: Agent status
        statusCode:
          type: integer
          description: Agent status code
          format: int32
        version:
          type: string
          description: Agent version
          deprecated: true
        viewAgentVersion:
          type: string
          description: View Agent version
        haiAgentVersion:
          type: string
          description: HAI Agent version
        timestamp:
          type: integer
          description: Agent message timestamp. The inventory will only store the
            the latest record ever seen, and discard stale ones if received later
          format: int64
        publicKey:
          type: string
        sessionPlacementStatus:
          type: string
          description: Indicates the availability of the vm for session placement
        maxSessions:
          type: integer
          description: Indicates maximum number of sessions supported by the VM
          format: int32
        vmFreeSessions:
          type: integer
          description: Indicates the number of free sessions on the VM
          format: int32
        updatedLoadIndexAt:
          type: string
          format: date-time
          readOnly: true
        loadIndex:
          type: number
          format: double
          readOnly: true
        createdAt:
          type: string
          format: date-time
          readOnly: true
        updatedAt:
          type: string
          format: date-time
          readOnly: true
        vmSize:
          type: string
          description: VM size
          readOnly: true
          example: Standard_D2_v3
        osDiskSize:
          type: integer
          description: OS disk size in GB
          format: int32
          readOnly: true
        osDiskType:
          type: string
          description: OS disk type
          readOnly: true
          example: Standard_LRS
        az:
          type: string
          description: Availability Zone Id
          readOnly: true
        subnet:
          type: string
          description: VM subnet
          readOnly: true
      description: Inventory VM information
    DEMSettingTO:
      type: object
      properties:
        id:
          type: string
          description: Unique record ID
          readOnly: true
          example: 0123456789
        orgId:
          type: string
          description: Org ID that owns this record
          example: 0123456789
        location:
          type: string
          description: location
          readOnly: true
          example: US
        name:
          type: string
          description: DEM Setting name
          readOnly: true
          example: DEM 1
        configFilePath:
          type: string
          description: Dynamic Environment Manager configuration fileshare path
          example: \\FileServer\DEMConfig$\general
        associatedTemplateCount:
          type: integer
          description: Number of Pools using this DEM Setting
          format: int64
          readOnly: true
        syncStatus:
          type: string
          description: Synchronization status of the DEM setting
          readOnly: true
          enum:
          - SYNC_COMPLETE
          - SYNC_ERROR
          - SYNC_PENDING
        createdAt:
          type: string
          description: Record creation timestamp
          format: date-time
          readOnly: true
        updatedAt:
          type: string
          description: Record update timestamp
          format: date-time
          readOnly: true
        version:
          type: integer
          description: Record version (internal)
          format: int64
          readOnly: true
      description: Searchable fields are "id", "name", "configFilePath"
    TemplateQueryTO:
      required:
      - orgId
      type: object
      properties:
        orgId:
          type: string
          description: The org ID of templates to query. This is required
        search:
          type: string
          description: Standard syntax search for querying templates. Use this, or
            'ids'
    AdDomainStatus:
      type: object
      properties:
        adId:
          type: string
        message:
          type: string
        status:
          type: integer
          format: int32
    AdMonitoring:
      type: object
      properties:
        enabled:
          type: boolean
        interval:
          type: integer
          format: int32
      description: AD monitoring configuration and status
      readOnly: true
    AgentBridge:
      type: object
      properties:
        address:
          type: string
          example: 172.16.0.1
        port:
          type: string
          example: '8883'
      description: Connection information for agent MQTT bridge
      readOnly: true
    AgentMonitoringEdgeConfig:
      required:
      - dataToCollect
      type: object
      properties:
        interval:
          type: integer
          format: int32
        monitoringEnabled:
          type: boolean
        dataToCollect:
          type: array
          items:
            type: string
      description: Desired properties for agent configuration to be monitored
      readOnly: true
    AgentProxyInfo:
      required:
      - server
      type: object
      properties:
        server:
          type: string
          description: Proxy server details with url and port
          example: http://<<ipaddress or cname>>:<<port>>
        bypass:
          type: string
          description: Bypass addresses to skip proxy, entries are separated with
            semicolon
          example: 10.12.100.10;10.120.100.10;100.12.*.100
      description: Unauthenticated proxy details for agent.
    AgentVersionVmCount:
      type: object
      properties:
        normalizedHaiAgentVersion:
          type: string
        haiAgentVersion:
          type: string
        vmCount:
          type: integer
          format: int32
    AuthEngine:
      type: object
      properties:
        url:
          type: string
        status:
          $ref: '#/components/schemas/AuthEngineStatus'
      description: Auth engine information
      readOnly: true
    AuthEngineStatus:
      type: object
      properties:
        status:
          type: integer
          description: Status value
          format: int32
          readOnly: true
        message:
          type: string
          description: Status message
          readOnly: true
        endpoint:
          type: string
          description: Auth engine endpoint
          readOnly: true
        errorDetails:
          type: array
          description: Error details
          readOnly: true
          items:
            $ref: '#/components/schemas/ErrorDetail'
    CaBundleStatus:
      type: object
      properties:
        caCertVersion:
          type: integer
          format: int32
        installed:
          type: boolean
        certExpiry:
          type: integer
          format: int64
      description: CA bundles status
      readOnly: true
    CustomIpConfiguration:
      type: object
      properties:
        customIpType:
          type: string
          description: Custom IP Type
          enum:
          - STATIC_IP_ADDRESS
          - AZURE_IP
        shouldMonitor:
          type: boolean
          description: Boolean flag indicating whether or not we should monitor the
            Ip
        assignToLoadBalancer:
          type: boolean
          description: Boolean flag indicating whether or not we assign the ip address
            to the load balancer front end ip
        ipDetails:
          type: object
          additionalProperties:
            type: string
            description: Details for ip configuration such as ip address or resource
              Id
          description: Details for ip configuration such as ip address or resource
            Id
        updateRequired:
          type: boolean
          description: Boolean flag indicating whether or not configuration requires
            an update
        deploymentRequired:
          type: boolean
          description: Override field for UAG load balancer deployment, if false it
            will not trigger deployer event
      description: Custom IP Configuration, given when external uag is deployedwith
        a loadbalancer using a private IP
    DeviceConnectionDetails:
      type: object
      properties:
        deviceId:
          type: string
        deviceStatus:
          type: string
          enum:
          - CONNECTED
          - DISCONNECTED
        updatedAt:
          type: string
          format: date-time
      description: device connection details for an edge
    DiskEncryption:
      type: object
      properties:
        modelVersion:
          type: integer
          format: int64
        enabled:
          type: boolean
        rootVolumeEncryptionEnabled:
          type: boolean
        userVolumeEncryptionEnabled:
          type: boolean
        encryptionKeyAlias:
          type: string
      description: Specify the properties related to DiskEncryption of the template.
    EdgeClusterReported:
      type: object
      properties:
        validationType:
          type: string
        validationDetails:
          type: object
          additionalProperties:
            type: object
        errorDetail:
          $ref: '#/components/schemas/ErrorDetail'
      description: edge cluster reported details like fqdn resolvability status
    EdgeConfigDetails:
      type: object
      properties:
        mqttLoadBalancerIP:
          type: string
        agentSimulatorIp:
          type: string
        updatedAt:
          type: string
          format: date-time
      description: edge config details such as mqtt load balancer ip
    EdgeDeploymentModeDetailsTO:
      type: object
      properties:
        type:
          type: string
          description: Defines the deployment type, VM or Cluster
          example: CLUSTER
          enum:
          - VM
          - CLUSTER
          - UNMANAGED
        attributes:
          type: object
          additionalProperties:
            type: string
          description: The specific attributes needed to create a new edge deployment.
            Keys will depend on the value of 'type'.
          example:
            numNodes: '4'
            podCidr: 192.168.0.0/16
            serviceCidr: 192.169.0.0/24
            identityId: identity-id
            outboundType: USER_ASSIGNED_NAT_GATEWAY | USER_DEFINED_ROUTING
      description: Deployment mode details for this edge deployment. These details
        will depend on the the chosen method
    EdgeDeploymentTOV2:
      required:
      - fqdn
      - id
      - name
      - orgId
      - providerInstanceId
      - providerLabel
      - status
      type: object
      properties:
        id:
          type: string
          description: The id of the Edge Deployment
          readOnly: true
          example: id
        orgId:
          type: string
          description: The id of the CSP org
          readOnly: true
          example: orgId
        projectId:
          type: string
          description: ID of the CSP project that owns this data
          readOnly: true
        location:
          type: string
          description: location
          readOnly: true
          example: US
        providerInstanceId:
          type: string
          description: The ProviderInstance where the Edge Deployment is deployed
          readOnly: true
          example: providerInstanceId
        providerLabel:
          type: string
          description: The type of the provider edge deployment belongs to
          readOnly: true
          example: AZURE|VSPHERE
        name:
          type: string
          description: The name of the Edge Deployment
          example: edge-deployment-1
        description:
          type: string
          description: The description of the Edge Deployment
          example: My new edge deployment
        status:
          type: string
          description: The current status of the Edge Gateway deployment
          readOnly: true
          example: PENDING
          enum:
          - CREATE_ACCEPTED
          - CREATE_PENDING
          - CREATING
          - CONNECT_PENDING
          - POST_PROVISIONING_CONFIG_IN_PROGRESS
          - READY
          - CREATE_FAILED
          - UPDATE_PENDING
          - UPGRADE_PENDING
          - UPGRADE_FAILED
          - UPGRADING
          - UPDATING
          - UPDATE_FAILED
          - MIGRATE_PENDING
          - MIGRATING
          - MIGRATE_FAILED
          - DELETE_PENDING
          - DELETED
          - FORCE_DELETE_PENDING
          - DELETING
          - FORCE_DELETING
          - DELETE_FAILED
          - REPAIR_ACCEPTED
          - FORCE_REPAIR_ACCEPTED
          - REPAIR_FAILED
          - REPAIR_PENDING
          - FORCE_REPAIR_PENDING
          - REPAIRING
        fqdn:
          type: string
          description: FQDN with which to resolve the Edge VM management IP
          example: edge.example.com
        fqdnAutoGenerated:
          type: boolean
          description: This boolean value tells if fqdn is auto generated to distinguish
            from edges without this featureIf true it is auto generated
          example: true
        infrastructure:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/InfrastructureResource'
          description: Infrastructure Resources needed by the Edge Deployment such
            as `managementNetwork`
        resourceTags:
          type: object
          additionalProperties:
            type: string
            description: Resource tags that are added to edge deployment
          description: Resource tags that are added to edge deployment
        edgeGatewayLocation:
          $ref: '#/components/schemas/EdgeGatewayLocation'
        edgeVmDetails:
          $ref: '#/components/schemas/EdgeVmDetailsV2'
        registeredModules:
          type: object
          additionalProperties:
            type: string
            description: List of modules registered with the edge deployment
            readOnly: true
          description: List of modules registered with the edge deployment
          readOnly: true
        ssoConfigurations:
          uniqueItems: true
          type: array
          description: Edge SSO configuration
          items:
            $ref: '#/components/schemas/EdgeSsoConfiguration'
        ssoConfigurationsV2:
          uniqueItems: true
          type: array
          description: Edge SSO configuration V2
          items:
            $ref: '#/components/schemas/EdgeSsoConfigurationV2'
        deploymentModeDetails:
          $ref: '#/components/schemas/EdgeDeploymentModeDetailsTO'
        proxyConfiguration:
          $ref: '#/components/schemas/EdgeProxyConfiguration'
        errorDetails:
          type: array
          description: Error details in case of Edge VM operation failure
          readOnly: true
          items:
            $ref: '#/components/schemas/ErrorDetail'
        adTwinSyncStatus:
          type: string
          description: Edge deployment synchronization status with AD twin
          readOnly: true
          example: SYNCED
          enum:
          - NONE
          - SYNCED
          - SYNC_NEEDED
          - SYNC_FAILED
        twinSyncStatusMap:
          type: object
          additionalProperties:
            type: string
            description: Edge deployment synchronization status of edge twins
            readOnly: true
            enum:
            - NONE
            - SYNCED
            - SYNC_NEEDED
            - SYNC_FAILED
          description: Edge deployment synchronization status of edge twins
          readOnly: true
        privateEndpointDetails:
          $ref: '#/components/schemas/PrivateEndpointDetails'
        privateEndpointHADetails:
          $ref: '#/components/schemas/PrivateEndpointHADetailsTO'
        agentMonitoringConfig:
          $ref: '#/components/schemas/AgentMonitoringEdgeConfig'
        adMonitoring:
          $ref: '#/components/schemas/AdMonitoring'
        reportedStatus:
          $ref: '#/components/schemas/EdgeReportedTO'
        agentBridge:
          $ref: '#/components/schemas/AgentBridge'
        hdc:
          $ref: '#/components/schemas/HDC'
        authEngine:
          $ref: '#/components/schemas/AuthEngine'
        createdAt:
          type: string
          description: Record creation timestamp
          format: date-time
          readOnly: true
        updatedAt:
          type: string
          description: Record update timestamp
          format: date-time
          readOnly: true
        version:
          type: integer
          description: Record version (internal)
          format: int64
          readOnly: true
      description: Searchable fields are "id", "projectId", "name", "providerLabel",
        "providerInstanceId", "status", "privateEndpointHADetails.privateLinkServiceInUse",
        "fqdnAutoGenerated"
    EdgeGatewayLocation:
      type: object
      properties:
        deviceId:
          type: string
        iotDeviceName:
          type: string
      description: Edge Controller device details
      readOnly: true
    EdgeGatewayProperties:
      type: object
      properties:
        version:
          type: string
        buildNumber:
          type: string
        updatedAt:
          type: string
          format: date-time
      description: edge gateway details like version and build number
    EdgeProxyConfiguration:
      required:
      - credentialId
      - exclusionPolicy
      - proxyHost
      - proxyName
      - proxyType
      - sslEnabled
      type: object
      properties:
        proxyName:
          type: string
        proxyType:
          type: string
          enum:
          - HTTP
          - HTTPS
        proxyHost:
          type: string
        proxyPort:
          type: string
        credentialId:
          type: string
        sslEnabled:
          type: boolean
        exclusionPolicy:
          uniqueItems: true
          type: array
          items:
            type: string
        deleting:
          type: boolean
      description: Edge Proxy configuration
    EdgeReportedTO:
      type: object
      properties:
        deviceConnectionDetails:
          $ref: '#/components/schemas/DeviceConnectionDetails'
        moduleConnectionDetails:
          type: array
          description: module connection details where each module can be uniquely
            identified with twin id
          items:
            $ref: '#/components/schemas/ModuleConnectionDetails'
        edgeConfigDetails:
          $ref: '#/components/schemas/EdgeConfigDetails'
        updatedAt:
          type: string
          description: date when the collection was last updated
          format: date-time
        edgeClusterReported:
          type: object
          additionalProperties:
            type: array
            description: edge cluster reported details like fqdn resolvability status
            items:
              $ref: '#/components/schemas/EdgeClusterReported'
          description: edge cluster reported details like fqdn resolvability status
        edgeGwProperties:
          $ref: '#/components/schemas/EdgeGatewayProperties'
      description: Edge reported attributes
      readOnly: true
    EdgeSsoConfiguration:
      required:
      - ssoConfigurationId
      type: object
      properties:
        ssoConfigurationId:
          type: string
          description: ID of the SSO configuration for the edge deployment
          example: sso-id-1
        name:
          type: string
          description: SSO configuration name
          readOnly: true
          example: my-sso
        caMode:
          type: string
          description: SSO CA mode
          readOnly: true
          example: sub
        status:
          $ref: '#/components/schemas/SsoConfigurationStatus'
        latestInstalledCaBundleExpiry:
          type: integer
          description: Expiration for the latest installed CA Bundle
          format: int64
        caType:
          type: string
          description: SSO configuration type
          readOnly: true
          example: VMWARE_CA/MICROSOFT_CA
          enum:
          - VMWARE_CA
          - MICROSOFT_CA
        domainSids:
          type: array
          description: domain sids of all the ADs
          readOnly: true
          example: list of domain sid associated with this sso configuration
          items:
            type: string
            description: domain sids of all the ADs
            readOnly: true
            example: list of domain sid associated with this sso configuration
        forestRootContext:
          type: string
          description: forest root context common across all the domains in the configuration
          readOnly: true
          example: my-root-context
        ssoTemplateName:
          type: string
          description: SSO template name
          readOnly: true
          example: my-sso-template
        trueSsoConfigurationStatus:
          $ref: '#/components/schemas/TrueSsoConfigurationStatus'
      description: Edge SSO configuration
    EdgeSsoConfigurationV2:
      required:
      - ssoConfigurationId
      type: object
      properties:
        ssoConfigurationId:
          type: string
          description: ID of the SSO configuration for the edge deployment
          example: sso-id-1
        name:
          type: string
          description: SSO configuration name
          readOnly: true
          example: my-sso
        caType:
          type: string
          description: SSO configuration type
          readOnly: true
          example: VMWARE_CA/MICROSOFT_CA
        domainSids:
          type: array
          description: domain sids of all the ADs
          readOnly: true
          example: list of domain sid associated with this sso configuration
          items:
            type: string
            description: domain sids of all the ADs
            readOnly: true
            example: list of domain sid associated with this sso configuration
        forestRootContext:
          type: string
          description: forest root context common across all the domains in the configuration
          readOnly: true
          example: my-root-context
        ssoTemplateName:
          type: string
          description: SSO template name
          readOnly: true
          example: my-sso-template
        caMode:
          type: string
          description: SSO CA mode
          readOnly: true
          example: sub
        trueSsoConfigurationStatus:
          $ref: '#/components/schemas/TrueSsoConfigurationStatus'
        ssoConfigurationStatus:
          $ref: '#/components/schemas/SsoConfigurationStatus'
        status:
          $ref: '#/components/schemas/SsoConfigurationStatus'
        latestInstalledCaBundleExpiry:
          type: integer
          description: Expiration for the latest installed CA Bundle
          format: int64
      description: Edge SSO configuration V2
    EdgeVmDetailsV2:
      required:
      - credentialId
      type: object
      properties:
        credentialId:
          type: string
          readOnly: true
        managementIp:
          type: string
          readOnly: true
      description: Edge gateway Virtual machine details
      readOnly: true
    ElasticGPU:
      type: object
      properties:
        templateId:
          type: string
          description: Elastic GPU Server Template reference ID.
      description: Elastic GPU Server Template reference for Azure
    HDC:
      required:
      - dnsUris
      - edgeHubUrl
      - id
      - name
      - url
      - vmHubName
      - vmHubURL
      type: object
      properties:
        modelVersion:
          type: integer
          format: int64
        id:
          type: string
          description: HDC Id
          readOnly: true
        name:
          type: string
          description: HDC Name
          readOnly: true
        url:
          type: string
          description: HDC URL
          readOnly: true
        edgeHubUrl:
          type: string
          description: HDC EdgeHub URL
          readOnly: true
        vmHub:
          $ref: '#/components/schemas/VMHub'
        vmHubURL:
          type: string
          description: Vmhub URL
          deprecated: true
        vmHubName:
          type: string
          description: Vmhub name
          deprecated: true
        dnsUris:
          uniqueItems: true
          type: array
          description: 'Set of URIs of DNS zone for storing (edge fqdn, mqtt_LB_IP) '
          items:
            type: string
            description: 'Set of URIs of DNS zone for storing (edge fqdn, mqtt_LB_IP) '
      description: Horizon Data Center to which this EdgeDeployment is mapped to.
      readOnly: true
    LoadBalancerDetailsReported:
      type: object
      properties:
        ip:
          type: string
        type:
          type: string
          enum:
          - PRIVATE_IP
          - PUBLIC_IP
        status:
          type: string
          enum:
          - UP
          - DOWN
        errorDetails:
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetail'
    Message:
      type: object
      properties:
        time:
          type: string
          description: Record message creation time
          format: date-time
        code:
          type: string
          description: Indicate message type
        message:
          type: string
          description: Details of the message
      description: Generic message
      deprecated: true
    ModuleConnectionDetails:
      type: object
      properties:
        moduleName:
          type: string
        twinId:
          type: string
        moduleStatus:
          type: string
          enum:
          - CONNECTED
          - DISCONNECTED
        updatedAt:
          type: string
          format: date-time
      description: module connection details where each module can be uniquely identified
        with twin id
    MsftCAHostStatus:
      type: object
      properties:
        caHostName:
          type: string
        accessible:
          type: string
        caCertCount:
          type: integer
          format: int64
        successCount:
          type: integer
          format: int64
        failureCount:
          type: integer
          format: int64
        maxCallCount:
          type: integer
          format: int64
        backoffCount:
          type: integer
          format: int64
        connectionCount:
          type: integer
          format: int64
        averageBackoffTime:
          type: integer
          format: int64
        averageSubmitTime:
          type: integer
          format: int64
        minSubmitTime:
          type: integer
          format: int64
        maxSubmitTime:
          type: integer
          format: int64
    PrivateEndpointDetails:
      type: object
      properties:
        ip:
          type: string
          description: Private Endpoint IP address to connect to MQTT clusters
        nicResourceId:
          type: string
          description: Private Endpoint NIC to connect to MQTT clusters
        name:
          type: string
          description: Private Endpoint Name
        privateLinkServiceId:
          type: string
          description: Resource ID of the private service link Id
        dnsRecord:
          type: string
          description: DNS Record mapping the private endpoint IP
        provisioningState:
          type: string
          description: Provisioning state of the private endpoint
      description: StandBy/Secondary Private Endpoint details
    PrivateEndpointHADetailsTO:
      required:
      - privateLinkServiceInUse
      type: object
      properties:
        privateLinkServiceInUse:
          type: string
          description: Indicates the private endpoint which is in use currently
          enum:
          - PRIMARY
          - STANDBY
        primaryPrivateEndpointDetails:
          $ref: '#/components/schemas/PrivateEndpointDetails'
        standbyPrivateEndpointDetails:
          $ref: '#/components/schemas/PrivateEndpointDetails'
        cnameFQDN:
          type: string
      description: Private endpoint details associated with the edge deployment
      readOnly: true
    ProviderInstanceHealthDetailsTO:
      type: object
      properties:
        providerInstanceHealthStatus:
          type: string
          description: Health status for provider instance
          readOnly: true
          example: OK|ERROR|WARNING
          enum:
          - OK
          - ERROR
          - WARNING
          - PENDING
        errorDetails:
          type: array
          description: More details on health status
          readOnly: true
          items:
            $ref: '#/components/schemas/ErrorDetail'
        updatedAt:
          type: string
          description: Record update timestamp
          format: date-time
          readOnly: true
        additionalProperties:
          type: object
          additionalProperties:
            type: object
            description: Additional properties related to provider / providerHealth
            readOnly: true
          description: Additional properties related to provider / providerHealth
          readOnly: true
        version:
          type: integer
          description: Record version (internal)
          format: int64
          readOnly: true
      description: Health status of this provider instance
      readOnly: true
    ProviderInstanceTOV2:
      type: object
      properties:
        id:
          type: string
          description: Unique record ID
          readOnly: true
          example: 0123456789
        orgId:
          type: string
          description: Org ID that owns this record
          readOnly: true
          example: 0123456789
        projectId:
          type: string
          description: ID of the CSP project that owns this data
          readOnly: true
        location:
          type: string
          description: location
          readOnly: true
          example: US
        name:
          type: string
          description: User defined name for this instance
          example: My Instance Name
        description:
          type: string
          description: User defined description for this instance
        infraTwinSyncStatus:
          type: string
          description: Status of this provider instance
          readOnly: true
          example: READY
          deprecated: true
          enum:
          - NONE
          - SYNCED
          - SYNC_NEEDED
        providerLabel:
          type: string
          description: Provider label (provider of which this is an instance)
          readOnly: true
          example: AZURE
        providerDetails:
          $ref: '#/components/schemas/ProviderSpecDetailsTO'
        edgeDeploymentId:
          type: string
          description: EdgeGateway Deployment which we can use to manage and monitor
            infrastructure
          example: 0123456789
        primaryProvider:
          type: boolean
          description: True if this provider has an edge deployment deployed in it.
          readOnly: true
          example: false
        infraTwinId:
          type: string
          description: Id of the Infrastructure Twin which can be use to talk to the
            corresponding infra module.
          example: 0123456789
          deprecated: true
        resourceTags:
          type: object
          additionalProperties:
            type: string
            description: Resource tags that are added to Provider Instance
          description: Resource tags that are added to Provider Instance
        credentialId:
          type: string
          description: ID of the credential storing the sensitive data of provider
          readOnly: true
          example: 0123456789
        healthStatusDetails:
          $ref: '#/components/schemas/ProviderInstanceHealthDetailsTO'
        hdc:
          $ref: '#/components/schemas/HDC'
        denyOperations:
          type: array
          description: User defined operations to be denied on this instance
          items:
            type: string
            description: User defined operations to be denied on this instance
            enum:
            - EDGE_DEPLOYMENT
            - UAG_DEPLOYMENT
            - TEMPLATE_CREATION
            - CLOUD_MANAGED_POOLS
        infrastructureLinks:
          type: object
          additionalProperties:
            type: string
            description: Links to all infrastructure available from this provider
            readOnly: true
          description: Links to all infrastructure available from this provider
          readOnly: true
        createdAt:
          type: string
          description: Record creation timestamp
          format: date-time
          readOnly: true
        updatedAt:
          type: string
          description: Record update timestamp
          format: date-time
          readOnly: true
        version:
          type: integer
          description: Record version (internal)
          format: int64
          readOnly: true
      description: Searchable Fields are "id", "projectId", "name", "providerLabel",
        "edgeDeploymentId", "infraTwinSyncStatus", "providerDetails.data"
    ProviderSpecDetailsTO:
      type: object
      properties:
        method:
          type: string
          description: Defines the way in which the provider is defined and the keys
            in 'data'
          example: ByAppRegistration
        data:
          type: object
          additionalProperties:
            type: string
          description: The specific data needed to create a new provider instance.
            Keys will depend on the value of 'method'.
          example: null
        scaleData:
          type: array
          description: The specific data needed to scale pool/template associated
            with provider instance. Keys will depend on the value of 'method'.
          items:
            type: object
            additionalProperties:
              type: string
          example: null
      description: Specific details about this instance. These details will depend
        both on the provider type (label) and the chosen method
    SSLCertificateReadTO:
      required:
      - credentialId
      - expiryDate
      - sslCertificateType
      type: object
      properties:
        credentialId:
          type: string
        expiryDate:
          type: string
          format: date-time
        sslCertificateType:
          type: string
          enum:
          - PEM
          - PFX
      description: sslCertificate where the SSL certificate credential ID and expiry
        date is stored.
      readOnly: true
    ScheduledRollingMaintJob:
      type: object
      properties:
        startedAt:
          type: string
          description: 'Job start timestamp '
          format: date-time
          readOnly: true
        completedAt:
          type: string
          description: 'Job completed timestamp '
          format: date-time
          readOnly: true
        status:
          type: string
          description: 'Job status '
          readOnly: true
          enum:
          - INIT
          - RUNNING
          - SUCCESS
          - ERROR
          - CANCELLED
      description: Job for Scheduled Rolling Maintenance Execution
    SparePolicy:
      required:
      - increment
      - limit
      - max
      - min
      type: object
      properties:
        modelVersion:
          type: integer
          format: int64
        limit:
          maximum: 5000
          minimum: 0
          type: integer
          description: Max number of VMs to provision
          format: int32
          example: 10
        min:
          maximum: 5000
          minimum: 0
          type: integer
          description: Minimal number of spare VMs. Set it smaller than spareMax to
            avoid frequent capacity updates.
          format: int32
          example: 2
        max:
          maximum: 5000
          minimum: 0
          type: integer
          description: Maximum number of spare VMs. Set it larger than spareMin to
            avoid frequent capacity updates.
          format: int32
          example: 4
        increment:
          maximum: 5000
          minimum: 0
          type: integer
          description: Number of VMs to add/remove per update cycle.
          format: int32
          example: 200
      description: Spare capacity policy
    SsoConfigurationStatus:
      type: object
      properties:
        message:
          type: string
          description: Status message
          readOnly: true
        status:
          type: integer
          description: Status value
          format: int32
          readOnly: true
        adDomainsStatus:
          uniqueItems: true
          type: array
          description: AD domains status
          readOnly: true
          items:
            $ref: '#/components/schemas/AdDomainStatus'
        caBundlesStatus:
          uniqueItems: true
          type: array
          description: CA bundles status
          readOnly: true
          items:
            $ref: '#/components/schemas/CaBundleStatus'
      description: SSO configuration status for caType=VMWARE_CA
      readOnly: true
    SsoTemplateStatus:
      type: object
      properties:
        templateName:
          type: string
        message:
          type: string
        code:
          type: string
    TemplateBatchResponseTO:
      required:
      - errors
      - results
      type: object
      properties:
        errors:
          type: object
          additionalProperties:
            type: array
            description: Templates where action was unsuccessful
            readOnly: true
            example: templateId, ErrorDetail
            items:
              $ref: '#/components/schemas/ErrorDetail'
          description: Templates where action was unsuccessful
          readOnly: true
          example: templateId, ErrorDetail
        results:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/TemplateTOV2'
          description: Templates where action was successful
          readOnly: true
          example: templateId, TemplateTOV2
    TemplateReported:
      required:
      - location
      - orgId
      type: object
      properties:
        templateId:
          type: string
        orgId:
          type: string
        location:
          type: string
        status:
          type: string
        messages:
          type: array
          deprecated: true
          items:
            $ref: '#/components/schemas/Message'
        errorDetails:
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetail'
        connectivityStatus:
          type: string
          enum:
          - ONLINE
          - OFFLINE
        consumedVMs:
          type: integer
          format: int32
        deletingVMs:
          type: integer
          format: int32
        errorVMs:
          type: integer
          format: int32
        freeSessions:
          type: integer
          format: int32
        maintenanceVMs:
          type: integer
          format: int32
        provisionedSessions:
          type: integer
          format: int32
        provisionedVMs:
          type: integer
          format: int32
        provisioningVMs:
          type: integer
          format: int32
        agentUpdatingVMs:
          type: integer
          format: int32
        agentReinstallingVMs:
          type: integer
          format: int32
        outdatedAgentVMs:
          type: integer
          format: int32
        agentUpdateScanTime:
          type: string
          format: date-time
        agentVersionVmCounts:
          type: array
          items:
            $ref: '#/components/schemas/AgentVersionVmCount'
        agentUpdateBadgeLevel:
          type: string
          enum:
          - UPTODATE
          - NEED
          - URGENT
          - CRITICAL
        vmMaintenancePolicyScheduledTypeStatus:
          $ref: '#/components/schemas/ScheduledRollingMaintJob'
        updatedAt:
          type: string
          format: date-time
        version:
          type: integer
          format: int64
        statusValue:
          type: string
          enum:
          - READY
          - EXPANDING
          - SHRINKING
          - DELETING
          - INIT
          - PARTIALLY_PROVISIONED
          - ERROR
      description: Reported properties of the template.
      readOnly: true
    TemplateTOV2:
      type: object
      properties:
        id:
          type: string
          description: Template ID.
          readOnly: true
        orgId:
          type: string
          description: Org ID that owns this template.
          readOnly: true
        projectId:
          type: string
          description: ID of the CSP project that owns this data
          readOnly: true
        location:
          type: string
          description: location
          readOnly: true
          example: US
        parentId:
          type: string
          description: Parent template ID, if this template is an expansion.
          readOnly: true
        name:
          type: string
          description: Template name.
          example: My floating desktop template
        vmNamePattern:
          type: string
          description: Pattern used as prefix for VMs created for this template.
          readOnly: true
        description:
          type: string
          description: An arbitrary description for this template.
          example: My floating desktop template
        uagDeploymentId:
          type: string
          description: ID of the 'uagDeployment' for the template. This defines the
            UAG cluster that will be used to connect clients to desktops.
          readOnly: true
        edgeDeploymentId:
          type: string
          description: ID of the 'edgeDeployment' for the template. Though this attribute
            can be inferred from the provider instance, it is referenced here for
            the purpose of easy lookup.
          readOnly: true
        providerInstanceId:
          type: string
          description: ID of the provider instance to used when creating VMs for this
            template. This will define, for example, the subscription and region of
            the VMs for Azure templates.
          readOnly: true
        providerLabel:
          type: string
          description: The type of the provider template belongs to
          readOnly: true
          example: AZURE|VSPHERE
        providerLocation:
          type: string
          description: The 'geolocation' of the Pool, which is derived from the Provider
            Instance that owns it
          readOnly: true
          example: westus2
        imageId:
          type: string
          description: ID of the gold pattern (image) from which all VMs in the template
            will be created. This is obtained from the Image Service.
        imageReference:
          $ref: '#/components/schemas/ImageReference'
        clientAccessLicenseApplicable:
          type: boolean
          description: 'clientAccessLicenseApplicable is set to true if customer has
            RDS CAL for Server images. Ref : https://docs.microsoft.com/en-us/azure/virtual-desktop/overview'
          readOnly: true
        activeDirectoryId:
          type: string
          description: ID of the Active Directory configuration that will be used
            when creating VMs in this template. This defines the domain to which VMs
            will be joined, and the account used to do so.
        computerAccountOU:
          type: string
          description: 'Pool VMs will join this OU if specified else they will be
            part of the default OU of the AD domain '
        templateType:
          type: string
          description: Template type. 'DEDICATED' creates single-session Windows 10
            VMs that are assigned to and owned by specific users. 'FLOATING' creates
            single-session Windows 10 VMs that are shared. 'MULTI_SESSION' creates
            multi-session Windows Server VMs and multi-session Windows 10 VMs.
          readOnly: true
          enum:
          - DEDICATED
          - FLOATING
          - MULTI_SESSION
          - STUDIO
          - APP_CAPTURE_STUDIO
          - ELASTIC_GPU
          - RDSH
          - WVD
        desktopAdminUsername:
          type: string
          description: The initial admin username for all new VMs created from this
            template. Only available in 'expanded' templates.
          readOnly: true
        sessionsPerVm:
          type: integer
          description: Max number of desktops sessions allowed per VM. For Windows
            desktop VMs, this value must be 1. For MULTI_SESSION, it can be any value
            greater than 0.
          format: int32
        maxQuiescingVMs:
          type: integer
          description: Max number of desktops which can quiesced when the template
            is undergoing normal maintenance.
          format: int32
          example: 10
        diskEncryption:
          $ref: '#/components/schemas/DiskEncryption'
        templateConnectivityStatus:
          type: string
          description: Defines whether this template is 'offline' or 'online'. When
            offline, no VM lifecycle operations will be performed for this template,
            and no client connections will be allowed.
          enum:
          - ONLINE
          - OFFLINE
        protocols:
          type: array
          description: List of protocols to be allowed for client connections to desktops
            in this template. Allowable values are 'BLAST', 'PCOIP' and 'RDP'.
          items:
            type: string
            description: List of protocols to be allowed for client connections to
              desktops in this template. Allowable values are 'BLAST', 'PCOIP' and
              'RDP'.
            enum:
            - BLAST
            - PCOIP
            - RDP
        networkType:
          type: string
          description: Network type of subnets used for template creation. Can either
            be ipv4 or dualStack (IPv4 and IPv6), IPv6 only is currently not supported.
          enum:
          - IPV4
          - DUAL_STACK
          - IPV6
        networks:
          type: array
          description: List of network resources that will be used when creating VMs
            for this template. The meaning of 'network resource' will depend on the
            provider type. For example, in Azure, this will be a list of subnets.
          items:
            $ref: '#/components/schemas/InfrastructureResource'
        infrastructure:
          type: object
          additionalProperties:
            type: array
            description: All other provider resources that should be used when creating
              VMs for this template. The keys in this map and the interpretation of
              the values depend on the provider type.
            items:
              $ref: '#/components/schemas/InfrastructureResource'
          description: All other provider resources that should be used when creating
            VMs for this template. The keys in this map and the interpretation of
            the values depend on the provider type.
        powerPolicy:
          $ref: '#/components/schemas/PowerPolicy'
        sparePolicy:
          $ref: '#/components/schemas/SparePolicy'
        agentCustomization:
          $ref: '#/components/schemas/AgentCustomization'
        vmLicenseType:
          type: string
          description: The type of Windows licenses that the creating organization
            posesses and wishes to use for all VMs created as part of this template.
          enum:
          - NONE
          - WINDOWS_CLIENT
          - WINDOWS_SERVER
        licenseProvided:
          type: boolean
          description: Represents if the Windows License Type was acknowledged and
            provided by the user
          readOnly: true
        resourceTags:
          type: object
          additionalProperties:
            type: string
            description: Tags to be added to resources when they are created as part
              of this template.
          description: Tags to be added to resources when they are created as part
            of this template.
        applicationProperties:
          type: object
          additionalProperties:
            type: string
            description: Application properties to be added when template is created.
          description: Application properties to be added when template is created.
        flags:
          type: object
          additionalProperties:
            type: boolean
            description: Boolean flags that control certain logic for admin template.
          description: Boolean flags that control certain logic for admin template.
        createdAt:
          type: string
          description: Template create timestamp.
          format: date-time
          readOnly: true
        updatedAt:
          type: string
          description: Template update timestamp.
          format: date-time
          readOnly: true
        providerInstance:
          $ref: '#/components/schemas/ProviderInstanceTOV2'
        edgeDeployment:
          $ref: '#/components/schemas/EdgeDeploymentTOV2'
        uagDeployment:
          $ref: '#/components/schemas/UAGDeploymentTOV2'
        hdc:
          $ref: '#/components/schemas/HDC'
        desktopAdminCredentialId:
          type: string
          description: Credential ID that points to desktop admin credentials needed
            during VM provisioning.
          readOnly: true
        reportedStatus:
          $ref: '#/components/schemas/TemplateReported'
        syncStatus:
          type: string
          description: Synchronization status of the template.
          readOnly: true
          enum:
          - SYNC_CREATE_PENDING
          - SYNC_CREATE_ERROR
          - SYNC_UPDATE_PENDING
          - SYNC_UPDATE_ERROR
          - SYNC_DELETE_PENDING
          - SYNC_DELETE_ERROR
          - SYNC_RETRY_PROVISIONING_PENDING
          - SYNC_RETRY_PROVISIONING_ERROR
          - SYNC_PROVISIONING_CONTROL_PENDING
          - SYNC_PROVISIONING_CONTROL_ERROR
          - SYNC_COMPLETE
        deleting:
          type: boolean
          description: True when a DELETE call for a template has been made to admin,
            but the template has not yet finished deleting.
          readOnly: true
        diskSizeInGB:
          type: integer
          description: Specifies the size of os disk in gigabytes
          format: int32
        availabilityZoneEnabled:
          type: boolean
          description: Deploy desktop vm in different availability zones
          enum:
          - true
          - false
        transientLoadThresholdSecs:
          type: integer
          description: Time spacing (in seconds) between consecutive session placement
            on a MULTI-SESSIONtemplate VM. This property will be used to load balance
            session slots among theMULTI-SESSION template VMs. This value should be
            between 0 to 300
          format: int32
          example: 10
        elasticGPU:
          $ref: '#/components/schemas/ElasticGPU'
        vmMaintenancePolicy:
          $ref: '#/components/schemas/VMMaintenancePolicy'
        provisioningDisabled:
          type: boolean
          description: True if provisioning of the template is disabled
          enum:
          - true
          - false
        reuseVmId:
          type: boolean
          description: True if reuse VM id is enabled.
          enum:
          - false
        vmRefreshType:
          type: string
          description: Indicate what operation is executed when refreshing floating
            pool VM
          enum:
          - DELETE_VM
          - REVERT_TO_SNAPSHOT
          - DELETE_VM, REVERT_TO_SNAPSHOT
        templateTimeZone:
          $ref: '#/components/schemas/TemplateTimeZone'
      description: Searchable fields are "id","projectId", "activeDirectoryId","diskEncryption.enabled","edgeDeploymentId","imageReference.streamId","imageReference.versionId","imageReference.markerId","name","parentId","protocols","providerInstanceId","providerLabel","templateType","uagDeploymentId"
    TemplateTimeZone:
      type: object
      properties:
        timeZone:
          type: string
          description: The time zone for the template
          example: Asia/Tokyo
        dayLightDisabled:
          type: boolean
          description: Is day light saving enabled or disabled?
          example: false
        timeZoneOffset:
          type: string
          description: The time zone offset for the template
          example: '-10:30'
      description: Timezone for the template.
    TrueSsoConfigurationStatus:
      type: object
      properties:
        ssoConfigurationId:
          type: string
        message:
          type: string
        status:
          type: integer
          format: int32
        adDomainsStatus:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/AdDomainStatus'
        msftCAHostStatus:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/MsftCAHostStatus'
        trueSsoTemplateStatus:
          $ref: '#/components/schemas/SsoTemplateStatus'
        enrollmentAgentTemplateStatus:
          $ref: '#/components/schemas/SsoTemplateStatus'
      description: SSO configuration status for caType=MICROSOFT_CA
      readOnly: true
    UAGCertificateDetail:
      type: object
      properties:
        daysToExpiry:
          type: integer
          format: int32
        expiryAtEpoch:
          type: integer
          format: int64
        errorDetails:
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetail'
    UAGDeploymentReported:
      required:
      - location
      type: object
      properties:
        uagDeploymentId:
          type: string
        orgId:
          type: string
        location:
          type: string
        reportedLoadBalancerDetails:
          type: array
          items:
            $ref: '#/components/schemas/LoadBalancerDetailsReported'
        reportedGatewayDetails:
          type: array
          items:
            $ref: '#/components/schemas/UAGVMDetailsReported'
        updatedAt:
          type: string
          format: date-time
        version:
          type: integer
          format: int64
      description: Reported properties of UAG deployment.
      readOnly: true
    UAGDeploymentTOV2:
      required:
      - numberOfGateways
      type: object
      properties:
        id:
          type: string
        name:
          type: string
          description: User defined name for this instance
          example: My Instance Name
        description:
          type: string
        orgId:
          type: string
          description: Org ID that owns this record
          readOnly: true
          example: 0123456789
        projectId:
          type: string
          description: ID of the CSP project that owns this data
          readOnly: true
        location:
          type: string
          description: location
          readOnly: true
          example: US
        type:
          type: string
          description: UAG deployment type
          readOnly: true
          example: EXTERNAL | INTERNAL | INTERNAL_AND_EXTERNAL
        providerInstanceId:
          type: string
          description: Provider instance to where this UAG deployment is deployed
          readOnly: true
          example: 0123456789
        providerLabel:
          type: string
          description: Provider label (provider of which this is an instance)
          readOnly: true
          example: AZURE
        edgeDeploymentId:
          type: string
          description: Edge Deployment id
          readOnly: true
          example: '1234'
        status:
          type: string
          description: The configured status of the UAG Cluster deployment
          readOnly: true
          example: PENDING
          enum:
          - PENDING
          - DEPLOYING
          - FAILED
          - READY
          - ADDING_EXTERNAL_ACCESS
          - ADDING_EXTERNAL_ACCESS_FAILED
          - ADDING_EXTERNAL_ACCESS_ROLLBACK
          - ADDING_EXTERNAL_ACCESS_ROLLBACK_FAILED
          - ADDING_INTERNAL_ACCESS
          - ADDING_INTERNAL_ACCESS_FAILED
          - ADDING_INTERNAL_ACCESS_ROLLBACK
          - ADDING_INTERNAL_ACCESS_ROLLBACK_FAILED
          - REMOVING_EXTERNAL_ACCESS
          - REMOVING_EXTERNAL_ACCESS_FAILED
          - REMOVING_EXTERNAL_ACCESS_ROLLBACK
          - REMOVING_EXTERNAL_ACCESS_ROLLBACK_FAILED
          - REMOVING_INTERNAL_ACCESS
          - REMOVING_INTERNAL_ACCESS_FAILED
          - REMOVING_INTERNAL_ACCESS_ROLLBACK
          - REMOVING_INTERNAL_ACCESS_ROLLBACK_FAILED
          - PARTIALLY_READY
          - UPDATE_PENDING
          - UPDATING
          - UPDATE_FAILED
          - UPGRADE_PENDING
          - UPGRADING
          - UPGRADE_FAILED
          - DELETE_PENDING
          - DELETING
          - DELETION_FAILED
          - DELETED
        fqdn:
          type: string
          description: Admin-defined FQDN of the UAG cluster
          example: www.example.com
        internalFqdn:
          type: string
          description: Admin-defined internal FQDN of the UAG cluster. Only needed
            if different from 'fqdn'
        blastTcpPort:
          type: string
          description: Admin-defined blast tcp port used for UAG cluster
        infrastructure:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/InfrastructureResource'
          description: Other infrastructure resources for the deployment. The keys
            in this map and the interpretation of the values depend on the provider
            type.
        numberOfGateways:
          type: integer
          description: Number of Gateways needed in the UAG deployment cluster
          format: int32
          example: 2
        gateways:
          type: array
          description: List of UAG VMs and their details which are deployed
          readOnly: true
          items:
            $ref: '#/components/schemas/UAGVmDetailsTO'
        errorDetails:
          type: array
          description: List of Error Details
          readOnly: true
          items:
            $ref: '#/components/schemas/ErrorDetail'
        privateLoadBalancer:
          $ref: '#/components/schemas/UAGLoadBalancer'
        sslCertificateCredentialId:
          type: string
          description: CredentialId where the SSL certificate is stored.
          readOnly: true
          deprecated: true
        passwordCredentialId:
          type: string
          description: CredentialId where the Gateway password is stored.
          readOnly: true
        resourceTags:
          type: object
          additionalProperties:
            type: string
            description: Resource tags that are added to UAG deployment
          description: Resource tags that are added to UAG deployment
        hdc:
          $ref: '#/components/schemas/HDC'
        sslCertificateTO:
          $ref: '#/components/schemas/SSLCertificateReadTO'
        networkInterfaceCount:
          type: integer
          description: The number of network interfaces per UAG VM.
          format: int32
          readOnly: true
        reportedProperties:
          $ref: '#/components/schemas/UAGDeploymentReported'
        proxyConfiguration:
          $ref: '#/components/schemas/UAGProxyConfig'
        customIpConfiguration:
          $ref: '#/components/schemas/CustomIpConfiguration'
        createdAt:
          type: string
          description: Record creation timestamp
          format: date-time
          readOnly: true
        updatedAt:
          type: string
          description: Record updated timestamp
          format: date-time
          readOnly: true
        version:
          type: integer
          description: Record version (internal)
          format: int64
          readOnly: true
        loadBalancer:
          $ref: '#/components/schemas/UAGLoadBalancer'
      description: Searchable fields are "id", "projectId", "name", "type", "providerInstanceId",
        "providerLabel", "status"
      readOnly: true
    UAGLoadBalancer:
      type: object
      properties:
        ipAddress:
          type: string
        fqdn:
          type: string
        publicIpEnabled:
          type: boolean
      description: Details of the public Load Balancer if deployed.
      readOnly: true
    UAGProxyConfig:
      required:
      - certificateData
      - certificateName
      - proxyName
      - proxyType
      type: object
      properties:
        proxyName:
          type: string
        proxyType:
          type: string
          enum:
          - HTTP
          - HTTPS
        proxyHost:
          type: string
        proxyPort:
          type: integer
          format: int32
        proxyIncludedHosts:
          type: array
          items:
            type: string
        certificateName:
          type: string
        certificateData:
          type: string
        deleting:
          type: boolean
      description: Proxy configuration values for UAG deployment
    UAGThumbprintDetails:
      type: object
      properties:
        responseCodeMessage:
          type: string
        adminThumbprint:
          type: string
        subject:
          type: string
        issuer:
          type: string
        validFrom:
          type: string
        validTo:
          type: string
        hostnameVerifier:
          type: string
      description: UAG Gateway Certificate Data
      readOnly: true
    UAGVMDetailsReported:
      type: object
      properties:
        gatewayId:
          type: string
        certUpdateStatus:
          type: string
          enum:
          - SUCCESS
          - NO_OP
          - FAILURE
          - DELETED
        certUpdateErrorDetails:
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetail'
        fqdnUpdateStatus:
          type: string
          enum:
          - SUCCESS
          - NO_OP
          - FAILURE
          - DELETED
        fqdnUpdateErrorDetails:
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetail'
        gatewayHealthStatus:
          type: string
          enum:
          - OK
          - ERROR
        serviceHealthStatus:
          type: object
          additionalProperties:
            type: string
            enum:
            - UP
            - DOWN
        gatewayHealthErrorDetails:
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetail'
        proxyUpdateStatus:
          type: string
          enum:
          - SUCCESS
          - NO_OP
          - FAILURE
          - DELETED
        proxyUpdateErrorDetails:
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetail'
        syslogUpdateStatus:
          type: string
          enum:
          - SUCCESS
          - NO_OP
          - FAILURE
          - DELETED
        syslogUpdateErrorDetails:
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetail'
        jwtUpdateStatus:
          type: string
          enum:
          - SUCCESS
          - NO_OP
          - FAILURE
          - DELETED
        jwtUpdateErrorDetails:
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetail'
        uagManagementCertUpdateStatus:
          type: string
          enum:
          - SUCCESS
          - NO_OP
          - FAILURE
          - DELETED
        uagManagementCertUpdateErrorDetails:
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetail'
        uagManagementCertificateHealthDetails:
          $ref: '#/components/schemas/UAGCertificateDetail'
    UAGVmDetailsTO:
      type: object
      properties:
        id:
          type: string
        managementPrivateIp:
          type: string
          description: UAG management private IP
          readOnly: true
          example: 1.1.1.1
        desktopPrivateIp:
          type: string
          description: UAG desktop private IP
          readOnly: true
          example: 2.2.2.2
        dmzPrivateIp:
          type: string
          description: UAG DMZ private IP
          readOnly: true
          example: 3.3.3.3
        vmName:
          type: string
          description: UAG VM name
          readOnly: true
          example: VM-001
        version:
          type: string
          description: UAG gateway version
          readOnly: true
          example: '22.03'
        errorDetails:
          type: array
          description: Error details in case of UAG VM operation failure
          readOnly: true
          items:
            $ref: '#/components/schemas/ErrorDetail'
        status:
          type: string
          description: UAG Gateway VM status
          readOnly: true
          example: READY
          enum:
          - PENDING
          - DEPLOYING
          - FAILED
          - READY
          - PENDING_REPLACEMENT
          - DELETE_PENDING
          - DELETING
          - DELETE_FAILED
          - DELETED
        markedForDeletion:
          type: boolean
          description: Is UAG VM marked for deletion
          readOnly: true
        passwordCredentialId:
          type: string
          description: UAG Password Credential Id
          readOnly: true
        reportedProperties:
          $ref: '#/components/schemas/UAGVMDetailsReported'
        adminThumbprintDetails:
          $ref: '#/components/schemas/UAGThumbprintDetails'
      description: List of UAG VMs and their details which are deployed
      readOnly: true
    VMHub:
      required:
      - name
      - url
      type: object
      properties:
        url:
          type: string
          description: Vmhub URL
          readOnly: true
        uagAasFqdn:
          type: string
          description: UAG As A Service Url
          example: https://horizonv2-uagaas.devframe.cp.horizon.vmware.com
        name:
          type: string
          description: Vmhub name
          readOnly: true
      description: Vmhub details
      readOnly: true
    VMMaintenancePolicy:
      type: object
      properties:
        modelVersion:
          type: integer
          format: int64
        enabled:
          type: boolean
        vmMaintenancePolicyType:
          type: string
          enum:
          - SCHEDULED
          - SESSION
        vmAction:
          type: string
          enum:
          - POWER_OFF
          - POWER_ON
          - RESTART
          - SHUTDOWN
          - RESIZE
          - REBUILD
          - PAIR
        recurrenceType:
          type: string
          enum:
          - WEEKLY
          - DAILY
        dayOfWeek:
          type: integer
          format: int32
        hourOfDay:
          type: integer
          format: int32
        timeZone:
          type: string
        numOfSessionsPerVM:
          type: integer
          format: int32
      description: Defines vm maintenance policy to be used to trigger maintenance
        of VMs in MULTI-SESSION template
    CertificateData:
      type: object
      properties:
        certificate:
          type: string
          description: SSL certificate.
        certificatePassword:
          type: string
          description: SSL certificate password, needed only for PFX certificates.
      description: SSL certificate data
    SSLCertificateCreateTO:
      type: object
      properties:
        type:
          type: string
          description: SSL certificate format
          example: PEM|PFX
          enum:
          - PEM
          - PFX
        data:
          $ref: '#/components/schemas/CertificateData'
      description: UAG cluster SSL Certificate provided by Admin
    UAGDeploymentCreateTOV2:
      required:
      - fqdn
      - internalFqdn
      - numberOfGateways
      type: object
      properties:
        name:
          type: string
          description: User defined name for this UAG deployment
          example: My UAG Deployment
        description:
          type: string
          description: User defined description for this UAG deployment
          example: UAG Deployment description
        orgId:
          type: string
          description: Org ID that owns this record
          example: 0123456789
        projectId:
          type: string
          description: ID of the CSP project that owns this data
        type:
          type: string
          description: UAG deployment type
          example: EXTERNAL | INTERNAL | INTERNAL_AND_EXTERNAL
        providerInstanceId:
          type: string
          description: Provider instance to where this UAG deployment is deployed
          example: 0123456789
        numberOfGateways:
          type: integer
          description: Number of Gateways needed in the UAG deployment cluster
          format: int32
          example: 2
        fqdn:
          type: string
          description: Admin-defined FQDN of the UAG cluster
          example: www.example.com
        internalFqdn:
          type: string
          description: Admin-defined internal FQDN of the UAG cluster. Only needed
            if different from 'fqdn'
        blastTcpPort:
          type: string
          description: 'Blast Tcp Port for UAG cluster. Allowed values: [8443, 443]'
          example: '8443'
        sslCertificate:
          $ref: '#/components/schemas/SSLCertificateCreateTO'
        infrastructure:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/InfrastructureResource'
          description: Other infrastructure resources for the deployment. The keys
            in this map and the interpretation of the values depend on the provider
            type.
        resourceTags:
          type: object
          additionalProperties:
            type: string
            description: Resource tags that are added to UAG deployment
          description: Resource tags that are added to UAG deployment
        proxyConfiguration:
          $ref: '#/components/schemas/UAGProxyConfigTO'
        gateways:
          type: array
          description: Gateways for unmanaged UAGs
          items:
            $ref: '#/components/schemas/UAGVmDetailsCreateTO'
        customIpConfiguration:
          $ref: '#/components/schemas/CustomIpConfiguration'
    UAGProxyConfigTO:
      type: object
      properties:
        proxyHost:
          type: string
          description: Proxy host
        proxyPort:
          type: integer
          description: Proxy port
          format: int32
        proxyName:
          type: string
          description: Proxy name
          example: test-proxy
        proxyType:
          type: string
          description: Proxy type
          example: HTTP
          enum:
          - HTTP
          - HTTPS
        trustedCertificate:
          type: string
          description: Certificate (CA) of the Proxy server to be added to the truststore
            of the UAG PEM format
      description: Proxy configuration for UAG
    UAGVmDetailsCreateTO:
      type: object
      properties:
        managementPrivateIp:
          type: string
          description: UAG management private IP or FQDN
          example: 1.1.1.1
        vmName:
          type: string
          description: UAG VM name
          example: VM-001
        gatewayUsername:
          type: string
          description: UAG Gateway Username
        gatewayPassword:
          type: array
          description: UAG Gateway VM Password
          items:
            type: string
            description: UAG Gateway VM Password
      description: Gateways for unmanaged UAGs
    UAGDeploymentRetryTO:
      type: object
      properties:
        infrastructure:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/InfrastructureResource'
          description: For a retry-create operation, the networking details and VM
            SKU can be changed. For scale retry, only the VM SKU can be changed.
    GetPkiCertificateTO:
      type: object
      allOf:
      - $ref: '#/components/schemas/UAGDiagnosticTO'
    UAGDiagnosticTO:
      type: object
      properties:
        diagnosticType:
          type: string
          description: UAG deployment diagnostic type
          enum:
          - GET_PODS
          - GET_SERVICES
          - GET_DEPLOYMENTS
          - DESCRIBE_DEPLOYMENT
          - GET_EVENTS
          - URL_ACCESSIBILITY
          - GET_POD_LOGS
          - GET_ALL_CONTAINERS
          - RESTART_DEPLOYMENT
          - GET_NODES
          - DESCRIBE_NODE
          - GET_KUBERNETES_VERSION
          - GET_NAMESPACES
          - DELETE_STALE_PODS
          - TOP
          - RESTART_NODE
          - RESTART_ALL_NODES
          - LIST_DETECTORS
          - RESTART_VM
          - GET_VM_POWER_STATE
          - LIST_VM_RESOURCES
          - CHECK_VM_OUTBOUND_CONNECTIVITY
          - STOP_WAZUH
          - UNINSTALL_WAZUH
          - GET_PKI_CERTIFICATE
          - UPDATE_PKI_CERTIFICATE
        gatewayId:
          type: string
          description: UAG gateway VM Id
      discriminator:
        propertyName: diagnosticType
    UpdatePkiCertificateTO:
      type: object
      allOf:
      - $ref: '#/components/schemas/UAGDiagnosticTO'
    UAGDeploymentDiagnosticResponseTO:
      required:
      - orgId
      - uagDeploymentId
      type: object
      properties:
        uagDeploymentId:
          type: string
          description: The id of the UAG Deployment
          readOnly: true
          example: id
        orgId:
          type: string
          description: The id of the CSP org
          readOnly: true
          example: orgId
        diagnosticType:
          type: string
          description: Diagnostic Type that corresponds to a use case
          readOnly: true
          example: GET_PKI_CERTIFICATE
          enum:
          - GET_PODS
          - GET_SERVICES
          - GET_DEPLOYMENTS
          - DESCRIBE_DEPLOYMENT
          - GET_EVENTS
          - URL_ACCESSIBILITY
          - GET_POD_LOGS
          - GET_ALL_CONTAINERS
          - RESTART_DEPLOYMENT
          - GET_NODES
          - DESCRIBE_NODE
          - GET_KUBERNETES_VERSION
          - GET_NAMESPACES
          - DELETE_STALE_PODS
          - TOP
          - RESTART_NODE
          - RESTART_ALL_NODES
          - LIST_DETECTORS
          - RESTART_VM
          - GET_VM_POWER_STATE
          - LIST_VM_RESOURCES
          - CHECK_VM_OUTBOUND_CONNECTIVITY
          - STOP_WAZUH
          - UNINSTALL_WAZUH
          - GET_PKI_CERTIFICATE
          - UPDATE_PKI_CERTIFICATE
        command:
          type: string
          description: Command ran using Azure run command option
          readOnly: true
          example: curl -v
        diagnosticData:
          type: string
          description: Diagnostic Data response from Azure run commands
          readOnly: true
          example: diagnosticData
    TemplateCreateTOV2:
      type: object
      properties:
        orgId:
          type: string
          description: Org ID that owns this template.
        projectId:
          type: string
          description: ID of the CSP project that owns this data
        name:
          type: string
          description: Template name.
          example: My floating desktop template
        description:
          type: string
          description: An arbitrary description for this template.
          example: My floating desktop template
        uagDeploymentId:
          type: string
          description: ID of the 'uagDeployment' for the template. This will define
            which UAG cluster will be used to connect clients to VMs
        providerInstanceId:
          type: string
          description: ID of the provider instance to used when creating VMs for this
            template. This will define, for example, the subscription and region of
            the VMs for Azure templates.
        imageReference:
          $ref: '#/components/schemas/ImageReference'
        activeDirectoryId:
          type: string
          description: ID of the Active Directory configuration that will be used
            when creating VMs in this template. This defines the domain to which VMs
            will be joined, and the account used to do so.
        computerAccountOU:
          type: string
          description: The VMs of this template will be part of this Organization
            Unit in the AD
          example: CN=Computers
        templateType:
          type: string
          description: Template type. 'DEDICATED' creates single-session Windows 10
            VMs that are assigned to and owned by specific users. 'FLOATING' creates
            single-session Windows 10 VMs that are shared. 'MULTI_SESSION' creates
            multi-session Windows Server VMs and multi-session Windows 10 VMs
          enum:
          - DEDICATED
          - FLOATING
          - MULTI_SESSION
          - STUDIO
          - APP_CAPTURE_STUDIO
          - ELASTIC_GPU
          - RDSH
          - WVD
        desktopAdminUsername:
          type: string
          description: The initial admin username for all new VMs created from this
            template.
        desktopAdminPassword:
          type: array
          description: The initial admin password for all new VMs created from this
            template.
          items:
            type: string
            description: The initial admin password for all new VMs created from this
              template.
        vmNamePattern:
          type: string
          description: Pattern used as prefix for VMs created for this template.
        sessionsPerVm:
          type: integer
          description: Max number of desktops sessions allowed per VM. For Windows
            desktop VMs, this value must be 1. For MULTI_SESSION, it can be any value
            greater than 0.
          format: int32
        maxQuiescingVMs:
          type: integer
          description: Max number of VMs which can quiesced when the template is undergoing
            normal maintenance.
          format: int32
          example: 10
        diskEncryption:
          $ref: '#/components/schemas/DiskEncryption'
        templateConnectivityStatus:
          type: string
          description: Defines whether this template is 'offline' or 'online'. When
            offline, noVM lifecycle operations will be performed for this template,
            and no client connections will be allowed.
          enum:
          - ONLINE
          - OFFLINE
        protocols:
          type: array
          description: List of protocols to be allowed for client connections to desktops
            in this template. Allowable values are 'BLAST', 'PCOIP' and 'RDP'.
          items:
            type: string
            description: List of protocols to be allowed for client connections to
              desktops in this template. Allowable values are 'BLAST', 'PCOIP' and
              'RDP'.
            enum:
            - BLAST
            - PCOIP
            - RDP
        networks:
          type: array
          description: List of network resources that will be used when creating VMs
            for this template. The meaning of 'network resource' will depend on the
            provider type. For example, in Azure, this will be a list of subnets.
          items:
            $ref: '#/components/schemas/InfrastructureResource'
        infrastructure:
          type: object
          additionalProperties:
            type: array
            description: All other provider resources that should be used when creating
              VMs for this template. The keys in this map and the interpretation of
              the values depend on the provider type.
            items:
              $ref: '#/components/schemas/InfrastructureResource'
          description: All other provider resources that should be used when creating
            VMs for this template. The keys in this map and the interpretation of
            the values depend on the provider type.
        powerPolicy:
          $ref: '#/components/schemas/PowerPolicy'
        sparePolicy:
          $ref: '#/components/schemas/SparePolicy'
        agentCustomization:
          $ref: '#/components/schemas/AgentCustomization'
        vmLicenseType:
          type: string
          description: The type of Windows licenses that the creating organization
            possesses and wishes to use for all VMs created as part of this template
          enum:
          - NONE
          - WINDOWS_CLIENT
          - WINDOWS_SERVER
        licenseProvided:
          type: boolean
          description: Represents if the Windows License Type was acknowledged and
            provided by the user
          enum:
          - true
          - false
        resourceTags:
          type: object
          additionalProperties:
            type: string
            description: Tags to be added to resources when they are created as part
              of this template.
          description: Tags to be added to resources when they are created as part
            of this template.
        applicationProperties:
          type: object
          additionalProperties:
            type: string
            description: Application properties to be added when template is created.
          description: Application properties to be added when template is created.
        flags:
          type: object
          additionalProperties:
            type: boolean
            description: Boolean flags that control certain logic for admin template.
          description: Boolean flags that control certain logic for admin template.
        diskSizeInGB:
          type: integer
          description: Specifies the size of os disk in gigabytes
          format: int32
        availabilityZoneEnabled:
          type: boolean
          description: Deploy desktop VM in different availability zones
          enum:
          - true
          - false
        elasticGPU:
          $ref: '#/components/schemas/ElasticGPU'
        reuseVmId:
          type: boolean
          description: True if reuse VM id is enabled.
          enum:
          - false
        vmRefreshType:
          type: string
          description: Indicate what operation is executed when refreshing floating
            pool VM
          enum:
          - DELETE_VM
          - REVERT_TO_SNAPSHOT
          - DELETE_VM, REVERT_TO_SNAPSHOT
        templateTimeZone:
          $ref: '#/components/schemas/TemplateTimeZone'
        manualVM:
          type: boolean
        uagDeploymentRequired:
          type: boolean
    VirtualMachineQueryTO:
      type: object
      properties:
        ids:
          type: array
          description: list of VM ids to query from
          items:
            type: string
            description: list of VM ids to query from
        search:
          type: string
          description: VM search string
          readOnly: true
          example: id $in [vmId1, vmId2, ..., vmIdn]
    VirtualMachineBatchResizeRequestTO:
      type: object
      properties:
        query:
          $ref: '#/components/schemas/VirtualMachineResizeQueryTO'
        patch:
          $ref: '#/components/schemas/VirtualMachineResizePatchTO'
    VirtualMachineResizePatchTO:
      required:
      - osDiskSize
      - osDiskType
      - vmSize
      type: object
      properties:
        vmSize:
          type: string
          description: VM size
          example: Standard_D2_v3
        osDiskSize:
          type: integer
          description: OS disk size in GB
          format: int32
        osDiskType:
          type: string
          description: OS disk type
          example: Standard_LRS
    VirtualMachineResizeQueryTO:
      type: object
      properties:
        search:
          type: string
          description: VM search string
          example: id $in [vmId1, vmId2, ..., vmIdn]
    VirtualMachineBatchResponseTO:
      required:
      - errors
      - results
      type: object
      properties:
        errors:
          type: object
          additionalProperties:
            type: array
            description: VirtualMachines where action was unsuccessful
            readOnly: true
            example: virtualMachineId, ErrorDetail
            items:
              $ref: '#/components/schemas/ErrorDetail'
          description: VirtualMachines where action was unsuccessful
          readOnly: true
          example: virtualMachineId, ErrorDetail
        results:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/VirtualMachineResponseTO'
          description: VirtualMachines where action was successful
          readOnly: true
          example: virtualMachineId, InventoryVMTO
    VirtualMachineResponseTO:
      type: object
      properties:
        id:
          type: string
          description: VM ID
          readOnly: true
        cloudId:
          type: string
          description: VM ID from cloud provider
          readOnly: true
        lifecycleStatus:
          type: string
          description: VM lifecycle status
          readOnly: true
        image:
          type: string
          description: Image used to create the VM
          readOnly: true
        error:
          type: string
          description: Reason for error status
          readOnly: true
        privateIp:
          type: string
          readOnly: true
        powerState:
          type: string
          description: Power state
          readOnly: true
        snapshotId:
          type: string
          description: VM snapshot ID
          readOnly: true
        agentStatus:
          type: string
          description: Agent status
        statusCode:
          type: integer
          description: Agent status code
          format: int32
        version:
          type: string
          description: Agent version
          deprecated: true
        viewAgentVersion:
          type: string
          description: View Agent version
        haiAgentVersion:
          type: string
          description: HAI Agent version
        timestamp:
          type: integer
          description: Agent message timestamp. The inventory will only store the
            the latest record ever seen, and discard stale ones if received later
          format: int64
        publicKey:
          type: string
        sessionPlacementStatus:
          type: string
          description: Indicates the availability of the vm for session placement
        maxSessions:
          type: integer
          description: Indicates maximum number of sessions supported by the VM
          format: int32
        vmFreeSessions:
          type: integer
          description: Indicates the number of free sessions on the VM
          format: int32
        updatedLoadIndexAt:
          type: string
          format: date-time
          readOnly: true
        loadIndex:
          type: number
          format: double
          readOnly: true
        createdAt:
          type: string
          format: date-time
          readOnly: true
        updatedAt:
          type: string
          format: date-time
          readOnly: true
        vmSize:
          type: string
          description: VM size
          readOnly: true
          example: Standard_D2_v3
        osDiskSize:
          type: integer
          description: OS disk size in GB
          format: int32
          readOnly: true
        osDiskType:
          type: string
          description: OS disk type
          readOnly: true
          example: Standard_LRS
        az:
          type: string
          description: Availability Zone Id
          readOnly: true
        subnet:
          type: string
          description: VM subnet
          readOnly: true
        name:
          type: string
          description: Template Name
          readOnly: true
        orgId:
          type: string
          description: Org ID
          readOnly: true
      description: Inventory VM information
      readOnly: true
      example: virtualMachineId, InventoryVMTO
    TemplateExpansionCreateTO:
      type: object
      properties:
        orgId:
          type: string
          description: Org ID that owns this template.
        parentId:
          type: string
          description: Parent template ID
        name:
          type: string
          description: Name of this expansion template
        providerInstanceId:
          type: string
          description: ID of the provider instance to used when creating VMs for this
            template. This will define, for example, the subscription and region of
            the VMs for Azure templates.
        templateConnectivityStatus:
          type: string
          description: Defines whether this template is 'offline' or 'online'. When
            offline, noVM lifecycle operations will be performed for this template,
            and no client connections will be allowed.
          enum:
          - ONLINE
          - OFFLINE
        networks:
          type: array
          description: List of network resources that will be used when creating VMs
            for this template. The meaning of 'network resource' will depend on the
            provider type. For example, in Azure, this will be a list of subnets.
          items:
            $ref: '#/components/schemas/InfrastructureResource'
        infrastructure:
          type: object
          additionalProperties:
            type: array
            description: All other provider resources that should be used when creating
              VMs for this template. The keys in this map and the interpretation of
              the values depend on the provider type.
            items:
              $ref: '#/components/schemas/InfrastructureResource'
          description: All other provider resources that should be used when creating
            VMs for this template. The keys in this map and the interpretation of
            the values depend on the provider type.
        sparePolicy:
          $ref: '#/components/schemas/SparePolicy'
        vmNamePattern:
          type: string
          description: Pattern used as prefix for VMs created for this template.
        availabilityZoneEnabled:
          type: boolean
          description: Deploy desktop vm in different availability zones
          enum:
          - true
          - false
        templateTimeZone:
          $ref: '#/components/schemas/TemplateTimeZone'
    SsoConfigurationCreateTOV2:
      required:
      - activeDirectoryIds
      - edgeIds
      - name
      - orgId
      - ssoConfigurationType
      type: object
      properties:
        orgId:
          type: string
          description: Organization ID
          example: org-1
        projectId:
          type: string
          description: ID of the CSP project that owns this data
        name:
          type: string
          description: The name of the SSO configuration
          example: my-sso-configuration
        description:
          type: string
          description: The description of the SSO configuration
          example: My SSO configuration.
        activeDirectoryIds:
          uniqueItems: true
          type: array
          description: Set of Active Directory IDs that are part of the same Active
            Directory Forest.
          items:
            type: string
            description: Set of Active Directory IDs that are part of the same Active
              Directory Forest.
        edgeIds:
          uniqueItems: true
          type: array
          description: SSO configuration will be part of these edges.
          items:
            type: string
            description: SSO configuration will be part of these edges.
        ssoConfigurationType:
          type: string
          enum:
          - VMWARE_CA
          - MICROSOFT_CA
        configProperties:
          type: object
          additionalProperties:
            type: string
    ActiveDirectoryAccountTO:
      type: object
      properties:
        primary:
          $ref: '#/components/schemas/ActiveDirectoryCredentialTO'
        auxiliary:
          $ref: '#/components/schemas/ActiveDirectoryCredentialTO'
      description: AD accounts that will renew enrollment agent certificates when
        using Microsoft CA
    ActiveDirectoryCredentialTO:
      type: object
      properties:
        username:
          type: string
          description: Username
      description: Auxiliary AD account details
      example: details include username
    ActiveDirectoryReported:
      type: object
      properties:
        edgeDeploymentName:
          type: string
        requestId:
          type: string
        activeDirectoryHealthStatus:
          type: string
          enum:
          - NOT_RUN
          - SUCCESS
          - RUNNING
          - RUN_FAILED
          - ERROR
        message:
          type: string
        status:
          type: integer
          format: int32
        errorDetails:
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetail'
        adUsers:
          type: array
          items:
            $ref: '#/components/schemas/AdUser'
        trueSsoTemplatesHostsMap:
          type: object
          additionalProperties:
            type: array
            deprecated: true
            items:
              type: string
              deprecated: true
          deprecated: true
        enrollmentAgentTemplatesHostsMap:
          type: object
          additionalProperties:
            type: array
            deprecated: true
            items:
              type: string
              deprecated: true
          deprecated: true
        trueSsoTemplatesHosts:
          type: array
          items:
            type: object
            additionalProperties:
              type: object
        enrollmentAgentTemplatesHosts:
          type: array
          items:
            type: object
            additionalProperties:
              type: object
        certificateIds:
          uniqueItems: true
          type: array
          items:
            type: string
        domainSID:
          type: string
        dnsForest:
          type: string
        forestRootContext:
          type: string
        updatedAt:
          type: string
          format: date-time
      description: Reported connectivity statuses for each edge deployment associated
        to the AD
      example: <edgeDeploymentId, ActiveDirectoryReported>
    ActiveDirectoryTO:
      type: object
      properties:
        orgId:
          type: string
          description: Org ID that owns this record
          readOnly: true
          example: 0123456789
        projectId:
          type: string
          description: ID of the CSP project that owns this data
          readOnly: true
        id:
          type: string
          description: Unique record ID
          readOnly: true
          example: 0123456789
        name:
          type: string
          description: Name that helps the customer identify the record
          example: TestAD
        description:
          type: string
          description: Description for the AD
          example: This is a test AD
        location:
          type: string
          description: location
          readOnly: true
          example: US
        dnsDomainName:
          type: string
          description: Directory DNS name
          readOnly: true
          example: example.com
        createdAt:
          type: string
          description: Record creation timestamp
          format: date-time
          readOnly: true
        updatedAt:
          type: string
          description: Record update timestamp
          format: date-time
          readOnly: true
        version:
          type: integer
          description: Record version (internal)
          format: int64
          readOnly: true
        credentialId:
          type: string
          description: The credential ID to be used with the credential service
          readOnly: true
          example: 5fb352ed5b19360006d8fd93
        defaultOU:
          type: string
          description: Default OU (organizational unit) for adding VMs to the domain
          example: OU=Computers
        joinAccounts:
          $ref: '#/components/schemas/ActiveDirectoryAccountTO'
        bindAccounts:
          $ref: '#/components/schemas/ActiveDirectoryAccountTO'
        enrollmentServiceAccounts:
          $ref: '#/components/schemas/ActiveDirectoryAccountTO'
        directoryAccessProtocol:
          type: string
          description: LDAP or LDAPS
          example: LDAPS
          enum:
          - LDAP
          - LDAPS
        directoryAccessPort:
          type: integer
          description: Directory Access port number. Default is 636
          format: int32
          example: 636
        activeDirectoryHealthStatus:
          type: string
          description: Overall reported connectivity status for the AD
          example: SUCCESS
          enum:
          - NOT_RUN
          - SUCCESS
          - RUNNING
          - RUN_FAILED
          - ERROR
        reportedStatus:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ActiveDirectoryReported'
          description: Reported connectivity statuses for each edge deployment associated
            to the AD
          example: <edgeDeploymentId, ActiveDirectoryReported>
      description: 'Searchable fields are "id", "projectId",  "name", "dnsDomainName",
        "defaultOU", "activeDirectoryHealthStatus" '
    AdUser:
      type: object
      properties:
        adAccountType:
          type: string
        accountExpiryFileTime:
          type: string
        passwordExpiryFileTime:
          type: string
    SsoConfigurationTOV2:
      type: object
      properties:
        id:
          type: string
          description: SSO configuration ID
          readOnly: true
        orgId:
          type: string
          description: Organization ID
          readOnly: true
          example: org-1
        projectId:
          type: string
          description: ID of the CSP project that owns this data
          readOnly: true
        location:
          type: string
          description: location
          readOnly: true
          example: US
        name:
          type: string
          description: The name of the SSO configuration
          example: my-sso-configuration
        description:
          type: string
        discoveryStatus:
          type: string
        ssoConfigurationType:
          type: string
          enum:
          - VMWARE_CA
          - MICROSOFT_CA
        activeDirectoryIds:
          uniqueItems: true
          type: array
          description: List of Active Directory IDs that are part of the same Active
            Directory Forest.
          items:
            type: string
            description: List of Active Directory IDs that are part of the same Active
              Directory Forest.
        edgeIds:
          uniqueItems: true
          type: array
          description: List of Edge Deployment IDs that are part of the same Active
            Directory Forest.
          items:
            type: string
            description: List of Edge Deployment IDs that are part of the same Active
              Directory Forest.
        createdAt:
          type: string
          description: Created date
          format: date-time
        updatedAt:
          type: string
          description: Updated date
          format: date-time
        activeDirectories:
          type: array
          description: List of Active Directories that are part of the same Active
            Directory Forest.
          items:
            $ref: '#/components/schemas/ActiveDirectoryTO'
        edgeDeployments:
          type: array
          description: List of edge deployments associated to this SSO configuration.
          items:
            $ref: '#/components/schemas/EdgeDeploymentTOV2'
        properties:
          type: object
          additionalProperties:
            type: string
            description: Properties associated with the SSO configuration
            deprecated: true
          description: Properties associated with the SSO configuration
          deprecated: true
        configProperties:
          type: object
          additionalProperties:
            type: string
            description: Properties associated with the SSO configuration
          description: Properties associated with the SSO configuration
        latestInstalledCaBundleExpiry:
          type: integer
          description: Expiration for the latest installed CA Bundle
          format: int64
        version:
          type: integer
          description: Record version (internal)
          format: int64
          readOnly: true
      description: Searchable fields are "id", "projectId", "name", "activeDirectoryIds"
    ProviderInstanceCreateTOV2:
      type: object
      properties:
        name:
          type: string
          description: User defined name for this instance
          example: My Instance Name
        description:
          type: string
          description: User defined description for this instance
          example: My Instance description
        orgId:
          type: string
          description: Org ID that owns this record
          example: 0123456789
        projectId:
          type: string
          description: ID of the CSP project that owns this data
        edgeDeploymentId:
          type: string
          description: EdgeGateway Deployment which we can use to manage and monitor
            infrastructure
          example: 0123456789
        providerDetails:
          $ref: '#/components/schemas/ProviderSpecDetailsTO'
        resourceTags:
          type: object
          additionalProperties:
            type: string
            description: Resource tags that are added to Provider Instance
          description: Resource tags that are added to Provider Instance
        denyOperations:
          type: array
          description: User defined operations to be denied on this instance
          items:
            type: string
            description: User defined operations to be denied on this instance
            enum:
            - EDGE_DEPLOYMENT
            - UAG_DEPLOYMENT
            - TEMPLATE_CREATION
            - CLOUD_MANAGED_POOLS
    EdgeDeploymentCreateTOV2:
      required:
      - fqdn
      - name
      - orgId
      - providerInstanceId
      type: object
      properties:
        orgId:
          type: string
          description: The id of the CSP org
          example: '1234556'
        projectId:
          type: string
          description: ID of the CSP project that owns this data
        providerInstanceId:
          type: string
          description: The ProviderInstance where the Edge Deployment is deployed
          example: '123456'
        name:
          type: string
          description: The name of the Edge Deployment
          example: my-first-edge-deployment
        description:
          type: string
          description: The name of the Edge Deployment
          example: My new edge deployment.
        fqdn:
          type: string
          description: FQDN with which to resolve the Edge VM management IP
          example: edge-deployment.example.com
        infrastructure:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/InfrastructureResource'
          description: Infrastructure resources needed by the Edge Deployment such
            as `managementNetwork`
        resourceTags:
          type: object
          additionalProperties:
            type: string
            description: Resource tags that are added to edge deployment
          description: Resource tags that are added to edge deployment
        deploymentModeDetails:
          $ref: '#/components/schemas/EdgeDeploymentModeDetailsTO'
        ssoConfigurations:
          uniqueItems: true
          type: array
          description: SSO configurations for the edge deployment.
          items:
            $ref: '#/components/schemas/EdgeSsoConfiguration'
        enablePrivateEndpoint:
          type: boolean
          description: Use Private Link Service and enable private endpoint
        adMonitoring:
          $ref: '#/components/schemas/AdMonitoring'
        agentBridge:
          $ref: '#/components/schemas/AgentBridge'
        proxyConfiguration:
          $ref: '#/components/schemas/EdgeProxyConfigurationTO'
    EdgeProxyConfigurationTO:
      required:
      - proxyHost
      type: object
      properties:
        proxyHost:
          type: string
          description: Proxy host
        proxyPort:
          type: integer
          description: Proxy port
          format: int32
        proxyName:
          type: string
        proxyType:
          type: string
          enum:
          - HTTP
          - HTTPS
        username:
          type: string
        password:
          type: string
        sslEnabled:
          type: boolean
        exclusionPolicy:
          uniqueItems: true
          type: array
          items:
            type: string
        trustedCa:
          type: string
      description: Edge Proxy configurations for edge deployment.
    TwinSyncRequestTO:
      type: object
      properties:
        modules:
          type: array
          description: List of modules for which twin configuration needs to be synced
          example:
          - INFRA_AZURE_MODULE
          - AV_AZURE_MODULE
          items:
            type: string
            description: List of modules for which twin configuration needs to be
              synced
            example: '["INFRA_AZURE_MODULE","AV_AZURE_MODULE"]'
            enum:
            - INFRA_AZURE_MODULE
            - AV_AZURE_MODULE
            - EGPU_AZURE_MODULE
            - UAG_MODULE
            - INFRA_VSPHERE_MODULE
            - INFRA_VIEW_MODULE
            - VIEW_CS_MODULE
            - AD_MODULE
            - AGENT_MODULE
    TwinSyncResponseTO:
      type: object
      properties:
        edgeDeploymentId:
          type: string
        twinSyncStatusMap:
          type: object
          additionalProperties:
            type: string
            enum:
            - NONE
            - SYNCED
            - SYNC_NEEDED
            - SYNC_FAILED
        unsupportedModules:
          type: array
          items:
            type: string
            enum:
            - INFRA_AZURE_MODULE
            - AV_AZURE_MODULE
            - EGPU_AZURE_MODULE
            - UAG_MODULE
            - INFRA_VSPHERE_MODULE
            - INFRA_VIEW_MODULE
            - VIEW_CS_MODULE
            - AD_MODULE
            - AGENT_MODULE
    EdgeEventAttributesTO:
      required:
      - attributes
      - eventTime
      - eventType
      - orgId
      type: object
      properties:
        id:
          type: string
          description: edge deployment id
        orgId:
          type: string
          description: The id of the CSP org
        eventType:
          type: string
          description: Router service sends payload based on the event
          enum:
          - DEVICE_CONNECTION_DETAILS
          - MODULE_CONNECTION_DETAILS
          - EDGE_CONFIG_DETAILS
          - SERVICE_STATUS_DETAILS
          - EDGE_GW_PROPERTIES
        eventTime:
          type: string
          description: The time at which event of type EdgeReportedEventType occurred
          format: date-time
        attributes:
          type: object
          additionalProperties:
            type: object
            description: A map of edge reported attributes
          description: A map of edge reported attributes
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        version:
          type: integer
          format: int64
    EdgeDeploymentRepairTO:
      type: object
      properties:
        overrideVersion:
          type: string
          description: override kubernetes version
          example: 1.22.6
        marketplaceVMImageVersion:
          type: string
          description: override azure marketplace vm image version
          example: 2.3.1.0-53443
        desiredVMImageVersion:
          type: string
          description: override desired vm image version
          example: 2.3.1.0-53443
        publisher:
          type: string
          description: override publisher id for edge vm  private offer.
          example: vmware-inc
        offer:
          type: string
          description: override vm offer id for edge vm  private offer
          example: euc-hcs-uag
        vmImageSKU:
          type: string
          description: override sku/plan Id for edge vm private offer.
          example: euc-hcs-edgegw-photon
        podCidr:
          type: string
          description: override podCidr for edge vm.
          example: 10.0.0.0/27
        serviceCidr:
          type: string
          description: override service cidr for edge vm.
          example: 10.0.0.0/27
    EdgeDeploymentMigrateTO:
      required:
      - infrastructure
      - name
      type: object
      properties:
        name:
          type: string
          description: The name of the Edge Deployment
          example: edge-deployment-1
        description:
          type: string
          description: The description of the Edge Deployment
          example: My new edge deployment
        infrastructure:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/InfrastructureResource'
          description: Infrastructure resources needed by the Edge Deployment such
            as `managementNetwork`
        deploymentModeDetails:
          $ref: '#/components/schemas/EdgeDeploymentModeDetailsTO'
        ssoConfigurations:
          uniqueItems: true
          type: array
          description: SSO configurations for the edge deployment.
          items:
            $ref: '#/components/schemas/EdgeSsoConfiguration'
        proxyConfiguration:
          $ref: '#/components/schemas/EdgeProxyConfigurationTO'
    EdgeDeploymentLogTO:
      type: object
      properties:
        logId:
          type: string
        edgeDeploymentId:
          type: string
        name:
          type: string
        orgId:
          type: string
        location:
          type: string
        credentialId:
          type: string
        logStatus:
          type: string
        createdAt:
          type: string
        readAccessUri:
          type: string
        errorDetail:
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetail'
    EdgeFqdnPatchResponseTO:
      type: object
      properties:
        id:
          type: string
        orgId:
          type: string
        message:
          type: string
        fqdn:
          type: string
    CheckVMOutboundConnectivityTO:
      required:
      - diagnosticType
      type: object
      allOf:
      - $ref: '#/components/schemas/EdgeDiagnosticTO'
      - type: object
        properties:
          url:
            type: string
    DeleteStalePodsTO:
      required:
      - diagnosticType
      type: object
      allOf:
      - $ref: '#/components/schemas/EdgeDiagnosticTO'
    DescribeDeploymentTO:
      required:
      - diagnosticType
      type: object
      allOf:
      - $ref: '#/components/schemas/EdgeDiagnosticTO'
      - type: object
        properties:
          k8sDeploymentName:
            type: string
          namespace:
            type: string
    DescribeNodeTO:
      required:
      - diagnosticType
      type: object
      allOf:
      - $ref: '#/components/schemas/EdgeDiagnosticTO'
      - type: object
        properties:
          nodeName:
            type: string
    EdgeDiagnosticTO:
      required:
      - diagnosticType
      type: object
      properties:
        diagnosticType:
          type: string
          enum:
          - GET_PODS
          - GET_SERVICES
          - GET_DEPLOYMENTS
          - DESCRIBE_DEPLOYMENT
          - GET_EVENTS
          - URL_ACCESSIBILITY
          - GET_POD_LOGS
          - GET_ALL_CONTAINERS
          - RESTART_DEPLOYMENT
          - GET_NODES
          - DESCRIBE_NODE
          - GET_KUBERNETES_VERSION
          - GET_NAMESPACES
          - DELETE_STALE_PODS
          - TOP
          - RESTART_NODE
          - RESTART_ALL_NODES
          - LIST_DETECTORS
          - RESTART_VM
          - GET_VM_POWER_STATE
          - LIST_VM_RESOURCES
          - CHECK_VM_OUTBOUND_CONNECTIVITY
          - STOP_WAZUH
          - UNINSTALL_WAZUH
          - GET_PKI_CERTIFICATE
          - UPDATE_PKI_CERTIFICATE
      discriminator:
        propertyName: diagnosticType
    GetAllContainersTO:
      required:
      - diagnosticType
      type: object
      allOf:
      - $ref: '#/components/schemas/EdgeDiagnosticTO'
    GetDeploymentsTO:
      required:
      - diagnosticType
      type: object
      allOf:
      - $ref: '#/components/schemas/EdgeDiagnosticTO'
    GetEventsTO:
      required:
      - diagnosticType
      type: object
      allOf:
      - $ref: '#/components/schemas/EdgeDiagnosticTO'
    GetKubernetesVersionTO:
      required:
      - diagnosticType
      type: object
      allOf:
      - $ref: '#/components/schemas/EdgeDiagnosticTO'
    GetNamespacesTO:
      required:
      - diagnosticType
      type: object
      allOf:
      - $ref: '#/components/schemas/EdgeDiagnosticTO'
    GetNodesTO:
      required:
      - diagnosticType
      type: object
      allOf:
      - $ref: '#/components/schemas/EdgeDiagnosticTO'
    GetPodLogsTO:
      required:
      - diagnosticType
      type: object
      allOf:
      - $ref: '#/components/schemas/EdgeDiagnosticTO'
      - type: object
        properties:
          logLines:
            type: integer
            format: int32
          podName:
            type: string
          containerName:
            type: string
          namespace:
            type: string
    GetPodsTO:
      required:
      - diagnosticType
      type: object
      allOf:
      - $ref: '#/components/schemas/EdgeDiagnosticTO'
    GetServicesTO:
      required:
      - diagnosticType
      type: object
      allOf:
      - $ref: '#/components/schemas/EdgeDiagnosticTO'
    GetVMPowerStateTO:
      required:
      - diagnosticType
      type: object
      allOf:
      - $ref: '#/components/schemas/EdgeDiagnosticTO'
    ListDetectorsTO:
      required:
      - diagnosticType
      type: object
      allOf:
      - $ref: '#/components/schemas/EdgeDiagnosticTO'
    ListVMResourcesTO:
      required:
      - diagnosticType
      type: object
      allOf:
      - $ref: '#/components/schemas/EdgeDiagnosticTO'
    RestartAllNodesTO:
      required:
      - diagnosticType
      type: object
      allOf:
      - $ref: '#/components/schemas/EdgeDiagnosticTO'
    RestartDeploymentTO:
      required:
      - diagnosticType
      type: object
      allOf:
      - $ref: '#/components/schemas/EdgeDiagnosticTO'
      - type: object
        properties:
          deploymentName:
            type: string
          namespace:
            type: string
    RestartNodeTO:
      required:
      - diagnosticType
      type: object
      allOf:
      - $ref: '#/components/schemas/EdgeDiagnosticTO'
      - type: object
        properties:
          nodeName:
            type: string
    RestartVMTO:
      required:
      - diagnosticType
      type: object
      allOf:
      - $ref: '#/components/schemas/EdgeDiagnosticTO'
    StopWazuhTO:
      required:
      - diagnosticType
      type: object
      allOf:
      - $ref: '#/components/schemas/EdgeDiagnosticTO'
    TopTO:
      required:
      - diagnosticType
      type: object
      allOf:
      - $ref: '#/components/schemas/EdgeDiagnosticTO'
      - type: object
        properties:
          namespace:
            type: string
          sortBy:
            type: string
          resourceType:
            type: string
    URLAccessibilityTO:
      required:
      - diagnosticType
      type: object
      allOf:
      - $ref: '#/components/schemas/EdgeDiagnosticTO'
      - type: object
        properties:
          url:
            type: string
          containerName:
            type: string
          podName:
            type: string
          namespace:
            type: string
    UnInstallWazuhTO:
      required:
      - diagnosticType
      type: object
      allOf:
      - $ref: '#/components/schemas/EdgeDiagnosticTO'
    EdgeDeploymentDiagnosticResponseTO:
      required:
      - edgeDeploymentId
      - orgId
      type: object
      properties:
        edgeDeploymentId:
          type: string
          description: The id of the Edge Deployment
          readOnly: true
          example: id
        orgId:
          type: string
          description: The id of the CSP org
          readOnly: true
          example: orgId
        diagnosticType:
          type: string
          description: Diagnostic Type that corresponds to a use case
          readOnly: true
          example: GET_PODS
          enum:
          - GET_PODS
          - GET_SERVICES
          - GET_DEPLOYMENTS
          - DESCRIBE_DEPLOYMENT
          - GET_EVENTS
          - URL_ACCESSIBILITY
          - GET_POD_LOGS
          - GET_ALL_CONTAINERS
          - RESTART_DEPLOYMENT
          - GET_NODES
          - DESCRIBE_NODE
          - GET_KUBERNETES_VERSION
          - GET_NAMESPACES
          - DELETE_STALE_PODS
          - TOP
          - RESTART_NODE
          - RESTART_ALL_NODES
          - LIST_DETECTORS
          - RESTART_VM
          - GET_VM_POWER_STATE
          - LIST_VM_RESOURCES
          - CHECK_VM_OUTBOUND_CONNECTIVITY
          - STOP_WAZUH
          - UNINSTALL_WAZUH
          - GET_PKI_CERTIFICATE
          - UPDATE_PKI_CERTIFICATE
        command:
          type: string
          description: Command used to fetch from kubernetes
          readOnly: true
          example: kubectl get pods
        diagnosticData:
          type: string
          description: Diagnostic Data response from Kubectl commands
          readOnly: true
          example: diagnosticData
    ActiveDirectoryAccountCreateTO:
      type: object
      properties:
        primary:
          $ref: '#/components/schemas/ActiveDirectoryCredentialCreateTO'
        auxiliary:
          $ref: '#/components/schemas/ActiveDirectoryCredentialCreateTO'
      description: AD accounts that will renew enrollment agent certificates when
        using Microsoft CA
    ActiveDirectoryCreateTO:
      type: object
      properties:
        orgId:
          type: string
          description: Org ID that owns this record
          example: 0123456789
        projectId:
          type: string
          description: ID of the CSP project that owns this data
        name:
          type: string
          description: Name that helps the customer identify the record
          example: TestAD
        description:
          type: string
          description: Description for the AD
          example: This is a test AD
        dnsDomainName:
          type: string
          description: Directory Domain Name
          example: example.com
        joinAccounts:
          $ref: '#/components/schemas/ActiveDirectoryAccountCreateTO'
        bindAccounts:
          $ref: '#/components/schemas/ActiveDirectoryAccountCreateTO'
        enrollmentServiceAccounts:
          $ref: '#/components/schemas/ActiveDirectoryAccountCreateTO'
        defaultOU:
          type: string
          description: OU (Organizational Unit) used by default for adding pool VMs
            to the domain unless specified on the pool
          example: OU=Computers
        directoryAccessProtocol:
          type: string
          description: LDAP or LDAPS
          example: LDAPS
          enum:
          - LDAP
          - LDAPS
        directoryAccessPort:
          type: integer
          description: Directory Access port number. Default is 636
          format: int32
          example: 636
    ActiveDirectoryCredentialCreateTO:
      required:
      - password
      - username
      type: object
      properties:
        username:
          type: string
          description: Username for the AD account
          example: sso-id-1
        password:
          type: string
          description: Password for the AD account
          example: secret
      description: Auxiliary Credentials to be used if primary credentials get expired
    ActiveDirectoryBatchResponseTO:
      required:
      - errors
      - results
      type: object
      properties:
        errors:
          type: object
          additionalProperties:
            type: array
            description: Active directories where action was unsuccessful
            readOnly: true
            example: activeDirectoryId, ErrorDetail
            items:
              $ref: '#/components/schemas/ErrorDetail'
          description: Active directories where action was unsuccessful
          readOnly: true
          example: activeDirectoryId, ErrorDetail
        results:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ActiveDirectoryTO'
          description: Active directories where action was successful
          readOnly: true
          example: activeDirectoryId, ActiveDirectoryTO
    SsoConfigurationCreateTO:
      required:
      - activeDirectoryIds
      - caConfigDn
      - caMode
      - name
      - orgId
      type: object
      properties:
        orgId:
          type: string
          description: Organization ID
          example: org-1
        projectId:
          type: string
          description: Project ID that owns this SSO configuration (optional)
        name:
          type: string
          description: The name of the SSO configuration
          example: my-sso-configuration
        description:
          type: string
          description: The description of the SSO configuration
          example: My SSO configuration.
        caMode:
          type: string
          description: 'CA mode. Accepted values: root or sub'
          example: sub
        caConfigDn:
          type: string
          description: Configuration DN. Verify the Active Directory to get the appropriate
            value
          example: CN=Configuration,DC=example,DC=com
        activeDirectoryIds:
          uniqueItems: true
          type: array
          description: Set of Active Directory IDs that are part of the same Active
            Directory Forest.
          items:
            type: string
            description: Set of Active Directory IDs that are part of the same Active
              Directory Forest.
        ssoConfigurationType:
          type: string
          description: SSO configuration type
          enum:
          - VMWARE_CA
          - MICROSOFT_CA
        configProperties:
          type: object
          additionalProperties:
            type: string
            description: Set of properties required for MICROSOFT_CA
          description: Set of properties required for MICROSOFT_CA
    CaBundle:
      type: object
      properties:
        caCertVersion:
          type: integer
          description: Bundle version
          format: int32
          readOnly: true
        bundlePubKey:
          type: string
          description: Public key
          readOnly: true
        subCaCsr:
          type: string
          description: Certificate request - sub CA mode
          readOnly: true
        rootCaCrt:
          type: string
          description: Root CA - root CA mode
          readOnly: true
        baseCrl:
          type: string
          description: Base CRL
          readOnly: true
        deltaCrl:
          type: string
          description: Delta CRL
          readOnly: true
        credentialId:
          type: string
          description: Credential ID
          readOnly: true
    SsoConfiguration:
      required:
      - location
      - name
      - orgId
      type: object
      properties:
        id:
          type: string
        orgId:
          type: string
        projectId:
          type: string
        location:
          type: string
        name:
          type: string
        description:
          type: string
        caMode:
          type: string
        caConfigDn:
          type: string
        activeDirectoryIds:
          uniqueItems: true
          type: array
          items:
            type: string
        caBundles:
          type: array
          items:
            $ref: '#/components/schemas/CaBundle'
        ssoConfigurationType:
          type: string
          enum:
          - VMWARE_CA
          - MICROSOFT_CA
        ssoProperties:
          type: array
          items:
            $ref: '#/components/schemas/SsoProperties'
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        version:
          type: integer
          format: int64
        latestSsoProperties:
          $ref: '#/components/schemas/SsoProperties'
    SsoProperties:
      type: object
      properties:
        properties:
          type: object
          additionalProperties:
            type: string
    DomainCertificateCreateTO:
      required:
      - orgId
      - pemEncoded
      type: object
      properties:
        orgId:
          type: string
          description: The org ID of the uploading account. This is required
        pemEncoded:
          type: string
          description: A PEM encoded certificate string to upload. This is required
    DomainCertificateBatchResponseTO:
      required:
      - errors
      - results
      type: object
      properties:
        errors:
          type: object
          additionalProperties:
            type: array
            description: Domain Certificates where save was unsuccessful
            readOnly: true
            example: certId, ErrorDetail
            items:
              $ref: '#/components/schemas/ErrorDetail'
          description: Domain Certificates where save was unsuccessful
          readOnly: true
          example: certId, ErrorDetail
        results:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/DomainCertificateTO'
          description: Domain Certificates where save was successful
          readOnly: true
          example: certId, DomainCertificateTO
    DomainCertificateTO:
      type: object
      properties:
        orgId:
          type: string
          description: Org ID that owns this record
          readOnly: true
          example: 0123456789
        location:
          type: string
          description: Location of this record
          readOnly: true
          example: US
        id:
          type: string
          description: Unique record ID
          readOnly: true
          example: 0123456789
        notValidUntil:
          type: string
          description: Certificate not valid before
          format: date-time
          readOnly: true
        notValidAfter:
          type: string
          description: Certificate not valid after
          format: date-time
          readOnly: true
        subject:
          type: string
          description: Certificate subject
          readOnly: true
          example: EMAILADDRESS=example@vmw.com, CN=hze.euc.vmware.com, OU=EUC, O=VMW,
            L=Banglore, ST=BLR, C=IN
        issuer:
          type: string
          description: Certificate issuer
          readOnly: true
          example: EMAILADDRESS=example@vmw.com, CN=hze.euc.vmware.com, OU=EUC, O=VMW,
            L=Banglore, ST=BLR, C=IN
        sha1Thumbprint:
          type: string
          description: Sha1Thumbprint
          readOnly: true
          example: 0123456789
        sha256Thumbprint:
          type: string
          description: Sha256Thumbprint
          readOnly: true
          example: 0123456789
        serialNumber:
          type: string
          description: Serial number
          readOnly: true
          example: 0123456789
        groupName:
          type: string
          description: Group Name
          readOnly: true
          example: MANUAL
        createdAt:
          type: string
          description: Certificate record creation date
          format: date-time
          readOnly: true
        updatedAt:
          type: string
          description: Certificate record last update date
          format: date-time
          readOnly: true
        version:
          type: integer
          description: Version
          format: int64
          readOnly: true
          example: 1234
        expirationStatus:
          type: string
          description: Expiration Status
          readOnly: true
          example: ERROR
          enum:
          - OK
          - WARNING
          - ERROR
      description: Searchable fields are "groupName", "id", "subject", "issuer", "serialNumber",
        "notValidUntil", "notValidAfter"
    DEMSettingCreateTO:
      type: object
      properties:
        orgId:
          type: string
          description: Org ID that owns this record
          example: 0123456789
        name:
          type: string
          description: DEM Setting name
          example: DEM 1
        configFilePath:
          type: string
          description: Dynamic Environment Manager configuration fileshare path
          example: \\FileServer\DEMConfig$\general
    TemplateBatchPatchRequestTO:
      type: object
      properties:
        query:
          $ref: '#/components/schemas/TemplateQueryTO'
        patch:
          $ref: '#/components/schemas/TemplatePatchTO'
    TemplatePatchTO:
      type: object
      properties:
        name:
          type: string
          description: Template name.
          example: My floating desktop template
        description:
          type: string
          description: An arbitrary description for this template.
          example: My floating desktop template
        imageReference:
          $ref: '#/components/schemas/ImageReference'
        computerAccountOU:
          type: string
          description: The VMs of this template will be part of this Organization
            Unit in the AD
          example: CN=Computers
        sessionsPerVm:
          type: integer
          description: Max number of desktops sessions allowed per VM. For Windows
            desktop VMs, this value must be 1. For MULTI_SESSION, it can be any value
            greater than 0.
          format: int32
        maxQuiescingVMs:
          type: integer
          description: Max number of desktops which can quiesced when the template
            is undergoing normal maintenance. Defaults to 25% of the spare policy
            max.
          format: int32
          example: 10
        diskEncryption:
          $ref: '#/components/schemas/DiskEncryption'
        templateConnectivityStatus:
          type: string
          description: Defines whether this template is 'offline' or 'online'. When
            offline, no VM lifecycle operations will be performed for this template,
            and no client connections will be allowed.
          enum:
          - ONLINE
          - OFFLINE
        protocols:
          type: array
          description: List of protocols to be allowed for client connections to desktops
            in this template. Allowable values are 'BLAST', 'PCOIP' and 'RDP'.
          items:
            type: string
            description: List of protocols to be allowed for client connections to
              desktops in this template. Allowable values are 'BLAST', 'PCOIP' and
              'RDP'.
            enum:
            - BLAST
            - PCOIP
            - RDP
        networks:
          type: array
          description: List of network resources that will be used when creating VMs
            for this template. The meaning of 'network resource' will depend on the
            provider type. For example, in Azure, this will be a list of subnets.
          items:
            $ref: '#/components/schemas/InfrastructureResource'
        infrastructure:
          type: object
          additionalProperties:
            type: array
            description: All other provider resources that should be used when creating
              VMs for this template. The keys in this map and the interpretation of
              the values depend on the provider type.
            items:
              $ref: '#/components/schemas/InfrastructureResource'
          description: All other provider resources that should be used when creating
            VMs for this template. The keys in this map and the interpretation of
            the values depend on the provider type.
        powerPolicy:
          $ref: '#/components/schemas/PowerPolicy'
        sparePolicy:
          $ref: '#/components/schemas/SparePolicy'
        agentCustomization:
          $ref: '#/components/schemas/AgentCustomization'
        resourceTags:
          type: object
          additionalProperties:
            type: string
            description: Tags to be added to resources when they are created as part
              of this template.
          description: Tags to be added to resources when they are created as part
            of this template.
        applicationProperties:
          type: object
          additionalProperties:
            type: string
            description: Application properties to be added when template is created.
          description: Application properties to be added when template is created.
        flags:
          type: object
          additionalProperties:
            type: boolean
            description: Boolean flags that control certain logic for admin template.
          description: Boolean flags that control certain logic for admin template.
        vmLicenseType:
          type: string
          description: The type of Windows licenses that the creating organization
            posesses and wishes to use for all VMs created as part of this template.
          enum:
          - NONE
          - WINDOWS_CLIENT
          - WINDOWS_SERVER
        diskSizeInGB:
          type: integer
          description: Specifies the size of os disk in gigabytes
          format: int32
        availabilityZoneEnabled:
          type: boolean
          description: Deploy desktop vm in different availability zones
          enum:
          - true
          - false
        elasticGPU:
          $ref: '#/components/schemas/ElasticGPU'
        vmRefreshType:
          type: string
          description: The operation will be executed when refresh floating pool VM
          enum:
          - DELETE_VM
          - REVERT_TO_SNAPSHOT
        templateTimeZone:
          $ref: '#/components/schemas/TemplateTimeZone'
      description: Patch model for updating template.
    UAGDeploymentPatchTOV2:
      type: object
      properties:
        numberOfGateways:
          type: integer
          description: Number of Gateways needed in the UAG deployment cluster
          format: int32
          example: 2
        fqdn:
          type: string
          description: Admin-defined FQDN of the UAG cluster
          example: uag.example.com
        internalFqdn:
          type: string
          description: Admin-defined internal FQDN of the UAG cluster
          example: int.uag.example.com
        blastTcpPort:
          type: string
          description: 'Blast Tcp Port for UAG cluster. Allowed values: [8443, 443]'
          example: '8443'
        sslCertificate:
          $ref: '#/components/schemas/SSLCertificateCreateTO'
        proxyConfiguration:
          $ref: '#/components/schemas/UAGProxyConfigTO'
        infrastructure:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/InfrastructureResource'
          description: Other infrastructure resources for the UAG deployment. The
            keys in this map and the interpretation of the values depend on the provider
            type.
        customIpConfiguration:
          $ref: '#/components/schemas/CustomIpConfiguration'
    UAGVmDetailsPatchTO:
      type: object
      properties:
        managementPrivateIp:
          type: string
          description: UAG management private IP or FQDN
          example: 1.1.1.1
        vmName:
          type: string
          description: UAG VM name
          example: VM-001
        gatewayUsername:
          type: string
          description: UAG Gateway Username
        gatewayPassword:
          type: array
          description: UAG Gateway VM Password
          items:
            type: string
            description: UAG Gateway VM Password
        adminThumbprint:
          type: string
          description: UAG Gateway VM Thumbprint
    TemplateExpansionPatchTO:
      type: object
      properties:
        name:
          type: string
          description: Name of this expansion template
        description:
          type: string
          description: An arbitrary description for this template.
          example: My floating desktop template
        templateConnectivityStatus:
          type: string
          description: Defines whether this template is 'offline' or 'online'. When
            offline, noVM lifecycle operations will be performed for this template,
            and no client connections will be allowed.
          enum:
          - ONLINE
          - OFFLINE
        sparePolicy:
          $ref: '#/components/schemas/SparePolicy'
        maxQuiescingVMs:
          type: integer
          description: Max number of desktops which can quiesced when the template
            is undergoing normal maintenance. Defaults to 25% of the spare policy
            max.
          format: int32
          example: 10
        vmNamePattern:
          type: string
          description: Pattern used as prefix for VMs created for this template.
        templateTimeZone:
          $ref: '#/components/schemas/TemplateTimeZone'
    MicrosoftCASsoConfigurationPatchTOV2:
      type: object
      allOf:
      - $ref: '#/components/schemas/SsoConfigurationPatchTOV2'
      - type: object
        properties:
          configProperties:
            type: object
            additionalProperties:
              type: object
    SsoConfigurationPatchTOV2:
      type: object
      properties:
        ssoConfigurationType:
          type: string
          description: The type of the SSO config
          example: VMWARE_CA or MICROSOFT_CA
          enum:
          - VMWARE_CA
          - MICROSOFT_CA
        name:
          type: string
          description: The name of the SSO config
          example: my-sso-config
        description:
          type: string
          description: The description of the SSO config
          example: My SSO config.
        activeDirectoryIds:
          uniqueItems: true
          type: array
          description: List of Active Directory IDs that are part of the same Active
            Directory Forest.
          items:
            type: string
            description: List of Active Directory IDs that are part of the same Active
              Directory Forest.
        edgeIds:
          uniqueItems: true
          type: array
          description: List of Edge IDs.
          items:
            type: string
            description: List of Edge IDs.
      discriminator:
        propertyName: ssoConfigurationType
    VMwareCASsoConfigurationPatchTOV2:
      type: object
      allOf:
      - $ref: '#/components/schemas/SsoConfigurationPatchTOV2'
      - type: object
        properties:
          forceNewCaBundle:
            type: boolean
            description: flag to enable new CA bundle
          caCertVersionsToDelete:
            type: array
            description: 'List of valid CA cert versions to be deleted.If the CA bundle
              versions to be deleted is passed, then rest all of the fields can be
              optional, if only deletion of bundle is desired.Default : null'
            example:
            - 1
            - 2
            items:
              type: integer
              description: 'List of valid CA cert versions to be deleted.If the CA
                bundle versions to be deleted is passed, then rest all of the fields
                can be optional, if only deletion of bundle is desired.Default : null'
              format: int32
          configProperties:
            type: object
            additionalProperties:
              type: object
              description: map of config properties to be updated. caMode and caConfigDn
            description: map of config properties to be updated. caMode and caConfigDn
    ProviderInstancePatchTOV2:
      type: object
      properties:
        name:
          type: string
          description: User defined name
          example: My Provider Instance
        description:
          type: string
          description: User defined description
        resourceTags:
          type: object
          additionalProperties:
            type: string
            description: Resource tags that are added to Provider Instance
          description: Resource tags that are added to Provider Instance
        providerDetails:
          $ref: '#/components/schemas/ProviderSpecDetailsTO'
        denyOperations:
          type: array
          description: User defined operations to be denied on this instance
          items:
            type: string
            description: User defined operations to be denied on this instance
            enum:
            - EDGE_DEPLOYMENT
            - UAG_DEPLOYMENT
            - TEMPLATE_CREATION
            - CLOUD_MANAGED_POOLS
    ProviderInstancePatchScaleDataTO:
      required:
      - scaleData
      type: object
      properties:
        scaleData:
          type: array
          description: Data needed for operations at high scale associated with this
            provider instance.
          items:
            type: object
            additionalProperties:
              type: string
          example: null
    NetworkPreferenceTO:
      type: object
      properties:
        desktop:
          type: array
          description: Desktop networks preferences
          items:
            $ref: '#/components/schemas/InfrastructureResource'
        dmz:
          type: array
          description: Dmz networks preferences
          items:
            $ref: '#/components/schemas/InfrastructureResource'
        management:
          type: array
          description: Management networks preferences
          items:
            $ref: '#/components/schemas/InfrastructureResource'
      description: 'Available Labels: ''desktop, dmz, management'''
    ProviderInstancePatchEdgeTOV2:
      required:
      - edgeDeploymentId
      type: object
      properties:
        edgeDeploymentId:
          type: string
    EdgeDeploymentModeDetailsPatchTO:
      type: object
      properties:
        attributes:
          type: object
          additionalProperties:
            type: string
          description: The specific attributes that can be used to patch an edge deployment.
          example:
            numNodes: '4'
      description: Edge deployment mode details
    EdgeDeploymentPatchTOV2:
      type: object
      properties:
        name:
          type: string
          description: The name of the Edge Deployment
          example: my-first-edge-deployment
        description:
          type: string
          description: The name of the Edge Deployment
          example: My new edge deployment.
        resourceTags:
          type: object
          additionalProperties:
            type: string
            description: Resource tags that are added to edge deployment
          description: Resource tags that are added to edge deployment
        ssoConfigurations:
          uniqueItems: true
          type: array
          description: Edge SSO configurations for the edge deployment.
          items:
            $ref: '#/components/schemas/EdgeSsoConfiguration'
        proxyConfiguration:
          $ref: '#/components/schemas/EdgeProxyConfigurationTO'
        enablePrivateEndpoint:
          type: boolean
          description: Use Private Link Service and enable private endpoint
        agentBridge:
          $ref: '#/components/schemas/AgentBridge'
        agentMonitoringConfig:
          $ref: '#/components/schemas/AgentMonitoringEdgeConfig'
        adMonitoring:
          $ref: '#/components/schemas/AdMonitoring'
        deploymentModeDetails:
          $ref: '#/components/schemas/EdgeDeploymentModeDetailsPatchTO'
    ActiveDirectoryAccountPatchTO:
      type: object
      properties:
        primary:
          $ref: '#/components/schemas/ActiveDirectoryCredentialPatchTO'
        auxiliary:
          $ref: '#/components/schemas/ActiveDirectoryCredentialPatchTO'
      description: AD accounts that will renew enrollment agent certificates when
        using Microsoft CA
    ActiveDirectoryCredentialPatchTO:
      required:
      - password
      - username
      type: object
      properties:
        username:
          type: string
          description: Username for the AD account
          example: sso-id-1
        password:
          type: array
          description: Password for the AD account
          example: secret
          items:
            type: string
            description: Password for the AD account
            example: secret
      description: Auxiliary Credentials to be used if primary credentials get expired
    ActiveDirectoryPatchTO:
      type: object
      properties:
        name:
          type: string
          description: Name that helps the customer identify the record
          example: TestAD
        description:
          type: string
          description: Description for the AD
          example: This is a test AD
        dnsDomainName:
          type: string
          description: Directory Domain Name. Can only be changed if the AD is not
            in use.
          example: example.com
        defaultOU:
          type: string
          description: Default OU (organizational unit) for adding VMs to the domain
          example: OU=Computers
        joinAccounts:
          $ref: '#/components/schemas/ActiveDirectoryAccountPatchTO'
        bindAccounts:
          $ref: '#/components/schemas/ActiveDirectoryAccountPatchTO'
        enrollmentServiceAccounts:
          $ref: '#/components/schemas/ActiveDirectoryAccountPatchTO'
        directoryAccessProtocol:
          type: string
          description: LDAP or LDAPS
          example: LDAPS
          enum:
          - LDAP
          - LDAPS
        directoryAccessPort:
          type: integer
          description: Directory Access port number. Default is 389 for LDAP or 636
            for LDAPS
          format: int32
          example: 636
    SsoConfigurationPatchTO:
      type: object
      properties:
        name:
          type: string
          description: The name of the SSO config
          example: my-sso-config
        description:
          type: string
          description: The description of the SSO config
          example: My SSO config.
        caMode:
          type: string
          description: 'CA mode. Accepted values: root or sub'
          example: sub
        caConfigDn:
          type: string
          description: Configuration DN. Verify the Active Directory to get the appropriate
            value.If caConfigDn is changed, then a new Bundle is always created.
          example: CN=Configuration,DC=example,DC=com
        activeDirectoryIds:
          uniqueItems: true
          type: array
          description: List of Active Directory IDs that are part of the same Active
            Directory Forest.
          items:
            type: string
            description: List of Active Directory IDs that are part of the same Active
              Directory Forest.
        ssoConfigurationType:
          type: string
          description: SSO configuration type
          enum:
          - VMWARE_CA
          - MICROSOFT_CA
        configProperties:
          type: object
          additionalProperties:
            type: string
            description: Set of properties required for MICROSOFT_CA
          description: Set of properties required for MICROSOFT_CA
    BatchVmSkuPreferenceRequestTO:
      type: object
      properties:
        vmModels:
          uniqueItems: true
          type: array
          description: List of VM SKUs on which the action needs to be performed
          example:
          - Standard_D2_v3
          - Standard_M128ds_v2
          items:
            type: string
            description: List of VM SKUs on which the action needs to be performed
            example: '["Standard_D2_v3","Standard_M128ds_v2"]'
        preferences:
          $ref: '#/components/schemas/VmSkuPreferenceTO'
        providerLabel:
          type: string
          description: Provider label
    PoolDetails:
      type: object
      properties:
        poolTemplateId:
          type: string
          description: pool template id
          example: 0123456789
        properties:
          type: object
          additionalProperties:
            type: object
            description: map of properties associated to the pool template id
          description: map of properties associated to the pool template id
      description: Details of pools which use this VM SKU
      readOnly: true
    VmSkuPreferenceTO:
      type: object
      properties:
        orgId:
          type: string
          description: Org ID that owns this record
          readOnly: true
          example: 0123456789
        vmModel:
          type: string
          description: VM SKU name
          readOnly: true
          example: Standard_D2_v3
        location:
          type: string
          description: location
          readOnly: true
          example: US
        projectId:
          type: string
          description: ID of the CSP project that owns this data
          readOnly: true
        tags:
          uniqueItems: true
          type: array
          description: Tags applied on the VM SKU
          example: '{"tag1", "tag2"}'
          items:
            type: string
            description: Tags applied on the VM SKU
            example: '{"tag1", "tag2"}'
        visible:
          type: boolean
          description: Visibility of the VM SKU
          example: false
        poolDetails:
          type: array
          description: Details of pools which use this VM SKU
          readOnly: true
          items:
            $ref: '#/components/schemas/PoolDetails'
        providerLabel:
          type: string
          description: Provider label
          readOnly: true
          example: AZURE
        createdAt:
          type: string
          description: Record creation timestamp
          format: date-time
          readOnly: true
        updatedAt:
          type: string
          description: Record update timestamp
          format: date-time
          readOnly: true
        version:
          type: integer
          description: Record version (internal)
          format: int64
          readOnly: true
      description: VM SKU preferences where action was successful
      readOnly: true
      example: VmSkuPreference
    BatchVmSkuPreferenceResponseTO:
      type: object
      properties:
        vmSkuPreferences:
          type: array
          description: VM SKU preferences where action was successful
          readOnly: true
          example: VmSkuPreference
          items:
            $ref: '#/components/schemas/VmSkuPreferenceTO'
        errors:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ErrorDetail'
          description: VM SKU models where action was unsuccessful
          readOnly: true
          example: vmModel, ErrorDetail
    TemplateErrorSummaryReportTO:
      type: object
      properties:
        orgId:
          type: string
        numTotalTemplates:
          type: integer
          format: int64
        errorSummaries:
          type: array
          items:
            $ref: '#/components/schemas/TemplateErrorSummaryTO'
    TemplateErrorSummaryTO:
      type: object
      properties:
        orgId:
          type: string
        templateName:
          type: string
        templateId:
          type: string
        errorVMs:
          type: integer
          format: int64
        numMessages:
          type: integer
          format: int64
    PageProviderInstanceTOV2:
      type: object
      properties:
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: '#/components/schemas/ProviderInstanceTOV2'
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/SortObject'
        pageable:
          $ref: '#/components/schemas/PageableObject'
        first:
          type: boolean
        last:
          type: boolean
        numberOfElements:
          type: integer
          format: int32
        empty:
          type: boolean
    PageUAGDeploymentTOV2:
      type: object
      properties:
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: '#/components/schemas/UAGDeploymentTOV2'
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/SortObject'
        pageable:
          $ref: '#/components/schemas/PageableObject'
        first:
          type: boolean
        last:
          type: boolean
        numberOfElements:
          type: integer
          format: int32
        empty:
          type: boolean
    PageTemplateTOV2:
      type: object
      properties:
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: '#/components/schemas/TemplateTOV2'
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/SortObject'
        pageable:
          $ref: '#/components/schemas/PageableObject'
        first:
          type: boolean
        last:
          type: boolean
        numberOfElements:
          type: integer
          format: int32
        empty:
          type: boolean
    InventoryVmWithSessions:
      type: object
      properties:
        id:
          type: string
          description: VM ID
          readOnly: true
        cloudId:
          type: string
          description: VM ID from cloud provider
          readOnly: true
        lifecycleStatus:
          type: string
          description: VM lifecycle status
          readOnly: true
        image:
          type: string
          description: Image used to create the VM
          readOnly: true
        error:
          type: string
          description: Reason for error status
          readOnly: true
        privateIp:
          type: string
          readOnly: true
        powerState:
          type: string
          description: Power state
          readOnly: true
        snapshotId:
          type: string
          description: VM snapshot ID
          readOnly: true
        agentStatus:
          type: string
          description: Agent status
        statusCode:
          type: integer
          description: Agent status code
          format: int32
        version:
          type: string
          description: Agent version
          deprecated: true
        viewAgentVersion:
          type: string
          description: View Agent version
        haiAgentVersion:
          type: string
          description: HAI Agent version
        timestamp:
          type: integer
          description: Agent message timestamp. The inventory will only store the
            the latest record ever seen, and discard stale ones if received later
          format: int64
        publicKey:
          type: string
        sessionPlacementStatus:
          type: string
          description: Indicates the availability of the vm for session placement
        maxSessions:
          type: integer
          description: Indicates maximum number of sessions supported by the VM
          format: int32
        vmFreeSessions:
          type: integer
          description: Indicates the number of free sessions on the VM
          format: int32
        updatedLoadIndexAt:
          type: string
          format: date-time
          readOnly: true
        loadIndex:
          type: number
          format: double
          readOnly: true
        createdAt:
          type: string
          format: date-time
          readOnly: true
        updatedAt:
          type: string
          format: date-time
          readOnly: true
        vmSize:
          type: string
          description: VM size
          readOnly: true
          example: Standard_D2_v3
        osDiskSize:
          type: integer
          description: OS disk size in GB
          format: int32
          readOnly: true
        osDiskType:
          type: string
          description: OS disk type
          readOnly: true
          example: Standard_LRS
        az:
          type: string
          description: Availability Zone Id
          readOnly: true
        subnet:
          type: string
          description: VM subnet
          readOnly: true
        sessions:
          type: array
          items:
            $ref: '#/components/schemas/VmUser'
    PageInventoryVmWithSessions:
      type: object
      properties:
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: '#/components/schemas/InventoryVmWithSessions'
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/SortObject'
        pageable:
          $ref: '#/components/schemas/PageableObject'
        first:
          type: boolean
        last:
          type: boolean
        numberOfElements:
          type: integer
          format: int32
        empty:
          type: boolean
    PageSsoConfigurationTOV2:
      type: object
      properties:
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: '#/components/schemas/SsoConfigurationTOV2'
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/SortObject'
        pageable:
          $ref: '#/components/schemas/PageableObject'
        first:
          type: boolean
        last:
          type: boolean
        numberOfElements:
          type: integer
          format: int32
        empty:
          type: boolean
    SsoConfigurationDiscoveryTO:
      type: object
      properties:
        trueSsoTemplatesHostsMap:
          type: object
          additionalProperties:
            type: array
            description: list of true sso templates and the associated ca hostnames
            readOnly: true
            items:
              type: string
              description: list of true sso templates and the associated ca hostnames
              readOnly: true
          description: list of true sso templates and the associated ca hostnames
          readOnly: true
        enrollmentAgentTemplatesHostsMap:
          type: object
          additionalProperties:
            type: array
            description: list of enrollment agent templates and the associated ca
              hostnames
            readOnly: true
            items:
              type: string
              description: list of enrollment agent templates and the associated ca
                hostnames
              readOnly: true
          description: list of enrollment agent templates and the associated ca hostnames
          readOnly: true
    PageProviderInstanceResourcesTOV2:
      type: object
      properties:
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: '#/components/schemas/ProviderInstanceResourcesTOV2'
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/SortObject'
        pageable:
          $ref: '#/components/schemas/PageableObject'
        first:
          type: boolean
        last:
          type: boolean
        numberOfElements:
          type: integer
          format: int32
        empty:
          type: boolean
    ProviderInstanceResourcesTOV2:
      type: object
      properties:
        id:
          type: string
          description: Unique record ID
          readOnly: true
          example: 0123456789
        orgId:
          type: string
          description: CSP org id
          readOnly: true
          example: 0123456789
        projectId:
          type: string
        name:
          type: string
          description: Provider instance name
          readOnly: true
          example: My Instance Name
        infraTwinSyncStatus:
          type: string
          description: Status of provider instance
          readOnly: true
          example: READY
          enum:
          - NONE
          - SYNCED
          - SYNC_NEEDED
        providerLabel:
          type: string
          description: Provider label (provider of which this is an instance)
          readOnly: true
          example: AZURE
        providerDetails:
          $ref: '#/components/schemas/ProviderSpecDetailsTO'
        edgeDeploymentId:
          type: string
          description: EdgeGateway Deployment which we can use to manage and monitor
            infrastructure
          readOnly: true
          example: 0123456789
        infraTwinId:
          type: string
          description: Id of the Infrastructure Twin which can be use to talk to the
            corresponding infra module.
          readOnly: true
          example: 0123456789
        resourceTags:
          type: object
          additionalProperties:
            type: string
            description: Resource tags that are added to Provider Instance
            readOnly: true
          description: Resource tags that are added to Provider Instance
          readOnly: true
        credentialId:
          type: string
          description: ID of the credential storing the sensitive data of provider
          readOnly: true
          example: 0123456789
        primaryProvider:
          type: boolean
          description: True if an edge deployment is deployed on this subscription.
          readOnly: true
          example: false
        edgeDeployment:
          $ref: '#/components/schemas/EdgeDeploymentTOV2'
        uagDeployments:
          type: array
          description: Details of the UAG deployments
          readOnly: true
          items:
            $ref: '#/components/schemas/UAGDeploymentTOV2'
        templates:
          type: array
          description: Details of the templates
          readOnly: true
          items:
            $ref: '#/components/schemas/TemplateTOV2'
        infrastructureLinks:
          type: object
          additionalProperties:
            type: string
            description: Links to all infrastructure available from this provider
            readOnly: true
          description: Links to all infrastructure available from this provider
          readOnly: true
        createdAt:
          type: string
          description: Record creation timestamp
          format: date-time
          readOnly: true
        updatedAt:
          type: string
          description: Record update timestamp
          format: date-time
          readOnly: true
        version:
          type: integer
          description: Record version (internal)
          format: int64
          readOnly: true
    ProviderInstanceVmUsagesTO:
      type: object
      properties:
        providerInstanceId:
          type: string
          description: Provider instance unique id
          readOnly: true
          example: 0123456789
        providerInstanceName:
          type: string
          description: Provider instance name
          readOnly: true
          example: MyProviderInstance
        providerLabel:
          type: string
          description: Provider type the provider instance belong to
          readOnly: true
          example: AZURE
        orgId:
          type: string
          description: CSP org id
          readOnly: true
          example: 0123456789
        projectId:
          type: string
          description: ID of the CSP project that owns this data
          readOnly: true
        vmSkuOverallSummary:
          type: array
          description: Overall summary for capacity utilisation
          readOnly: true
          items:
            $ref: '#/components/schemas/VmSkuOverallSummary'
    VmCoresUsage:
      type: object
      properties:
        currentValue:
          type: integer
          description: Current compute usage
          format: int32
          example: 1000
        limit:
          type: integer
          description: Max compute limit
          format: int64
          example: 2000
      description: 'VM Compute Usage for a VM family '
    VmSkuOverallSummary:
      type: object
      properties:
        familyName:
          type: string
          description: VM family name
          example: standardA0_A7Family
        vmCoresUsage:
          $ref: '#/components/schemas/VmCoresUsage'
        vmSkus:
          type: array
          description: VM SKUs for a VM family
          items:
            $ref: '#/components/schemas/InfrastructureResource'
      description: Overall summary for capacity utilisation
      readOnly: true
    DatastoreRequirements:
      type: object
      properties:
        minUsage:
          type: number
          format: double
        midUsage:
          type: number
          format: double
        maxUsage:
          type: number
          format: double
      description: Usage of Datastore Requirements based on vm count and snapshot/template
        id
    VCenterCertificateResponseTO:
      type: object
      properties:
        subject:
          type: string
        issuer:
          type: string
        sha1Thumbprint:
          type: string
        sha256Thumbprint:
          type: string
        validFrom:
          type: string
          format: date-time
        validTill:
          type: string
          format: date-time
    PageInfrastructureResource:
      type: object
      properties:
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: '#/components/schemas/InfrastructureResource'
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/SortObject'
        pageable:
          $ref: '#/components/schemas/PageableObject'
        first:
          type: boolean
        last:
          type: boolean
        numberOfElements:
          type: integer
          format: int32
        empty:
          type: boolean
    AzureComputeVmSkuResponseTO:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/InfrastructureResource'
        pageable:
          $ref: '#/components/schemas/PageableObject'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetail'
        last:
          type: boolean
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/SortObject'
        first:
          type: boolean
        numberOfElements:
          type: integer
          format: int32
        empty:
          type: boolean
    PageEdgeDeploymentTOV2:
      type: object
      properties:
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: '#/components/schemas/EdgeDeploymentTOV2'
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/SortObject'
        pageable:
          $ref: '#/components/schemas/PageableObject'
        first:
          type: boolean
        last:
          type: boolean
        numberOfElements:
          type: integer
          format: int32
        empty:
          type: boolean
    PageEdgeDeploymentLogTO:
      type: object
      properties:
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: '#/components/schemas/EdgeDeploymentLogTO'
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/SortObject'
        pageable:
          $ref: '#/components/schemas/PageableObject'
        first:
          type: boolean
        last:
          type: boolean
        numberOfElements:
          type: integer
          format: int32
        empty:
          type: boolean
    PairingInfoResponseTO:
      type: object
      properties:
        pairingCode:
          type: string
          description: Pairing code used for deploying edge gateway
          example: pairingCode
    CmpConfigurationStatus:
      type: object
      properties:
        status:
          type: string
          enum:
          - CONFIGURED
          - NOT_CONFIGURED
          - ERROR
        detail:
          type: string
    EdgeCmpReadinessModelTO:
      type: object
      properties:
        overallStatus:
          type: string
          enum:
          - CONFIGURED
          - NOT_CONFIGURED
          - ERROR
        identityStatus:
          $ref: '#/components/schemas/CmpConfigurationStatus'
        domainStatus:
          $ref: '#/components/schemas/CmpConfigurationStatus'
        uagDeploymentStatus:
          $ref: '#/components/schemas/CmpConfigurationStatus'
        vcenterStatus:
          $ref: '#/components/schemas/CmpConfigurationStatus'
    EdgeDeploymentUpgradableVersionsTO:
      type: object
      properties:
        id:
          type: string
          description: The id of the Edge Deployment
        orgId:
          type: string
          description: The id of the CSP org
        name:
          type: string
          description: The name of the Edge Deployment
        providerLabel:
          type: string
          description: The provider label of the Edge Deployment
        deploymentType:
          type: string
          description: Edge deployment type, VM or CLUSTER
          enum:
          - VM
          - CLUSTER
          - UNMANAGED
        currentVersion:
          type: string
          description: Current Version of the deployment
        upgradableVersions:
          type: array
          description: List of Upgradable Versions
          items:
            type: string
            description: List of Upgradable Versions
        upgradableDetails:
          type: array
          description: List of Upgradable Details
          items:
            $ref: '#/components/schemas/UpgradableDetail'
        errorDetails:
          type: array
          description: Error details in case of fetching upgradable Versions for an
            edge
          items:
            $ref: '#/components/schemas/ErrorDetail'
    PageEdgeDeploymentUpgradableVersionsTO:
      type: object
      properties:
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: '#/components/schemas/EdgeDeploymentUpgradableVersionsTO'
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/SortObject'
        pageable:
          $ref: '#/components/schemas/PageableObject'
        first:
          type: boolean
        last:
          type: boolean
        numberOfElements:
          type: integer
          format: int32
        empty:
          type: boolean
    UpgradableDetail:
      type: object
      properties:
        upgradableVersion:
          type: string
        downloadLink:
          type: string
      description: List of Upgradable Details
    PageActiveDirectoryTO:
      type: object
      properties:
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: '#/components/schemas/ActiveDirectoryTO'
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/SortObject'
        pageable:
          $ref: '#/components/schemas/PageableObject'
        first:
          type: boolean
        last:
          type: boolean
        numberOfElements:
          type: integer
          format: int32
        empty:
          type: boolean
    PageSsoConfigurationTO:
      type: object
      properties:
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: '#/components/schemas/SsoConfigurationTO'
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/SortObject'
        pageable:
          $ref: '#/components/schemas/PageableObject'
        first:
          type: boolean
        last:
          type: boolean
        numberOfElements:
          type: integer
          format: int32
        empty:
          type: boolean
    SsoConfigurationTO:
      type: object
      properties:
        id:
          type: string
          description: SSO configuration ID
          readOnly: true
        orgId:
          type: string
          description: Organization ID
          readOnly: true
          example: org-1
        projectId:
          type: string
          description: ID of the CSP project that owns this data
          readOnly: true
        location:
          type: string
          description: location
          readOnly: true
          example: US
        name:
          type: string
          description: The name of the SSO configuration
          example: my-sso-configuration
        description:
          type: string
          description: The description of the SSO configuration
          example: My SSO configuration.
        caMode:
          type: string
          description: 'CA mode. Accepted values: root or sub'
          example: sub
        caConfigDn:
          type: string
          description: Configuration DN. Verify the Active Directory to get the appropriate
            value
          example: CN=Configuration,DC=example,DC=com
        activeDirectoryIds:
          uniqueItems: true
          type: array
          description: List of Active Directory IDs that are part of the same Active
            Directory Forest.
          items:
            type: string
            description: List of Active Directory IDs that are part of the same Active
              Directory Forest.
        createdAt:
          type: string
          description: Created date
          format: date-time
        updatedAt:
          type: string
          description: Updated date
          format: date-time
        activeDirectories:
          type: array
          description: List of Active Directories that are part of the same Active
            Directory Forest.
          items:
            $ref: '#/components/schemas/ActiveDirectoryTO'
        edgeDeployments:
          type: array
          description: List of edge deployments associated to this SSO configuration.
          items:
            $ref: '#/components/schemas/EdgeDeploymentTOV2'
        latestInstalledCaBundleExpiry:
          type: integer
          description: Expiration for the latest installed CA Bundle
          format: int64
        ssoConfigurationType:
          type: string
          description: SSO configuration type
          enum:
          - VMWARE_CA
          - MICROSOFT_CA
        configProperties:
          type: object
          additionalProperties:
            type: string
            description: Set of properties associated with MICROSOFT_CA
          description: Set of properties associated with MICROSOFT_CA
        version:
          type: integer
          description: Record version (internal)
          format: int64
          readOnly: true
      description: Searchable fields are "id", "orgId", "projectId", "caMode", "name",
        "activeDirectoryIds", "ssoConfigurationType"
    DetailsField:
      type: object
      properties:
        name:
          type: string
        type:
          type: string
          enum:
          - STRING
          - BOOLEAN
        required:
          type: boolean
        testOnlyAttribute:
          type: boolean
        editable:
          type: boolean
    InfrastructureType:
      type: object
      properties:
        kind:
          type: string
        apiPath:
          type: string
        fields:
          type: array
          items:
            $ref: '#/components/schemas/DetailsField'
      description: The types of infrastructure that can be queried from this provider.
        For example, AZURE supports infrastructure types like 'resourceGroups', 'networks',
        etc.
    ProviderProperties:
      type: object
      properties:
        disabled:
          type: boolean
          writeOnly: true
        requiredEdgeModules:
          type: array
          writeOnly: true
          items:
            type: string
            enum:
            - INFRA_AZURE_MODULE
            - AV_AZURE_MODULE
            - EGPU_AZURE_MODULE
            - UAG_MODULE
            - INFRA_VSPHERE_MODULE
            - INFRA_VIEW_MODULE
            - VIEW_CS_MODULE
            - AD_MODULE
            - AGENT_MODULE
        infraModuleVersionId:
          type: string
          writeOnly: true
        scaleDataCount:
          type: integer
          format: int32
          writeOnly: true
        isUAGDay2OpsAllowed:
          type: boolean
          writeOnly: true
        isUagCertBlobEnabledInTwin:
          type: boolean
          writeOnly: true
        isUagManagementCertRotationEnabled:
          type: boolean
          writeOnly: true
        isAVAllowed:
          type: boolean
          writeOnly: true
        communityGalleryName:
          type: string
          writeOnly: true
        isUAGStatsMonitoringEnabled:
          type: boolean
          writeOnly: true
        edgeDownloads:
          type: array
          writeOnly: true
          items:
            type: object
            additionalProperties:
              type: string
        supportedEnvironments:
          uniqueItems: true
          type: array
          writeOnly: true
          items:
            type: string
        uagCatalogSource:
          type: string
          writeOnly: true
      description: Runtime configurable properties of the provider.
    ProviderReadTO:
      type: object
      properties:
        label:
          type: string
          description: Unique label for the provider. These are case-insensitive.
          example: AZURE
        newInstanceMethods:
          type: array
          description: The methods that can be used to create new instances of this
            provider. Each method will have its own name and set of data fields. For
            example, the AZURE provider supports new instances with the 'ByAppRegistration'
            method.
          items:
            $ref: '#/components/schemas/ProviderSpecMethod'
        infrastructureTypes:
          type: array
          description: The types of infrastructure that can be queried from this provider.
            For example, AZURE supports infrastructure types like 'resourceGroups',
            'networks', etc.
          items:
            $ref: '#/components/schemas/InfrastructureType'
        properties:
          $ref: '#/components/schemas/ProviderProperties'
    ProviderSpecMethod:
      type: object
      properties:
        name:
          type: string
        fields:
          type: array
          items:
            $ref: '#/components/schemas/DetailsField'
        scaleFields:
          type: array
          items:
            $ref: '#/components/schemas/DetailsField'
      description: The methods that can be used to create new instances of this provider.
        Each method will have its own name and set of data fields. For example, the
        AZURE provider supports new instances with the 'ByAppRegistration' method.
    VmTagsTO:
      type: object
      properties:
        orgId:
          type: string
          description: Org ID that owns this record
          readOnly: true
          example: 0123456789
        providerLabel:
          type: string
          description: Provider label
          readOnly: true
          example: AZURE
        tags:
          type: array
          description: VM Tags
          readOnly: true
          example:
          - tag1
          - tag2
          items:
            type: string
            description: VM Tags
            readOnly: true
            example: '["tag1","tag2"]'
    AwsRegionTO:
      type: object
      properties:
        isGlobalRegion:
          type: boolean
        id:
          type: string
    PageDomainCertificateTO:
      type: object
      properties:
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: '#/components/schemas/DomainCertificateTO'
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/SortObject'
        pageable:
          $ref: '#/components/schemas/PageableObject'
        first:
          type: boolean
        last:
          type: boolean
        numberOfElements:
          type: integer
          format: int32
        empty:
          type: boolean
    PageDEMSettingTO:
      type: object
      properties:
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: '#/components/schemas/DEMSettingTO'
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/SortObject'
        pageable:
          $ref: '#/components/schemas/PageableObject'
        first:
          type: boolean
        last:
          type: boolean
        numberOfElements:
          type: integer
          format: int32
        empty:
          type: boolean
    DEEMConfigTO:
      type: object
      properties:
        orgId:
          type: string
        version:
          type: string
          format: date-time
        category:
          type: string
        orgLevelConfig:
          $ref: '#/components/schemas/DEEMOrgLevelConfigTO'
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    DEEMEdgeLevelConfigTO:
      type: object
      properties:
        edgeId:
          type: string
        configDetails:
          $ref: '#/components/schemas/JsonNode'
        templateLevelConfigs:
          type: array
          items:
            $ref: '#/components/schemas/DEEMTemplateLevelConfigTO'
    DEEMOrgLevelConfigTO:
      type: object
      properties:
        configDetails:
          $ref: '#/components/schemas/JsonNode'
        edgeLevelConfigs:
          type: array
          items:
            $ref: '#/components/schemas/DEEMEdgeLevelConfigTO'
    DEEMTemplateLevelConfigTO:
      type: object
      properties:
        templateId:
          type: string
        configDetails:
          $ref: '#/components/schemas/JsonNode'
    JsonNode:
      type: object
    DomainCertificateDeleteTO:
      required:
      - certificateIds
      - orgId
      type: object
      properties:
        orgId:
          type: string
          description: The org ID associated with the domain certificates. This is
            required.
        certificateIds:
          type: array
          description: A list of domain certificate ids to delete. This is required.
          items:
            type: string
            description: A list of domain certificate ids to delete. This is required.
    LogoutRequestV2:
      required:
      - idToken
      - idpTenantDomain
      - postLogoutUri
      type: object
      properties:
        idpTenantDomain:
          type: string
          description: IDP tenant domain/Tenant Alias
          example: abccompany
        postLogoutUri:
          type: string
          description: url to redirect to after logout
          example: redirect-uri
        idToken:
          type: string
          description: idToken
          example: oiuoidaspdp-sad!sdr
        refreshToken:
          type: string
          description: refreshToken
          example: oiuoidaspdp-sad!sdr
    LogoutUrl:
      type: object
      properties:
        logoutUrl:
          type: string
          description: IAM logout URL
          example: https://login.microsoft.com/logout
    AuthRequest:
      required:
      - code
      - force
      - idpTenantDomain
      - redirectUri
      type: object
      properties:
        code:
          type: string
          description: Code value
          example: oiuoidaspdp-sad!sdr
        redirectUri:
          type: string
          description: url to redirect to
          example: redirect-uri
        force:
          type: boolean
          description: Force update of multiple Azure tenant to CSP org mapping
          example: false
        idpTenantDomain:
          type: string
          description: IDP tenant Domain/Tenant alias
          example: abccompany
        codeVerifier:
          type: string
          description: Code verifier for code challenge used in auth url
          example: code-verifier
        publicClient:
          type: boolean
          description: Attribute to indicate if its a public client
          example: false
    AuthResponse:
      type: object
      properties:
        access_token:
          type: string
          description: Access token
          example: access-token
        refresh_token:
          type: string
          description: Refresh token
          example: refresh_token
        id_token:
          type: string
          description: Id token
          example: id_token
        user_id:
          type: string
          description: User Id
          example: user_id
    AuthorizeRequestDoc:
      type: object
      properties:
        grant_type:
          type: string
          description: Grant type
          example: client_credentials
      description: Get access token by client credentials
    AccessTokenDto:
      type: object
      properties:
        access_token:
          type: string
          description: Access token
          example: access-token
        token_type:
          type: string
          description: Token type
          example: bearer
        expires_in:
          type: integer
          description: Access token expiry
          format: int64
          example: 17999
    LogoutRequest:
      required:
      - refreshToken
      type: object
      properties:
        idpTenantDomain:
          type: string
          description: IDP tenant domain/Tenant Alias
          example: abccompany
        postLogoutUri:
          type: string
          description: url to redirect to after logout
          example: redirect-uri
        refreshToken:
          type: string
          description: refreshToken
          example: oiuoidaspdp-sad!sdr
    AuthRequestWithViewJwtToken:
      required:
      - jwtSource
      - jwtToken
      type: object
      properties:
        jwtToken:
          type: string
          description: JWT token related to view use cases
          example: jwt_token
        jwtSource:
          type: string
          description: Source where this JWT token was generated
          example: CONNECTION_SERVER
          enum:
          - CONNECTION_SERVER
    RevokeOtaRequest:
      required:
      - ota
      type: object
      properties:
        ota:
          type: string
          description: oneTimeAccessToken
          example: 1233454w45433453432
    ExternalHub:
      required:
      - external
      - internal
      type: object
      properties:
        internal:
          type: boolean
          description: internal user setting enabled
          example: false
          enum:
          - false
        external:
          type: boolean
          description: external user setting enabled
          example: false
          enum:
          - false
      description: hub portal object
    ExternalPortal:
      type: object
      properties:
        hub:
          $ref: '#/components/schemas/ExternalHub'
      description: External Portal System Mapping
      example: hub
    OrgIdpMappingRequest:
      required:
      - code
      - force
      - idpTenantDomain
      - redirectUri
      type: object
      properties:
        code:
          type: string
          description: Code value
          example: FkNzQyOGRmNTYiLCJjaWQ
        idpType:
          type: string
          description: IDP Type
          example: AZURE/WS1A
          enum:
          - azure
          - ws1a
          - ws1a_onprem
          - AZURE,WS1A
        idpTenantDomain:
          type: string
          description: IDP tenant domain/Tenant Alias
          example: abccompany
        idpTenantId:
          type: string
          description: WorkspaceOne Access IDP TenantId
          example: tenant01.workspaceoneaccess.com
        domains:
          uniqueItems: true
          type: array
          description: List of domains
          items:
            type: string
            description: List of domains
        force:
          type: boolean
          description: Force update of multiple IDP tenant to CSP org mapping
          example: false
        redirectUri:
          type: string
          description: Url to redirect to
          example: https://horizonv2-sg.devframe.cp.horizon.vmware.com/auth/v1/callback
        externalPortal:
          $ref: '#/components/schemas/ExternalPortal'
    OrgIdpMappingResponse:
      type: object
      properties:
        idpTenantId:
          type: string
          description: WorkspaceOne Access IDP TenantId
        idpTenantDomain:
          type: string
          description: IDP tenant domain/Tenant Alias
        idpType:
          type: string
          description: IDP Type
        displayName:
          type: string
          description: display name
        domains:
          uniqueItems: true
          type: array
          description: List of domains
          items:
            type: string
            description: List of domains
        orgIds:
          uniqueItems: true
          type: array
          description: List of Org Ids
          items:
            type: string
            description: List of Org Ids
        externalPortal:
          $ref: '#/components/schemas/ExternalPortal'
        createdAt:
          type: string
          description: Time when the idp tenant mapping was done
          format: date-time
        updatedAt:
          type: string
          description: Time when the idp tenant mapping was updated
          format: date-time
        applicationName:
          type: string
          description: For Entra ID only, the application with consent to access Entra
            ID
        isApplicationCurrent:
          type: boolean
          description: Denotes if the applicationName is up to date with the current
            application
    InternalNetworksRequest:
      required:
      - internalNetworks
      type: object
      properties:
        internalNetworks:
          uniqueItems: true
          type: array
          description: The list of internal-networks for determining internal or external
          example:
          - 192.23.4.0/10
          - 192.23.4.1/10
          - 192.23.4.3
          - 192.23.4.5-192.23.4.6
          items:
            type: string
            description: The list of internal-networks for determining internal or
              external
            example: '["192.23.4.0/10","192.23.4.1/10","192.23.4.3","192.23.4.5-192.23.4.6"]'
    InternalNetwork:
      type: object
      properties:
        internalNetwork:
          type: string
        internalNetworkInCIDR:
          type: array
          items:
            type: string
    InternalNetworksResponse:
      required:
      - internalNetworks
      - orgId
      type: object
      properties:
        id:
          type: string
        orgId:
          type: string
        internalNetworks:
          type: array
          items:
            $ref: '#/components/schemas/InternalNetwork'
        location:
          type: string
    AuthUrl:
      type: object
      properties:
        authUrl:
          type: string
          description: IAM authentication URL
          example: https://login.microsoft.com/authenticate
        checkSessionIframe:
          type: string
          description: IAM URL used to check session
          example: https://login.microsoftonline.com/common/oauth2/checksession
    OrgIdpPatchRequest:
      type: object
      properties:
        idpTenantDomain:
          type: string
          description: IDP tenant domain/Tenant Alias
          example: abccompany
        externalPortalsToModify:
          $ref: '#/components/schemas/ExternalPortal'
        externalPortalsToRemove:
          type: array
          description: External Portal to be removed
          example: hub
          items:
            type: string
            description: External Portal to be removed
            example: hub
            enum:
            - hub
    UserInfo:
      type: object
      properties:
        userPrincipalName:
          type: string
          description: User principal name from identity provider
          example: john.smith@horizonv2.onmicrosof.com
        onPremisesUserPrincipalName:
          type: string
          description: User principal name from active directory
          example: john.smith@horizonv2.local
        userName:
          type: string
          description: User name
          example: john.smith
        userSid:
          type: string
          description: User SID
          example: S-1-5-21-2502306595
        givenName:
          type: string
          description: User given name
          example: John
        familyName:
          type: string
          description: User family name
          example: Smith
        displayName:
          type: string
          description: User display name
          example: John Smith
        distinguishedName:
          type: string
          description: Use distinguished name in active directory
          example: CN=JSMITH,DC=vmware,DC=com
        domain:
          type: string
          description: Domain name
          example: horizonv2.local
        azureAdDomain:
          type: string
          description: Azure active directory domain
        userDomain:
          type: string
          description: User domain
        orgIds:
          uniqueItems: true
          type: array
          description: Organization IDs
          example: 1223234
          items:
            type: string
            description: Organization IDs
            example: '1223234'
        tid:
          type: string
          description: User tenant ID
          example: '1223234'
        idpType:
          type: string
          description: Identity provider type
          example: WS1A, AZURE
        sourceSystem:
          type: string
          description: Source System
          example: WS1HUB_HORIZON_CLIENT
        id:
          type: string
          description: User id
          example: '1223234'
        ipaddr:
          type: string
          description: Use client IP address
          example: 0.0.0.0
        userGroups:
          type: array
          description: List of groups the user is member of
          items:
            type: string
            description: List of groups the user is member of
        active:
          type: boolean
          description: Active
          example: true
        department:
          type: string
          description: Department
          example: Finance
        avatar:
          type: string
          description: Profile Photo of the User
          example: url
        userAccessType:
          type: string
          description: User Access Type
          example: INTERNAL
        clientSessionId:
          type: string
          description: Client Session Id
          example: UUID string
      description: List of users
    UsersResponse:
      type: object
      properties:
        users:
          type: array
          description: List of users
          items:
            $ref: '#/components/schemas/UserInfo'
        nextLink:
          type: string
          description: Link to the next page of users when pagination is used
    Group:
      type: object
      properties:
        id:
          type: string
          description: group id
          example: id-12345
        displayName:
          type: string
          description: group display name
          example: aduser1
        onPremisesDomainName:
          type: string
          description: domain name
          example: horizonv2.local
        onPremisesSecurityIdentifier:
          type: string
          description: on permission security identifier
          example: S-1-5-21-2502306595
        securityIdentifier:
          type: string
          description: security identifier sid
          example: S-1-12-1-2011878264
        distinguishedName:
          type: string
          description: Group distinguished name in active directory
          example: CN=ADGROUP1,CN=USERS,DC=HORIZONV2,DC=LOCAL
      description: List of groups info
    UsersAndGroups:
      type: object
      properties:
        userInfo:
          type: array
          description: List of users info
          items:
            $ref: '#/components/schemas/UserInfo'
        groups:
          type: array
          description: List of groups info
          items:
            $ref: '#/components/schemas/Group'
    GroupsResponse:
      type: object
      properties:
        groups:
          type: array
          description: List of user groups
          items:
            $ref: '#/components/schemas/Group'
        nextLink:
          type: string
          description: Link to the next page of user groups when pagination is used
    SearchablePredicateOrgIdpMapping:
      type: object
      properties:
        spec:
          $ref: '#/components/schemas/Predicate'
    GroupsOrgsResponse:
      type: object
      properties:
        groups:
          type: array
          description: List of user groups
          items:
            $ref: '#/components/schemas/Group'
        orgIdpTenantDomainMap:
          type: object
          additionalProperties:
            type: string
            description: Map of orgId and IdpTenantDomain
          description: Map of orgId and IdpTenantDomain
        nextLink:
          type: string
          description: Link to the next page of user groups when pagination is used
    OrgDomainsDTO:
      type: object
      properties:
        orgIdpTenantDomainMap:
          type: object
          additionalProperties:
            type: string
            description: Map of orgId and IdpTenantDomain
          description: Map of orgId and IdpTenantDomain
        idpType:
          type: string
          description: Identity provider type
          example: WS1A
    OrgIdpMapping:
      required:
      - domains
      - idpType
      - orgIds
      type: object
      properties:
        id:
          type: string
        idpTenantId:
          type: string
          description: idp tenant id
          example: tenant01.workspaceoneaccess.com
        idpTenantDomain:
          type: string
          description: IDP tenant domain/Tenant Alias
          example: abccompany
        displayName:
          type: string
          description: display name
        idpType:
          type: string
          description: idp type
          example: AZURE
          enum:
          - AZURE, WS1A, WS1A_ONPREM
        domains:
          uniqueItems: true
          type: array
          description: List of domains
          example: example.local/example.com
          items:
            type: string
            description: List of domains
            example: example.local/example.com
        orgIds:
          uniqueItems: true
          type: array
          description: List of Org Ids
          example: 2434o3po4p3u
          items:
            type: string
            description: List of Org Ids
            example: 2434o3po4p3u
        externalPortal:
          $ref: '#/components/schemas/ExternalPortal'
        createdAt:
          type: string
          description: Time when the idp mapping was done
          format: date-time
        updatedAt:
          type: string
          description: Time when the idp mapping was updated
          format: date-time
        applicationName:
          type: string
          description: For Entra ID only, the application with consent to access Entra
            ID
          example: default
        singularOrgId:
          type: string
    PageOrgIdpMapping:
      type: object
      properties:
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: '#/components/schemas/OrgIdpMapping'
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/SortObject'
        first:
          type: boolean
        last:
          type: boolean
        numberOfElements:
          type: integer
          format: int32
        pageable:
          $ref: '#/components/schemas/PageableObject'
        empty:
          type: boolean
    CustomDomainsResponse:
      type: object
      properties:
        domains:
          type: array
          description: List of user groups
          items:
            type: string
            description: List of user groups
    AzureAdSetup:
      required:
      - orgId
      - status
      type: object
      properties:
        orgId:
          type: string
          description: Org ID
          example: orgId
        status:
          type: string
          description: Status of setup
          example: STARTED
          enum:
          - STARTED
          - GRANTED
        idpTenantId:
          type: string
          description: IDP Tenant Id
          example: idpTenantId
        granterUserId:
          type: string
          description: User Id of Azure AD user that granted consent
          example: granterUserId
        applicationName:
          type: string
          description: The Entra ID application this setup was started with
          example: default
        isApplicationCurrent:
          type: boolean
          description: Denotes if the applicationName is up to date with the current
            application
          example: true
    ApplicationPackageEdgeDto:
      required:
      - edgeDeploymentId
      - imageReference
      - packageName
      - packagerId
      - packagerName
      - providerInstanceId
      - vmSkuId
      type: object
      properties:
        edgeDeploymentId:
          type: string
        providerInstanceId:
          type: string
        imageId:
          type: string
        imageReference:
          $ref: '#/components/schemas/ImageReferenceDto'
        vmSkuId:
          type: string
        activeDirectoryId:
          type: string
        packagerId:
          type: string
        packagerName:
          type: string
        packageName:
          type: string
        packageDescription:
          type: string
        deliveryMode:
          type: string
          enum:
          - CLASSIC
          - ONDEMAND
        isAzureActiveDirectory:
          type: boolean
    ApplicationPackageUpdateDto:
      required:
      - appVersionId
      - applicationId
      - packageInfrastructure
      type: object
      properties:
        createdAt:
          type: string
          description: This represents the timestamp at which the object was created
          format: date-time
          example: '2022-07-11T07:44:49.619Z'
        updatedAt:
          type: string
          description: This represents the latest timestamp at which the object was
            updated
          format: date-time
          example: '2022-07-11T07:44:49.619Z'
        id:
          type: string
          description: This represents the unique Id of the Object
          example: e7421121-d052-4fd9-861f-7ce57246134e
        orgId:
          type: string
          description: This represents the organization Id
          example: e7421121-d052-4fd9-861f-7ce57246134e
        location:
          type: string
          description: This represents the location
          example: US
        applicationId:
          type: string
        appVersionId:
          type: string
        packageInfrastructure:
          $ref: '#/components/schemas/ApplicationPackageEdgeDto'
    DataRequestDtoApplicationPackageUpdateDto:
      required:
      - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ApplicationPackageUpdateDto'
      description: Request Body for updating Application Package Capture
    ImageReferenceDto:
      type: object
      properties:
        streamId:
          type: string
          description: Stream Id of the image
          example: 625fe51bfdac3b4a3b3effbb
        versionId:
          type: string
          description: Version Id of the image
          example: 625fe51bfdac3b4a3b3effbc
        sourceResource:
          $ref: '#/components/schemas/SourceResourceDto'
      description: Schema for Image used in VMs
    SourceResourceDto:
      required:
      - id
      - kind
      type: object
      properties:
        kind:
          type: string
          description: Resource kind
          example: communityGalleryImages
        id:
          type: string
          description: Resource Id
          example: /CommunityGalleries/HorizonCloud-6e017acf-1286-4141-a696-4792a4a1e4a5/Images/Win11Ent/version/latest
        data:
          type: object
          additionalProperties:
            type: object
            description: Additional data (OS type, name, generation)
          description: Additional data (OS type, name, generation)
      description: Source for image resource
    AppShortcutDto:
      required:
      - appVersionId
      - applicationId
      - name
      - path
      type: object
      properties:
        createdAt:
          type: string
          description: This represents the timestamp at which the object was created
          format: date-time
          example: '2022-07-11T07:44:49.619Z'
        updatedAt:
          type: string
          description: This represents the latest timestamp at which the object was
            updated
          format: date-time
          example: '2022-07-11T07:44:49.619Z'
        id:
          type: string
          description: This represents the unique Id of the Object
          example: e7421121-d052-4fd9-861f-7ce57246134e
        orgId:
          type: string
          description: This represents the organization Id
          example: e7421121-d052-4fd9-861f-7ce57246134e
        location:
          type: string
          description: This represents the location
          example: US
        name:
          type: string
        path:
          type: string
        description:
          type: string
        publisher:
          type: string
        version:
          type: string
        targetApp:
          type: string
        hotKey:
          type: string
        iconIndex:
          type: string
        launchId:
          type: string
        icon:
          $ref: '#/components/schemas/BlobIconDto'
        fileTypeAssociations:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/FileTypeAssociationDto'
        applicationId:
          type: string
        appVersionId:
          type: string
        rawIcon:
          $ref: '#/components/schemas/IconDto'
        markerIds:
          type: array
          items:
            type: string
        providerInstanceIds:
          uniqueItems: true
          type: array
          items:
            type: string
    AppVersionDto:
      required:
      - applicationId
      - name
      type: object
      properties:
        createdAt:
          type: string
          description: This represents the timestamp at which the object was created
          format: date-time
          example: '2022-07-11T07:44:49.619Z'
        updatedAt:
          type: string
          description: This represents the latest timestamp at which the object was
            updated
          format: date-time
          example: '2022-07-11T07:44:49.619Z'
        id:
          type: string
          description: This represents the unique Id of the Object
          example: e7421121-d052-4fd9-861f-7ce57246134e
        orgId:
          type: string
          description: This represents the organization Id
          example: e7421121-d052-4fd9-861f-7ce57246134e
        location:
          type: string
          description: This represents the location
          example: US
        bundleGuid:
          type: string
        name:
          type: string
        description:
          maxLength: 64000
          minLength: 0
          type: string
        applicationId:
          type: string
        version:
          type: string
        lifecycleStage:
          type: string
          enum:
          - UNPACKAGED
          - NEW
          - TESTED
          - PUBLISHED
          - RETIRED
        packagerNotes:
          maxLength: 64000
          minLength: 0
          type: string
        deliveryFormat:
          type: string
        deliveryMode:
          type: string
          enum:
          - CLASSIC
          - ONDEMAND
        operatingSystem:
          $ref: '#/components/schemas/OperatingSystemDto'
        packages:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/PackageDto'
        programs:
          type: array
          items:
            $ref: '#/components/schemas/ProgramDto'
        onDemandData:
          $ref: '#/components/schemas/OnDemandDataDto'
        application:
          $ref: '#/components/schemas/ApplicationDto'
        markerIds:
          type: array
          items:
            type: string
        status:
          type: string
          enum:
          - PENDING_DELETE
          - DELETE_FAILED
        shortcuts:
          type: array
          items:
            $ref: '#/components/schemas/AppShortcutDto'
    ApplicationDto:
      required:
      - name
      type: object
      properties:
        createdAt:
          type: string
          description: This represents the timestamp at which the object was created
          format: date-time
          example: '2022-07-11T07:44:49.619Z'
        updatedAt:
          type: string
          description: This represents the latest timestamp at which the object was
            updated
          format: date-time
          example: '2022-07-11T07:44:49.619Z'
        id:
          type: string
          description: This represents the unique Id of the Object
          example: e7421121-d052-4fd9-861f-7ce57246134e
        orgId:
          type: string
          description: This represents the organization Id
          example: e7421121-d052-4fd9-861f-7ce57246134e
        location:
          type: string
          description: This represents the location
          example: US
        name:
          type: string
        description:
          type: string
        appVersions:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/AppVersionDto'
        ownerId:
          type: string
        status:
          type: string
          enum:
          - PENDING_DELETE
          - DELETE_FAILED
    BlobIconDto:
      type: object
      properties:
        type:
          type: string
        url:
          type: string
        name:
          type: string
    FileTypeAssociationDto:
      required:
      - action
      - icon
      - typeName
      type: object
      properties:
        createdAt:
          type: string
          description: This represents the timestamp at which the object was created
          format: date-time
          example: '2022-07-11T07:44:49.619Z'
        updatedAt:
          type: string
          description: This represents the latest timestamp at which the object was
            updated
          format: date-time
          example: '2022-07-11T07:44:49.619Z'
        id:
          type: string
          description: This represents the unique Id of the Object
          example: e7421121-d052-4fd9-861f-7ce57246134e
        orgId:
          type: string
          description: This represents the organization Id
          example: e7421121-d052-4fd9-861f-7ce57246134e
        location:
          type: string
          description: This represents the location
          example: US
        typeName:
          type: string
        friendlyName:
          type: string
        action:
          type: string
        icon:
          $ref: '#/components/schemas/BlobIconDto'
        rawIcon:
          $ref: '#/components/schemas/IconDto'
    FtaDto:
      required:
      - name
      type: object
      properties:
        createdAt:
          type: string
          description: This represents the timestamp at which the object was created
          format: date-time
          example: '2022-07-11T07:44:49.619Z'
        updatedAt:
          type: string
          description: This represents the latest timestamp at which the object was
            updated
          format: date-time
          example: '2022-07-11T07:44:49.619Z'
        id:
          type: string
          description: This represents the unique Id of the Object
          example: e7421121-d052-4fd9-861f-7ce57246134e
        orgId:
          type: string
          description: This represents the organization Id
          example: e7421121-d052-4fd9-861f-7ce57246134e
        location:
          type: string
          description: This represents the location
          example: US
        name:
          type: string
        progId:
          type: string
        openWithProgIds:
          type: array
          items:
            type: string
    IconDto:
      type: object
      properties:
        type:
          type: string
        data:
          type: string
    OnDemandDataDto:
      required:
      - name
      type: object
      properties:
        createdAt:
          type: string
          description: This represents the timestamp at which the object was created
          format: date-time
          example: '2022-07-11T07:44:49.619Z'
        updatedAt:
          type: string
          description: This represents the latest timestamp at which the object was
            updated
          format: date-time
          example: '2022-07-11T07:44:49.619Z'
        id:
          type: string
          description: This represents the unique Id of the Object
          example: e7421121-d052-4fd9-861f-7ce57246134e
        orgId:
          type: string
          description: This represents the organization Id
          example: e7421121-d052-4fd9-861f-7ce57246134e
        location:
          type: string
          description: This represents the location
          example: US
        name:
          type: string
        shortcuts:
          type: array
          items:
            $ref: '#/components/schemas/AppShortcutDto'
        onDemandNonMsixData:
          $ref: '#/components/schemas/OnDemandNonMsixDataDto'
        iconIndices:
          type: array
          items:
            type: integer
            format: int32
    OnDemandNonMsixDataDto:
      required:
      - fta
      type: object
      properties:
        createdAt:
          type: string
          description: This represents the timestamp at which the object was created
          format: date-time
          example: '2022-07-11T07:44:49.619Z'
        updatedAt:
          type: string
          description: This represents the latest timestamp at which the object was
            updated
          format: date-time
          example: '2022-07-11T07:44:49.619Z'
        id:
          type: string
          description: This represents the unique Id of the Object
          example: e7421121-d052-4fd9-861f-7ce57246134e
        orgId:
          type: string
          description: This represents the organization Id
          example: e7421121-d052-4fd9-861f-7ce57246134e
        location:
          type: string
          description: This represents the location
          example: US
        fta:
          type: array
          items:
            $ref: '#/components/schemas/FtaDto'
        progIds:
          type: array
          items:
            $ref: '#/components/schemas/ProgIdDto'
    OperatingSystemDto:
      required:
      - name
      type: object
      properties:
        name:
          type: string
        buildVersion:
          type: string
        majorVersion:
          type: string
        minorVersion:
          type: string
        processorArch:
          type: string
        productType:
          type: string
        friendlyName:
          type: string
    PackageDto:
      required:
      - filename
      - metadata
      - path
      - providerInstanceId
      - sourceUri
      type: object
      properties:
        createdAt:
          type: string
          description: This represents the timestamp at which the object was created
          format: date-time
          example: '2022-07-11T07:44:49.619Z'
        updatedAt:
          type: string
          description: This represents the latest timestamp at which the object was
            updated
          format: date-time
          example: '2022-07-11T07:44:49.619Z'
        id:
          type: string
          description: This represents the unique Id of the Object
          example: e7421121-d052-4fd9-861f-7ce57246134e
        orgId:
          type: string
          description: This represents the organization Id
          example: e7421121-d052-4fd9-861f-7ce57246134e
        location:
          type: string
          description: This represents the location
          example: US
        guid:
          type: string
        volumeGuid:
          type: string
        sourceUri:
          type: string
        path:
          type: string
        filename:
          type: string
        fileSize:
          type: integer
          format: int64
        template:
          type: string
        providerInstanceIds:
          uniqueItems: true
          type: array
          items:
            type: string
        appVersionIds:
          uniqueItems: true
          type: array
          items:
            type: string
        providerInstanceId:
          type: string
        metadata:
          type: string
        status:
          type: string
          enum:
          - PENDING_DELETE
          - DELETE_FAILED
        blobName:
          type: string
    ProgIdDto:
      type: object
      properties:
        createdAt:
          type: string
          description: This represents the timestamp at which the object was created
          format: date-time
          example: '2022-07-11T07:44:49.619Z'
        updatedAt:
          type: string
          description: This represents the latest timestamp at which the object was
            updated
          format: date-time
          example: '2022-07-11T07:44:49.619Z'
        id:
          type: string
          description: This represents the unique Id of the Object
          example: e7421121-d052-4fd9-861f-7ce57246134e
        orgId:
          type: string
          description: This represents the organization Id
          example: e7421121-d052-4fd9-861f-7ce57246134e
        location:
          type: string
          description: This represents the location
          example: US
        name:
          type: string
        description:
          type: string
        defaultIcon:
          type: integer
          format: int32
        verbs:
          type: array
          items:
            $ref: '#/components/schemas/VerbDto'
    ProgramDto:
      type: object
      properties:
        name:
          type: string
        publisher:
          type: string
        installLocation:
          type: string
        version:
          type: string
        systemComponent:
          type: integer
          format: int32
        icon:
          $ref: '#/components/schemas/IconDto'
        iconIndex:
          type: string
    VerbDto:
      type: object
      properties:
        createdAt:
          type: string
          description: This represents the timestamp at which the object was created
          format: date-time
          example: '2022-07-11T07:44:49.619Z'
        updatedAt:
          type: string
          description: This represents the latest timestamp at which the object was
            updated
          format: date-time
          example: '2022-07-11T07:44:49.619Z'
        id:
          type: string
          description: This represents the unique Id of the Object
          example: e7421121-d052-4fd9-861f-7ce57246134e
        orgId:
          type: string
          description: This represents the organization Id
          example: e7421121-d052-4fd9-861f-7ce57246134e
        location:
          type: string
          description: This represents the location
          example: US
        name:
          type: string
        displayName:
          type: string
        targetApp:
          type: string
        extended:
          type: boolean
    DataRequestDtoApplicationDto:
      required:
      - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ApplicationDto'
      description: Schema to create an application
    DataRequestDtoImportRequestDto:
      required:
      - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ImportRequestDto'
      description: Schema for request for import
    ImportRequestDto:
      required:
      - providerInstanceId
      type: object
      properties:
        providerInstanceId:
          pattern: ^[0-9a-f]{24}$
          type: string
        rescan:
          type: boolean
    ImportResponseDto:
      type: object
      properties:
        importStatus:
          type: string
    ApplicationPackageDto:
      type: object
      properties:
        createdAt:
          type: string
          description: This represents the timestamp at which the object was created
          format: date-time
          example: '2022-07-11T07:44:49.619Z'
        updatedAt:
          type: string
          description: This represents the latest timestamp at which the object was
            updated
          format: date-time
          example: '2022-07-11T07:44:49.619Z'
        id:
          type: string
          description: This represents the unique Id of the Object
          example: e7421121-d052-4fd9-861f-7ce57246134e
        orgId:
          type: string
          description: This represents the organization Id
          example: e7421121-d052-4fd9-861f-7ce57246134e
        location:
          type: string
          description: This represents the location
          example: US
        applicationName:
          type: string
        applicationDescription:
          type: string
        applicationId:
          type: string
        ownerId:
          type: string
        packageInfrastructure:
          $ref: '#/components/schemas/ApplicationPackageEdgeDto'
    DataRequestDtoApplicationPackageDto:
      required:
      - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ApplicationPackageDto'
      description: Request Body for creating Application Package Capture
    PageAppVersionDto:
      type: object
      properties:
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: '#/components/schemas/AppVersionDto'
        number:
          type: integer
          format: int32
        sort:
          type: array
          items:
            $ref: '#/components/schemas/SortObject'
        first:
          type: boolean
        last:
          type: boolean
        numberOfElements:
          type: integer
          format: int32
        pageable:
          $ref: '#/components/schemas/PageableObject'
        empty:
          type: boolean
    DataRequestDtoMapStringString:
      required:
      - data
      type: object
      properties:
        data:
          type: object
          additionalProperties:
            type: string
    SearchablePredicateApplicationDto:
      type: object
      properties:
        spec:
          $ref: '#/components/schemas/Predicate'
    PageApplicationDto:
      type: object
      properties:
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: '#/components/schemas/ApplicationDto'
        number:
          type: integer
          format: int32
        sort:
          type: array
          items:
            $ref: '#/components/schemas/SortObject'
        first:
          type: boolean
        last:
          type: boolean
        numberOfElements:
          type: integer
          format: int32
        pageable:
          $ref: '#/components/schemas/PageableObject'
        empty:
          type: boolean
    SearchablePredicateAppVersionDto:
      type: object
      properties:
        spec:
          $ref: '#/components/schemas/Predicate'
    EntityDto:
      required:
      - entityId
      - entityType
      type: object
      properties:
        entityId:
          pattern: ^[{]?[0-9a-fA-F]{8}-([0-9a-fA-F]{4}-){3}[0-9a-fA-F]{12}[}]?$|^[a-f\d]{24}$
          type: string
        entityType:
          pattern: ^(user|group|pool_group)$
          type: string
    AppEntitlementDto:
      required:
      - applicationId
      - entityId
      - entityType
      type: object
      properties:
        createdAt:
          type: string
          description: This represents the timestamp at which the object was created
          format: date-time
          example: '2022-07-11T07:44:49.619Z'
        updatedAt:
          type: string
          description: This represents the latest timestamp at which the object was
            updated
          format: date-time
          example: '2022-07-11T07:44:49.619Z'
        id:
          type: string
          description: This represents the unique Id of the Object
          example: e7421121-d052-4fd9-861f-7ce57246134e
        orgId:
          type: string
          description: This represents the organization Id
          example: e7421121-d052-4fd9-861f-7ce57246134e
        location:
          type: string
          description: This represents the location
          example: US
        entityId:
          pattern: ^[{]?[0-9a-fA-F]{8}-([0-9a-fA-F]{4}-){3}[0-9a-fA-F]{12}[}]?$|^[a-f\d]{24}$
          type: string
        entityType:
          pattern: ^(user|group|pool_group)$
          type: string
        applicationId:
          type: string
        markerId:
          type: string
        appVersionId:
          type: string
        deliveryMode:
          type: string
          enum:
          - CLASSIC
          - ONDEMAND
        status:
          type: string
          enum:
          - PENDING
          - SUCCESS
          - FAILED
        entitlementType:
          type: string
          enum:
          - APP_VOLUMES
          - PUBLISHED_APPS_ON_DEMAND
    AppDto:
      required:
      - applicationId
      type: object
      properties:
        applicationId:
          type: string
        appVersionId:
          type: string
        markerId:
          type: string
        referenceGuid:
          type: string
        appShortcutLaunchId:
          type: string
    DataRequestDtoDeleteEntitlementsRequestDto:
      required:
      - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/DeleteEntitlementsRequestDto'
    DeleteEntitlementsRequestDto:
      type: object
      properties:
        appEntitlementIds:
          type: array
          items:
            type: string
        entitlementDetailsList:
          type: array
          items:
            $ref: '#/components/schemas/EntitlementDetails'
    EntitlementDetails:
      type: object
      properties:
        applicationId:
          type: string
        entityId:
          type: string
        entitlementType:
          type: string
          enum:
          - APP_VOLUMES
          - PUBLISHED_APPS_ON_DEMAND
    RequestAcceptedResponseDto:
      type: object
      properties:
        href:
          type: string
    CreateEntitlementsRequestDto:
      required:
      - apps
      - entities
      type: object
      properties:
        orgId:
          type: string
        location:
          type: string
        entities:
          type: array
          items:
            $ref: '#/components/schemas/EntityDto'
        apps:
          type: array
          items:
            $ref: '#/components/schemas/AppDto'
        deliveryMode:
          type: string
          enum:
          - CLASSIC
          - ONDEMAND
        overwrite:
          type: boolean
        entitlementType:
          type: string
          enum:
          - APP_VOLUMES
          - PUBLISHED_APPS_ON_DEMAND
    DataRequestDtoCreateEntitlementsRequestDto:
      required:
      - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/CreateEntitlementsRequestDto'
    SearchablePredicateAppEntitlementDto:
      type: object
      properties:
        spec:
          $ref: '#/components/schemas/Predicate'
    PageAppEntitlementDto:
      type: object
      properties:
        totalPages:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        pageable:
          $ref: '#/components/schemas/PageableObject'
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: '#/components/schemas/AppEntitlementDto'
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/SortObject'
        first:
          type: boolean
        last:
          type: boolean
        numberOfElements:
          type: integer
          format: int32
        empty:
          type: boolean
    FileshareCredentialDto:
      type: object
      properties:
        storageAccountName:
          type: string
        storageAccountKey:
          type: array
          items:
            type: string
        primaryStorageEndpoint:
          type: string
    FileshareDto:
      required:
      - credentialId
      - deploymentProviderInstanceId
      - name
      - providerInstanceId
      - type
      type: object
      properties:
        createdAt:
          type: string
          description: This represents the timestamp at which the object was created
          format: date-time
          example: '2022-07-11T07:44:49.619Z'
        updatedAt:
          type: string
          description: This represents the latest timestamp at which the object was
            updated
          format: date-time
          example: '2022-07-11T07:44:49.619Z'
        id:
          type: string
          description: This represents the unique Id of the Object
          example: e7421121-d052-4fd9-861f-7ce57246134e
        orgId:
          type: string
          description: This represents the organization Id
          example: e7421121-d052-4fd9-861f-7ce57246134e
        location:
          type: string
          description: This represents the location
          example: US
        name:
          type: string
        path:
          type: string
        providerInstanceId:
          type: string
        deploymentProviderInstanceId:
          type: string
        type:
          type: string
        category:
          type: string
          enum:
          - STAGING
          - DELIVERY
        status:
          type: string
        credentialId:
          type: string
        quotaGB:
          type: integer
          format: int64
        usageBytes:
          type: integer
          format: int64
        credential:
          $ref: '#/components/schemas/FileshareCredentialDto'
        storageAccountId:
          type: string
        displayPath:
          type: string
    SearchablePredicateFileshareDto:
      type: object
      properties:
        spec:
          $ref: '#/components/schemas/Predicate'
    PageFileshareDto:
      type: object
      properties:
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: '#/components/schemas/FileshareDto'
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/SortObject'
        first:
          type: boolean
        last:
          type: boolean
        numberOfElements:
          type: integer
          format: int32
        pageable:
          $ref: '#/components/schemas/PageableObject'
        empty:
          type: boolean
    ActivityResponseRepresentation:
      required:
      - createdAt
      - id
      - initiator
      - initiatorType
      - location
      - operation
      - orgId
      - serviceId
      - severity
      - status
      - type
      - updatedAt
      - utcTimestamp
      - version
      type: object
      properties:
        edgeId:
          type: string
          description: If the activity is associated with any edge based resource,
            this field contains identifier of the edge deployment.
          readOnly: true
        edgeName:
          type: string
          description: If the activity is associated with any edge based resource,
            this field contains name of the edge deployment.
          readOnly: true
        siteId:
          type: string
          description: If the activity is associated with any edge based resource,
            this field contains identifier of the site to which the respective edge
            belongs.
          readOnly: true
        siteName:
          type: string
          description: If the activity is associated with any edge based resource,
            this field contains name of the site to which the respective edge belongs.
          readOnly: true
        operation:
          type: string
          description: Internal name to uniquely identify an audit or activity.
          readOnly: true
          example: EDGE_DEPLOYMENT_CREATE_REQUESTED
        operationName:
          type: string
          description: Friendly name for an operation.
          readOnly: true
          example: Edge deployment creation requested
        type:
          type: string
          description: Type of the Activity.
          readOnly: true
          example: SYSTEM
          enum:
          - AUDIT
          - SYSTEM
          - AUDIT, SYSTEM
        status:
          type: string
          description: Status of the Activity
          readOnly: true
          example: SUCCESS
          enum:
          - SUCCESS
          - FAILED
          - IN_PROGRESS
          - QUEUED
          - CANCELLED
          - CANCELLING
          - UPDATING
          - SUCCESS, FAILED, IN PROGRESS, QUEUED, CANCELLED, CANCELLING, UPDATING
        description:
          type: string
          description: Detailed description of the operation
          readOnly: true
          example: Creation of edge deployment MyTestEdge requested
        progress:
          type: integer
          format: int32
        initiator:
          type: string
          description: Name of the initiator who performed the activity. For system
            performed operations, it will be SYSTEM. For VMware OPS performed operations,
            it will be VMware Operations.
          readOnly: true
          example: admin1@customer.com
        utcTimestamp:
          type: string
          description: UTC Timestamp at which the Activity was performed.
          format: date-time
          readOnly: true
          example: '2023-08-10T02:32:39.779Z'
        serviceId:
          type: string
          description: Internal identifier of the service which published the activity.
          readOnly: true
          example: admin
        orgId:
          type: string
          description: Id of the CSP org.
          readOnly: true
        details:
          type: string
          description: Attributes used in activity description.
          readOnly: true
        traceId:
          type: string
          description: An internal co-relation ID used for activity tracing.
          readOnly: true
        resourceId:
          type: string
          description: Identifier of the resource on which activity was performed.
          readOnly: true
        resourceName:
          type: string
          description: Name of the resource on which activity was performed.
          readOnly: true
          example: MyTestPool
        resourceType:
          type: string
          description: Type of the resource on which activity was performed.
          readOnly: true
          example: Pool
        severity:
          type: string
          description: Severity of the activity.
          readOnly: true
          example: INFORMATION
          enum:
          - CRITICAL
          - WARNING
          - INFORMATION
          - ERROR
          - CRITICAL, WARNING, INFORMATION, ERROR
        externalId:
          type: string
          description: An identifier used for event co-relation.
          readOnly: true
        externalParentId:
          type: string
          description: An identifier used for parent and child activity co-relation.
          readOnly: true
        parentId:
          type: string
          description: Id of parent activity. This will be set only for child activities.
          readOnly: true
          deprecated: true
        providerInstanceId:
          type: string
          description: If the activity is associated with any provider based resource,
            this field contains identifier of respective provider instance.
          readOnly: true
        location:
          type: string
          description: Org location preference.
          readOnly: true
          example: US
        initiatorType:
          type: string
          description: Type of the initiator who performed the operation.
          readOnly: true
          example: CUSTOMER_ADMIN
          enum:
          - CUSTOMER_ADMIN
          - OPS_ADMIN
          - VMWARE_SERVICE
          - OPS_ADMIN, VMWARE_SERVICE, CUSTOMER_ADMIN
        eventId:
          type: string
          description: Internal identifier used for event ID.
          readOnly: true
        isLatest:
          type: boolean
          description: Identify whether an activity is latest among multiple activities
            created for an operation.
          readOnly: true
          example: true
          enum:
          - false
        errorMessage:
          type: string
          description: Error message.
          readOnly: true
        id:
          type: string
          description: Auto generated unique ID.
          readOnly: true
        createdAt:
          type: string
          description: Creation date of the activity.
          format: date-time
          readOnly: true
          example: '2023-08-10T08:02:40.437Z'
        updatedAt:
          type: string
          description: Date at which activity was updated previously.
          format: date-time
          readOnly: true
          example: '2023-08-10T08:02:40.437Z'
        version:
          type: integer
          description: Internal version of the document.
          format: int64
          readOnly: true
    ActivityRequestRepresentation:
      required:
      - initiator
      - initiatorType
      - location
      - operation
      - orgId
      - serviceId
      - severity
      - status
      - type
      - utcTimestamp
      type: object
      properties:
        edgeId:
          type: string
          description: If the activity is associated with any edge based resource,
            this field contains identifier of the edge deployment.
          readOnly: true
        edgeName:
          type: string
          description: If the activity is associated with any edge based resource,
            this field contains name of the edge deployment.
          readOnly: true
        siteId:
          type: string
          description: If the activity is associated with any edge based resource,
            this field contains identifier of the site to which the respective edge
            belongs.
          readOnly: true
        siteName:
          type: string
          description: If the activity is associated with any edge based resource,
            this field contains name of the site to which the respective edge belongs.
          readOnly: true
        operation:
          type: string
          description: Internal name to uniquely identify an audit or activity.
          readOnly: true
          example: EDGE_DEPLOYMENT_CREATE_REQUESTED
        operationName:
          type: string
          description: Friendly name for an operation.
          readOnly: true
          example: Edge deployment creation requested
        type:
          type: string
          description: Type of the Activity.
          readOnly: true
          example: SYSTEM
          enum:
          - AUDIT
          - SYSTEM
          - AUDIT, SYSTEM
        status:
          type: string
          description: Status of the Activity
          readOnly: true
          example: SUCCESS
          enum:
          - SUCCESS
          - FAILED
          - IN_PROGRESS
          - QUEUED
          - CANCELLED
          - CANCELLING
          - UPDATING
          - SUCCESS, FAILED, IN PROGRESS, QUEUED, CANCELLED, CANCELLING, UPDATING
        description:
          type: string
          description: Detailed description of the operation
          readOnly: true
          example: Creation of edge deployment MyTestEdge requested
        progress:
          type: integer
          format: int32
        initiator:
          type: string
          description: Name of the initiator who performed the activity. For system
            performed operations, it will be SYSTEM. For VMware OPS performed operations,
            it will be VMware Operations.
          readOnly: true
          example: admin1@customer.com
        utcTimestamp:
          type: string
          description: UTC Timestamp at which the Activity was performed.
          format: date-time
          readOnly: true
          example: '2023-08-10T02:32:39.779Z'
        serviceId:
          type: string
          description: Internal identifier of the service which published the activity.
          readOnly: true
          example: admin
        orgId:
          type: string
          description: Id of the CSP org.
          readOnly: true
        details:
          type: string
          description: Attributes used in activity description.
          readOnly: true
        traceId:
          type: string
          description: An internal co-relation ID used for activity tracing.
          readOnly: true
        resourceId:
          type: string
          description: Identifier of the resource on which activity was performed.
          readOnly: true
        resourceName:
          type: string
          description: Name of the resource on which activity was performed.
          readOnly: true
          example: MyTestPool
        resourceType:
          type: string
          description: Type of the resource on which activity was performed.
          readOnly: true
          example: Pool
        severity:
          type: string
          description: Severity of the activity.
          readOnly: true
          example: INFORMATION
          enum:
          - CRITICAL
          - WARNING
          - INFORMATION
          - ERROR
          - CRITICAL, WARNING, INFORMATION, ERROR
        externalId:
          type: string
          description: An identifier used for event co-relation.
          readOnly: true
        externalParentId:
          type: string
          description: An identifier used for parent and child activity co-relation.
          readOnly: true
        parentId:
          type: string
          description: Id of parent activity. This will be set only for child activities.
          readOnly: true
          deprecated: true
        providerInstanceId:
          type: string
          description: If the activity is associated with any provider based resource,
            this field contains identifier of respective provider instance.
          readOnly: true
        location:
          type: string
          description: Org location preference.
          readOnly: true
          example: US
        initiatorType:
          type: string
          description: Type of the initiator who performed the operation.
          readOnly: true
          example: CUSTOMER_ADMIN
          enum:
          - CUSTOMER_ADMIN
          - OPS_ADMIN
          - VMWARE_SERVICE
          - OPS_ADMIN, VMWARE_SERVICE, CUSTOMER_ADMIN
        eventId:
          type: string
          description: Internal identifier used for event ID.
          readOnly: true
        isLatest:
          type: boolean
          description: Identify whether an activity is latest among multiple activities
            created for an operation.
          readOnly: true
          example: true
          enum:
          - false
        errorMessage:
          type: string
          description: Error message.
          readOnly: true
    PageActivityResponseRepresentation:
      type: object
      properties:
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int32
        pageable:
          $ref: '#/components/schemas/PageableObject'
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: '#/components/schemas/ActivityResponseRepresentation'
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/SortObject'
        first:
          type: boolean
        last:
          type: boolean
        numberOfElements:
          type: integer
          format: int32
        empty:
          type: boolean
    ClientBaseRequest:
      type: object
      properties:
        clientInfo:
          $ref: '#/components/schemas/ClientInfo'
        deviceId:
          type: string
          description: device id
          example: AgAAAGtPUl94FBxnaMvY9trtD9s=
    ClientInfo:
      type: object
      properties:
        clientType:
          type: string
        clientVersion:
          type: string
      description: The information of horizon client
      example: '{clientType: ''WINDOWS'', clientVersion: ''8.5.0''}'
    RDSLicenseTO:
      type: object
      properties:
        rdsLicense:
          type: array
          description: rds license
          example: '[''dXZ3eHl6......'']'
          items:
            type: string
            description: rds license
            example: '[''dXZ3eHl6......'']'
    RDSLicenseRequest:
      type: object
      properties:
        clientInfo:
          $ref: '#/components/schemas/ClientInfo'
        deviceId:
          type: string
          description: device id
          example: AgAAAGtPUl94FBxnaMvY9trtD9s=
        rdsLicense:
          type: array
          description: rds license
          example: '[''dXZ3eHl6......'']'
          items:
            type: string
            description: rds license
            example: '[''dXZ3eHl6......'']'
    ClientPolicyTO:
      type: object
    Preference:
      type: object
      properties:
        name:
          type: string
        value:
          type: string
      description: User preferences of web client
      example: '[{''name'':''6028f479ae42263399104f58'', ''value'':''blast''}]'
    ProfileTO:
      type: object
      properties:
        userName:
          type: string
          description: The user name of horizon client
          example: user name
        domain:
          type: string
          description: The user domain of horizon client
          example: user domain
        orgLocation:
          type: string
          description: The org location of user
          example: US
        protocols:
          type: array
          description: User selected protocol for entitlement
          example: '[{''id'':''6028f479ae42263399104f58'', ''type'':''blast''}]'
          items:
            $ref: '#/components/schemas/Protocol'
        favorites:
          type: array
          description: favorite entitlements selected by users
          example: '[6028f479ae42263399104f58]'
          items:
            type: string
            description: favorite entitlements selected by users
            example: '[6028f479ae42263399104f58]'
        webPreferences:
          type: array
          description: User preferences of web client
          example: '[{''name'':''6028f479ae42263399104f58'', ''value'':''blast''}]'
          items:
            $ref: '#/components/schemas/Preference'
        clientPolicy:
          $ref: '#/components/schemas/ClientPolicyTO'
        urlConfigs:
          type: array
          description: URL redirection rules applied to current user
          example: '[{''protocol'':''http'',''remoteItemType'': ''Application'',''remoteItem'':''Chrome'',''clientURLPatterns'':''*.cloud.vmware.com'',''agentURLPatterns'':''*.vmware.com''}]'
          items:
            $ref: '#/components/schemas/URLProtocolConfig'
        rdsLicense:
          type: array
          description: Per-device RDS license
          example: '[dXZ3eHl6......]'
          items:
            type: string
            description: Per-device RDS license
            example: '[dXZ3eHl6......]'
        blockMessage:
          type: string
          description: The message shown when the client is blocked
          example: The client is deprecated. Please upgrade it.
        warningMessage:
          type: string
          description: The warning message shown when the client is warned
          example: The client is not recommended to use. Please upgrade it.
    URLProtocolConfig:
      required:
      - agentURLPatterns
      - clientURLPatterns
      - protocol
      - remoteItem
      - remoteItemType
      type: object
      properties:
        protocol:
          type: string
          description: The URL scheme that should be redirected
          example: http
        remoteItemType:
          type: string
          description: The remote item type that the local URL should be redirected
            to
          example: Desktop
        remoteItem:
          type: string
          description: The remote item that the local URL should be redirected to
          example: CN=Win10,CN=Computers,DC=example,DC=com
        clientURLPatterns:
          type: array
          description: The List of URLs/regex that should always be opened on local
            machine where view client is running
          example: '[''*.cloud.vmware.com'', ''*.zoom.com'']'
          items:
            type: string
            description: The List of URLs/regex that should always be opened on local
              machine where view client is running
            example: '[''*.cloud.vmware.com'', ''*.zoom.com'']'
        agentURLPatterns:
          type: array
          description: The List of URLs/regex that should always be opened on remote
            desktop to which user is connected
          example: '[''*.vmware.com'', ''*.github.com'']'
          items:
            type: string
            description: The List of URLs/regex that should always be opened on remote
              desktop to which user is connected
            example: '[''*.vmware.com'', ''*.github.com'']'
      description: URL redirection rules applied to current user
      example: '[{''protocol'':''http'',''remoteItemType'': ''Application'',''remoteItem'':''Chrome'',''clientURLPatterns'':''*.cloud.vmware.com'',''agentURLPatterns'':''*.vmware.com''}]'
    TenantVanityTO:
      required:
      - enable
      - vanity
      type: object
      properties:
        enable:
          type: boolean
          description: whether the vanity is enabled or not
          example: false
        vanity:
          type: string
          description: the subdomain for vanity URLs
          example: vmware
        alternatives:
          uniqueItems: true
          type: array
          description: all valid subdomain of vanity URLs for current domain
          example: '[vmw, vmware]'
          items:
            type: string
            description: all valid subdomain of vanity URLs for current domain
            example: '[vmw, vmware]'
        domain:
          type: string
          description: the primary domain for vanity URLs
          example: vmwhorizon.com
      description: vanity URL setting
    ClientRestrictionTO:
      type: object
      properties:
        configs:
          type: array
          description: Client restriction configurations for different clients
          example: '[{''clientType'':''Windows'', ''blockEarlierThan'':''8.12.0'',''blockSpecificVersions'':[],
            ''warningSpecificVersions'':[]}]'
          items:
            $ref: '#/components/schemas/RestrictionConfig'
        blockMessage:
          type: string
          description: Message for blocking connections
          example: Block message
        warningMessage:
          type: string
          description: Warning message for deprecated clients
          example: Warning message
        blockOtherClients:
          type: boolean
          description: Whether to block clients not listed in configs
          example: true
      description: Client restriction setting
    RebrandingItemTO:
      type: object
      properties:
        attribute:
          type: string
        value:
          type: string
        type:
          type: string
    RebrandingTO:
      type: object
      properties:
        enable:
          type: boolean
        cache:
          type: boolean
        attributes:
          type: array
          items:
            $ref: '#/components/schemas/RebrandingItemTO'
        configuredLanguages:
          type: array
          items:
            type: string
    RestrictionConfig:
      type: object
      properties:
        clientType:
          type: string
        blockEarlierThan:
          type: string
        blockSpecificVersions:
          type: array
          items:
            type: string
        warnSpecificVersions:
          type: array
          items:
            type: string
      description: Client restriction configurations for different clients
      example: '[{''clientType'':''Windows'', ''blockEarlierThan'':''8.12.0'',''blockSpecificVersions'':[],
        ''warningSpecificVersions'':[]}]'
    TenantClientSettingTO:
      type: object
      properties:
        enablePreLoginMessage:
          type: boolean
          description: whether to enable or disable client disclaimer dialog
          example: false
        preLoginMessage:
          type: string
          description: Pre-Login message for client disclaimer dialog
          example: This is disclaimer dialog
    TenantSettingTO:
      type: object
      properties:
        orgId:
          type: string
        vanity:
          $ref: '#/components/schemas/TenantVanityTO'
        clientSetting:
          $ref: '#/components/schemas/TenantClientSettingTO'
        rebrand:
          $ref: '#/components/schemas/RebrandingTO'
        clientRestriction:
          $ref: '#/components/schemas/ClientRestrictionTO'
    ProfileExtendedRequest:
      type: object
      properties:
        clientInfo:
          $ref: '#/components/schemas/ClientInfo'
        deviceId:
          type: string
          description: device id
          example: AgAAAGtPUl94FBxnaMvY9trtD9s=
        supportedFeatures:
          type: array
          description: Supported features
          example: '[''web-preference'', ''url-setting'']'
          items:
            type: string
            description: Supported features
            example: '[''web-preference'', ''url-setting'']'
    CreateCustomDefinedDomainTO:
      type: object
      properties:
        enable:
          type: boolean
          description: enable/disable custom-defined FQDN feature
        certificate:
          type: string
          description: The p12 Certificate for custom-defined FQDN in base64 format
        password:
          type: array
          description: The password for the certificate
          items:
            type: string
            description: The password for the certificate
        hostName:
          type: string
          description: The custom-defined FQDN for current tenant.
          example: vdi.vmware.com
    CustomDefinedDomainTO:
      type: object
      properties:
        hostName:
          type: string
          description: The custom-defined FQDN for current tenant.
          example: vdi.vmware.com
        enabled:
          type: boolean
          description: Whether the custom-defined FQDN feature is enabled or not
          example: false
        expirationDate:
          type: string
          description: The Certificate's Expiration Date for custom-defined FQDN
          example: '2023-09-11T08:40:04+00:00'
        status:
          type: string
          description: The deployment status for custom-defined FQDN feature
          example: Creating / Ready / Error
        detail:
          type: string
          description: the detail explanation for above status.
          example: The Horizon Cloud Service is creating the domain
        code:
          type: string
          description: the error code for deployment progress
          example: '200'
        endpointAssociation:
          type: string
          description: 'the domain that the CNAME of custom-defined FQDN mapping to '
          example: vmwhorizon.com
    UpdateCustomDefinedDomainTO:
      type: object
      properties:
        enable:
          type: boolean
          description: enable/disable custom-defined FQDN feature
        certificate:
          type: string
          description: The p12 Certificate for custom-defined FQDN in base64 format
        password:
          type: array
          description: The password for the certificate
          items:
            type: string
            description: The password for the certificate
